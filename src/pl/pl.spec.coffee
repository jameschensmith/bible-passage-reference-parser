bcv_parser = require("../../js/pl_bcv_parser.js").bcv_parser

describe "Parsing", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.options.osis_compaction_strategy = "b"
		p.options.sequence_combination_strategy = "combine"

	it "should round-trip OSIS references", ->
		p.set_options osis_compaction_strategy: "bc"
		books = ["Gen","Exod","Lev","Num","Deut","Josh","Judg","Ruth","1Sam","2Sam","1Kgs","2Kgs","1Chr","2Chr","Ezra","Neh","Esth","Job","Ps","Prov","Eccl","Song","Isa","Jer","Lam","Ezek","Dan","Hos","Joel","Amos","Obad","Jonah","Mic","Nah","Hab","Zeph","Hag","Zech","Mal","Matt","Mark","Luke","John","Acts","Rom","1Cor","2Cor","Gal","Eph","Phil","Col","1Thess","2Thess","1Tim","2Tim","Titus","Phlm","Heb","Jas","1Pet","2Pet","1John","2John","3John","Jude","Rev"]
		for book in books
			bc = book + ".1"
			bcv = bc + ".1"
			bcv_range = bcv + "-" + bc + ".2"
			expect(p.parse(bc).osis()).toEqual bc
			expect(p.parse(bcv).osis()).toEqual bcv
			expect(p.parse(bcv_range).osis()).toEqual bcv_range

	it "should round-trip OSIS Apocrypha references", ->
		p.set_options osis_compaction_strategy: "bc", ps151_strategy: "b"
		p.include_apocrypha true
		books = ["Tob","Jdt","GkEsth","Wis","Sir","Bar","PrAzar","Sus","Bel","SgThree","EpJer","1Macc","2Macc","3Macc","4Macc","1Esd","2Esd","PrMan","Ps151"]
		for book in books
			bc = book + ".1"
			bcv = bc + ".1"
			bcv_range = bcv + "-" + bc + ".2"
			expect(p.parse(bc).osis()).toEqual bc
			expect(p.parse(bcv).osis()).toEqual bcv
			expect(p.parse(bcv_range).osis()).toEqual bcv_range
		p.set_options ps151_strategy: "bc"
		expect(p.parse("Ps151.1").osis()).toEqual "Ps.151"
		expect(p.parse("Ps151.1.1").osis()).toEqual "Ps.151.1"
		expect(p.parse("Ps151.1-Ps151.2").osis()).toEqual "Ps.151.1-Ps.151.2"
		p.include_apocrypha false
		for book in books
			bc = book + ".1"
			expect(p.parse(bc).osis()).toEqual ""

	it "should handle a preceding character", ->
		expect(p.parse(" Gen 1").osis()).toEqual "Gen.1"
		expect(p.parse("Matt5John3").osis()).toEqual "Matt.5,John.3"
		expect(p.parse("1Ps 1").osis()).toEqual ""
		expect(p.parse("11Sam 1").osis()).toEqual ""

describe "Localized book Gen (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Gen (pl)", ->
		`
		expect(p.parse("Pierwsza Ksiega Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ksiega Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ksiega Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ksiega Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ksiegi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ksiegi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ksiegi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ksiegi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Księga Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Księga Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Księga Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Księga Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Księgi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Księgi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Księgi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Księgi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ksiega Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ksiega Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ksiega Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ksiega Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ksiegi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ksiegi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ksiegi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ksiegi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Księga Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Księga Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Księga Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Księga Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Księgi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Księgi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Księgi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Księgi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ksiega Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ksiega Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ksiega Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ksiega Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ksiegi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ksiegi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ksiegi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ksiegi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Księga Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Księga Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Księga Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Księga Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Księgi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Księgi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Księgi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Księgi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ks. Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ks. Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ks. Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ks. Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ks. Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ks. Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ks. Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ks. Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ks. Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ks. Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ks. Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ks. Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ks Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ks Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ks Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Ks Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ks Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ks Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ks Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Ks Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ks Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ks Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ks Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Ks Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ksiega Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ksiega Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ksiega Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ksiega Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ksiegi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ksiegi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ksiegi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ksiegi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Księga Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Księga Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Księga Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Księga Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Księgi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Księgi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Księgi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Księgi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ksiega Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ksiega Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ksiega Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ksiega Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ksiegi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ksiegi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ksiegi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ksiegi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Księga Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Księga Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Księga Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Księga Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Księgi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Księgi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Księgi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Księgi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ksiega Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ksiega Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ksiega Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ksiega Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ksiegi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ksiegi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ksiegi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ksiegi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Księga Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Księga Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Księga Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Księga Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Księgi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Księgi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Księgi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Księgi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ksiega Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ksiega Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ksiega Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ksiega Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ksiegi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ksiegi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ksiegi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ksiegi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Księga Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Księga Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Księga Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Księga Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Księgi Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Księgi Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Księgi Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Księgi Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ks. Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ks. Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ks. Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ks. Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ks. Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ks. Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ks. Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ks. Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ks. Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ks. Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ks. Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ks. Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ks Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ks Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ks Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Ks Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ks. Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ks. Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ks. Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ks. Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ks Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ks Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ks Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Ks Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ks Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ks Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ks Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Ks Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ks Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ks Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ks Moyzeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Ks Moyżeszowe 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Ksiega Rodzaju 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Ksiegi Rodzaju 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Księga Rodzaju 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Księgi Rodzaju 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Mojz 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsza Mojż 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Mojz 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwsze Mojż 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Mojz 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Pierwszy Mojż 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Mojzeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Mojżeszowa 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Ks. Rodzaju 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Ks Rodzaju 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Mojz 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Mojż 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Genezis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Mojz 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Mojż 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Mojz 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Mojż 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Mojz 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Mojż 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Moj 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Moj 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Rodz 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 M 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Gen 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Rdz 1:1").osis()).toEqual("Gen.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PIERWSZA KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIEGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIEGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIEGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIEGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIĘGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIĘGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIĘGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KSIĘGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIEGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIEGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIEGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIEGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIĘGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIĘGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIĘGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KSIĘGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIEGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIEGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIEGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIEGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIĘGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIĘGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIĘGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KSIĘGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KS. MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KS. MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KS. MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KS. MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KS. MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KS. MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KS. MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KS. MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KS. MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KS. MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KS. MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KS. MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KS MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KS MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KS MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA KS MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KS MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KS MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KS MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE KS MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KS MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KS MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KS MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY KS MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIEGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIEGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIEGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIEGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIĘGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIĘGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIĘGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KSIĘGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIEGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIEGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIEGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIEGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIĘGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIĘGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIĘGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KSIĘGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIEGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIEGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIEGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIEGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIĘGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIĘGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIĘGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KSIĘGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIEGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIEGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIEGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIEGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIĘGA MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIĘGA MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIĘGI MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KSIĘGI MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KS. MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KS. MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KS. MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KS. MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KS. MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KS. MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KS. MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KS. MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KS. MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KS. MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KS. MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KS. MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KS MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KS MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KS MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KS MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KS. MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KS. MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KS. MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KS. MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KS MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KS MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KS MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KS MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KS MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KS MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KS MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KS MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KS MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KS MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KS MOYZESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KS MOYŻESZOWE 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KSIEGA RODZAJU 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KSIEGI RODZAJU 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KSIĘGA RODZAJU 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KSIĘGI RODZAJU 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA MOJZ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZA MOJŻ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE MOJZ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZE MOJŻ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY MOJZ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PIERWSZY MOJŻ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I MOJZESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I MOJŻESZOWA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KS. RODZAJU 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KS RODZAJU 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. MOJZ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. MOJŻ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("GENEZIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. MOJZ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. MOJŻ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 MOJZ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 MOJŻ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I MOJZ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I MOJŻ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 MOJ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I MOJ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("RODZ 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 M 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("GEN 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("RDZ 1:1").osis()).toEqual("Gen.1.1")
		`
		true
describe "Localized book Exod (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Exod (pl)", ->
		`
		expect(p.parse("Druga Ksiega Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Ksiega Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Ksiegi Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Ksiegi Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Księga Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Księga Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Księgi Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Księgi Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Ksiega Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Ksiega Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Ksiegi Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Ksiegi Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Księga Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Księga Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Księgi Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Księgi Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Ksiega Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Ksiega Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Ksiegi Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Ksiegi Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Księga Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Księga Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Księgi Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Księgi Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Ksiega Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Ksiega Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Ksiegi Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Ksiegi Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Księga Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Księga Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Księgi Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Księgi Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Ks. Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Ks. Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Ks. Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Ks. Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Ksiega Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Ksiega Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Ksiegi Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Ksiegi Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Księga Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Księga Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Księgi Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Księgi Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Ksiega Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Ksiega Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Ksiegi Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Ksiegi Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Księga Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Księga Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Księgi Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Księgi Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Ks Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Ks Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Ks Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Ks Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Ks. Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Ks. Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Ks. Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Ks. Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Ks. Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Ks. Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Ks Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Ks Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Ks. Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Ks. Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Ks Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Ks Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Ks Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Ks Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Ks Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Ks Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Ksiega Wyjscia 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Ksiega Wyjścia 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Ksiegi Wyjscia 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Ksiegi Wyjścia 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Księga Wyjscia 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Księga Wyjścia 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Księgi Wyjscia 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Księgi Wyjścia 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Mojzeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Mojżeszowa 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Ks. Wyjscia 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Ks. Wyjścia 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Mojz 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druga Mojż 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Mojz 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Drugi Mojż 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Ks Wyjscia 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Ks Wyjścia 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Mojz 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Mojż 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Mojz 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Mojż 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Mojz 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Mojż 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Mojz 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Mojż 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Exodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Moj 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Moj 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Exod 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 M 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Wyj 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Ex 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Wj 1:1").osis()).toEqual("Exod.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUGA KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA KS. MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA KS. MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI KS. MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI KS. MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA KS MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA KS MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI KS MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI KS MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KS. MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KS. MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KS. MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KS. MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KS. MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KS. MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KS MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KS MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KS. MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KS. MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KS MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KS MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KS MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KS MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KS MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KS MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KSIEGA WYJSCIA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KSIEGA WYJŚCIA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KSIEGI WYJSCIA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KSIEGI WYJŚCIA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KSIĘGA WYJSCIA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KSIĘGA WYJŚCIA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KSIĘGI WYJSCIA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KSIĘGI WYJŚCIA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 MOJZESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 MOJŻESZOWA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KS. WYJSCIA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KS. WYJŚCIA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA MOJZ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGA MOJŻ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI MOJZ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUGI MOJŻ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KS WYJSCIA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KS WYJŚCIA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. MOJZ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. MOJŻ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. MOJZ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. MOJŻ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II MOJZ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II MOJŻ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 MOJZ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 MOJŻ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("EXODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II MOJ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 MOJ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("EXOD 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 M 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("WYJ 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("EX 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("WJ 1:1").osis()).toEqual("Exod.1.1")
		`
		true
describe "Localized book Bel (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Bel (pl)", ->
		`
		expect(p.parse("Opowiadaniem o Belu i wezu 1:1").osis()).toEqual("Bel.1.1")
		expect(p.parse("Opowiadaniem o Belu i weżu 1:1").osis()).toEqual("Bel.1.1")
		expect(p.parse("Opowiadaniem o Belu i węzu 1:1").osis()).toEqual("Bel.1.1")
		expect(p.parse("Opowiadaniem o Belu i wężu 1:1").osis()).toEqual("Bel.1.1")
		expect(p.parse("Bela i weza 1:1").osis()).toEqual("Bel.1.1")
		expect(p.parse("Bela i weża 1:1").osis()).toEqual("Bel.1.1")
		expect(p.parse("Bela i węza 1:1").osis()).toEqual("Bel.1.1")
		expect(p.parse("Bela i węża 1:1").osis()).toEqual("Bel.1.1")
		expect(p.parse("Bel 1:1").osis()).toEqual("Bel.1.1")
		`
		true
describe "Localized book Lev (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Lev (pl)", ->
		`
		expect(p.parse("Trzecia Ksiega Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Ksiega Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Ksiegi Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Ksiegi Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Księga Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Księga Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Księgi Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Księgi Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Ksiega Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Ksiega Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Ksiegi Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Ksiegi Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Księga Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Księga Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Księgi Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Księgi Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Ksiega Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Ksiega Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Ksiegi Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Ksiegi Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Księga Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Księga Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Księgi Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Księgi Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Ks. Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Ks. Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Ksiega Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Ksiega Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Ksiegi Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Ksiegi Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Księga Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Księga Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Księgi Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Księgi Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Ks. Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Ks. Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Ks Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Ks Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Ksiega Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Ksiega Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Ksiegi Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Ksiegi Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Księga Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Księga Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Księgi Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Księgi Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Ks Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Ks Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Ksiega Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Ksiega Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Ksiegi Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Ksiegi Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Księga Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Księga Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Księgi Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Księgi Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Ks. Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Ks. Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Ks. Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Ks. Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Ks Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Ks Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Ks. Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Ks. Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Ks Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Ks Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Ks. Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Ks. Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Ks Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Ks Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Ksiega Kapłanska 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Ksiega Kapłańska 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Ksiegi Kapłanska 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Ksiegi Kapłańska 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Księga Kapłanska 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Księga Kapłańska 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Księgi Kapłanska 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Księgi Kapłańska 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Ks Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Ks Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Ks. Kapłanska 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Ks. Kapłańska 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Mojzeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Mojżeszowa 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Ks Kapłanska 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Ks Kapłańska 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Mojz 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzecia Mojż 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Mojz 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Trzeci Mojż 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Mojz 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Mojż 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Mojz 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Mojż 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Mojz 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Mojż 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Moj 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Mojz 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Mojż 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Moj 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Kapl 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Kapł 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 M 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Kpl 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Kpł 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Lev 1:1").osis()).toEqual("Lev.1.1")
		p.include_apocrypha(false)
		expect(p.parse("TRZECIA KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA KS. MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA KS. MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI KS. MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI KS. MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA KS MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA KS MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI KS MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI KS MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KS. MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KS. MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KS. MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KS. MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KS MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KS MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KS. MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KS. MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KS MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KS MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KS. MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KS. MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KS MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KS MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KSIEGA KAPŁANSKA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KSIEGA KAPŁAŃSKA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KSIEGI KAPŁANSKA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KSIEGI KAPŁAŃSKA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KSIĘGA KAPŁANSKA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KSIĘGA KAPŁAŃSKA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KSIĘGI KAPŁANSKA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KSIĘGI KAPŁAŃSKA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KS MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KS MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KS. KAPŁANSKA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KS. KAPŁAŃSKA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 MOJZESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 MOJŻESZOWA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KS KAPŁANSKA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KS KAPŁAŃSKA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA MOJZ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECIA MOJŻ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI MOJZ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRZECI MOJŻ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. MOJZ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. MOJŻ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III MOJZ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III MOJŻ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. MOJZ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. MOJŻ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III MOJ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 MOJZ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 MOJŻ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 MOJ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KAPL 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KAPŁ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 M 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KPL 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KPŁ 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("LEV 1:1").osis()).toEqual("Lev.1.1")
		`
		true
describe "Localized book Num (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Num (pl)", ->
		`
		expect(p.parse("Czwarta Ksiega Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Ksiega Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Ksiegi Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Ksiegi Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Księga Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Księga Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Księgi Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Księgi Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Ks. Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Ks. Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Ks Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Ks Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Ksiega Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Ksiega Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Ksiegi Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Ksiegi Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Księga Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Księga Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Księgi Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Księgi Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Ksiega Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Ksiega Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Ksiegi Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Ksiegi Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Księga Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Księga Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Księgi Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Księgi Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Ksiega Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Ksiega Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Ksiegi Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Ksiegi Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Księga Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Księga Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Księgi Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Księgi Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Ksiega Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Ksiega Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Ksiegi Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Ksiegi Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Księga Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Księga Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Księgi Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Księgi Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Ks. Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Ks. Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Ks. Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Ks. Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Ks. Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Ks. Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Ks Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Ks Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Ks. Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Ks. Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Ks Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Ks Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Ks Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Ks Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Ks Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Ks Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Mojzeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Mojżeszowa 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Mojz 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Czwarta Mojż 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ksiega Liczb 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ksiegi Liczb 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Księga Liczb 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Księgi Liczb 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ks. Liczb 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Mojz 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Mojż 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ks Liczb 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Mojz 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Mojż 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Mojz 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Mojż 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Mojz 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Mojż 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Moj 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Moj 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Liczb 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 M 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Num 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Lb 1:1").osis()).toEqual("Num.1.1")
		p.include_apocrypha(false)
		expect(p.parse("CZWARTA KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA KS. MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA KS. MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA KS MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA KS MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KS. MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KS. MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KS. MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KS. MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KS. MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KS. MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KS MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KS MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KS. MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KS. MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KS MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KS MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KS MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KS MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KS MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KS MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 MOJZESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 MOJŻESZOWA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA MOJZ 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CZWARTA MOJŻ 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KSIEGA LICZB 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KSIEGI LICZB 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KSIĘGA LICZB 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KSIĘGI LICZB 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KS. LICZB 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. MOJZ 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. MOJŻ 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KS LICZB 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. MOJZ 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. MOJŻ 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV MOJZ 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV MOJŻ 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 MOJZ 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 MOJŻ 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV MOJ 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 MOJ 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("LICZB 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 M 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("NUM 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("LB 1:1").osis()).toEqual("Num.1.1")
		`
		true
describe "Localized book Sir (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Sir (pl)", ->
		`
		expect(p.parse("Madrosc Syracha 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Madrosć Syracha 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Madrośc Syracha 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Madrość Syracha 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Mądrosc Syracha 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Mądrosć Syracha 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Mądrośc Syracha 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Mądrość Syracha 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Eklezjastyka 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Eklezjastyk 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Syracha 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Ekli 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Sir 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Syr 1:1").osis()).toEqual("Sir.1.1")
		`
		true
describe "Localized book Wis (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Wis (pl)", ->
		`
		expect(p.parse("Madrosc Salomona 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Madrosć Salomona 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Madrośc Salomona 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Madrość Salomona 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Mądrosc Salomona 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Mądrosć Salomona 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Mądrośc Salomona 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Mądrość Salomona 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ksiega Madrosci 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ksiega Madrości 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ksiega Mądrosci 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ksiega Mądrości 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ksiegi Madrosci 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ksiegi Madrości 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ksiegi Mądrosci 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ksiegi Mądrości 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Księga Madrosci 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Księga Madrości 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Księga Mądrosci 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Księga Mądrości 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Księgi Madrosci 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Księgi Madrości 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Księgi Mądrosci 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Księgi Mądrości 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ks. Madrosci 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ks. Madrości 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ks. Mądrosci 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ks. Mądrości 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ks Madrosci 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ks Madrości 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ks Mądrosci 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Ks Mądrości 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Madr 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Mądr 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Mdr 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Wis 1:1").osis()).toEqual("Wis.1.1")
		`
		true
describe "Localized book Lam (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Lam (pl)", ->
		`
		expect(p.parse("Lamentacje Jeremiasza 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Ksiega Lamentacji 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Ksiegi Lamentacji 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Księga Lamentacji 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Księgi Lamentacji 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Treny Jeremiasza 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Ks. Lamentacji 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Ks Lamentacji 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Lamentacje 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Treny 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Lam 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("La 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Lm 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Tr 1:1").osis()).toEqual("Lam.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LAMENTACJE JEREMIASZA 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KSIEGA LAMENTACJI 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KSIEGI LAMENTACJI 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KSIĘGA LAMENTACJI 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KSIĘGI LAMENTACJI 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("TRENY JEREMIASZA 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KS. LAMENTACJI 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KS LAMENTACJI 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("LAMENTACJE 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("TRENY 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("LAM 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("LA 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("LM 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("TR 1:1").osis()).toEqual("Lam.1.1")
		`
		true
describe "Localized book EpJer (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: EpJer (pl)", ->
		`
		expect(p.parse("List Jeremiasza 1:1").osis()).toEqual("EpJer.1.1")
		expect(p.parse("EpJer 1:1").osis()).toEqual("EpJer.1.1")
		`
		true
describe "Localized book PrMan (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: PrMan (pl)", ->
		`
		expect(p.parse("Modlitwa Manassesa 1:1").osis()).toEqual("PrMan.1.1")
		expect(p.parse("PrMan 1:1").osis()).toEqual("PrMan.1.1")
		`
		true
describe "Localized book Deut (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Deut (pl)", ->
		`
		expect(p.parse("Ksiega Powtorzonego Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Ksiega Powtórzonego Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Ksiegi Powtorzonego Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Ksiegi Powtórzonego Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Księga Powtorzonego Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Księga Powtórzonego Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Księgi Powtorzonego Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Księgi Powtórzonego Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Ksiega Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Ksiega Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Ksiegi Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Ksiegi Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Księga Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Księga Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Księgi Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Księgi Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Ksiega Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Ksiega Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Ksiegi Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Ksiegi Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Księga Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Księga Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Księgi Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Księgi Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Ks. Powtorzonego Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Ks. Powtórzonego Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Ks Powtorzonego Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Ks Powtórzonego Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Ksiega Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Ksiega Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Ksiegi Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Ksiegi Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Księga Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Księga Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Księgi Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Księgi Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Ks. Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Ks. Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Ks. Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Ks. Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Ksiega Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Ksiega Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Ksiegi Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Ksiegi Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Księga Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Księga Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Księgi Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Księgi Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Ksiega Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Ksiega Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Ksiegi Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Ksiegi Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Księga Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Księga Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Księgi Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Księgi Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Ks Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Ks Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Ks Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Ks Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Ksiega Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Ksiega Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Ksiegi Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Ksiegi Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Księga Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Księga Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Księgi Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Księgi Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Ks. Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Ks. Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Ksiega Powt Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Ksiegi Powt Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Księga Powt Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Księgi Powt Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Ks. Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Ks. Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Ks. Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Ks. Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Ks Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Ks Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Ks. Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Ks. Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Ks Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Ks Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Ks Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Ks Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Ks Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Ks Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Ks. Powt Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Ks Powt Prawa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Mojzeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Mojżeszowa 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Mojz 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piata Mojż 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Mojz 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Piąta Mojż 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Mojz 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Mojż 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Mojz 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Mojż 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Mojz 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Mojż 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Mojz 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Mojż 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Moj 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Moj 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Deut 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 M 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pwt 1:1").osis()).toEqual("Deut.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA POWTORZONEGO PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KSIEGA POWTÓRZONEGO PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KSIEGI POWTORZONEGO PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KSIEGI POWTÓRZONEGO PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KSIĘGA POWTORZONEGO PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KSIĘGA POWTÓRZONEGO PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KSIĘGI POWTORZONEGO PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KSIĘGI POWTÓRZONEGO PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KS. POWTORZONEGO PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KS. POWTÓRZONEGO PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KS POWTORZONEGO PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KS POWTÓRZONEGO PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA KS. MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA KS. MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA KS. MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA KS. MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA KS MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA KS MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA KS MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA KS MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KSIEGA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KSIEGA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KSIEGI MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KSIEGI MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KSIĘGA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KSIĘGA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KSIĘGI MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KSIĘGI MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KS. MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KS. MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KSIEGA POWT PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KSIEGI POWT PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KSIĘGA POWT PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KSIĘGI POWT PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KS. MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KS. MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KS. MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KS. MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KS MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KS MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KS. MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KS. MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KS MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KS MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KS MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KS MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KS MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KS MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KS. POWT PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KS POWT PRAWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V MOJZESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V MOJŻESZOWA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA MOJZ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIATA MOJŻ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA MOJZ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PIĄTA MOJŻ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. MOJZ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. MOJŻ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. MOJZ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. MOJŻ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 MOJZ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 MOJŻ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V MOJZ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V MOJŻ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 MOJ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V MOJ 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("DEUT 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 M 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PWT 1:1").osis()).toEqual("Deut.1.1")
		`
		true
describe "Localized book Josh (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Josh (pl)", ->
		`
		expect(p.parse("Ksiega Jozuego 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Ksiegi Jozuego 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Księga Jozuego 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Księgi Jozuego 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Ks. Jozuego 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Ks Jozuego 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Jozuego 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Josh 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Joz 1:1").osis()).toEqual("Josh.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA JOZUEGO 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KSIEGI JOZUEGO 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KSIĘGA JOZUEGO 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KSIĘGI JOZUEGO 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KS. JOZUEGO 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KS JOZUEGO 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("JOZUEGO 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("JOSH 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("JOZ 1:1").osis()).toEqual("Josh.1.1")
		`
		true
describe "Localized book Judg (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Judg (pl)", ->
		`
		expect(p.parse("Ksiega Sedziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ksiega Sedziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ksiega Sędziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ksiega Sędziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ksiegi Sedziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ksiegi Sedziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ksiegi Sędziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ksiegi Sędziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Księga Sedziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Księga Sedziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Księga Sędziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Księga Sędziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Księgi Sedziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Księgi Sedziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Księgi Sędziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Księgi Sędziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ks. Sedziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ks. Sedziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ks. Sędziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ks. Sędziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ks Sedziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ks Sedziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ks Sędziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Ks Sędziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Sedziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Sedziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Sędziow 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Sędziów 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Judg 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Sedz 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Sędz 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Sdz 1:1").osis()).toEqual("Judg.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA SEDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIEGA SEDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIEGA SĘDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIEGA SĘDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIEGI SEDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIEGI SEDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIEGI SĘDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIEGI SĘDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIĘGA SEDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIĘGA SEDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIĘGA SĘDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIĘGA SĘDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIĘGI SEDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIĘGI SEDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIĘGI SĘDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KSIĘGI SĘDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KS. SEDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KS. SEDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KS. SĘDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KS. SĘDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KS SEDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KS SEDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KS SĘDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KS SĘDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("SEDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("SEDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("SĘDZIOW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("SĘDZIÓW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("JUDG 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("SEDZ 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("SĘDZ 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("SDZ 1:1").osis()).toEqual("Judg.1.1")
		`
		true
describe "Localized book Ruth (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Ruth (pl)", ->
		`
		expect(p.parse("Ksiega Ruthy 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Ksiegi Ruthy 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Księga Ruthy 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Księgi Ruthy 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Ksiega Rut 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Ksiegi Rut 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Księga Rut 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Księgi Rut 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Ks. Ruthy 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Ks Ruthy 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Ks. Rut 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Ks Rut 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Ruth 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Rut 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Rt 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Ru 1:1").osis()).toEqual("Ruth.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA RUTHY 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KSIEGI RUTHY 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KSIĘGA RUTHY 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KSIĘGI RUTHY 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KSIEGA RUT 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KSIEGI RUT 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KSIĘGA RUT 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KSIĘGI RUT 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KS. RUTHY 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KS RUTHY 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KS. RUT 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KS RUT 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("RUTH 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("RUT 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("RT 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("RU 1:1").osis()).toEqual("Ruth.1.1")
		`
		true
describe "Localized book 1Esd (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Esd (pl)", ->
		`
		expect(p.parse("Pierwsza Ksiega Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwsza Ksiegi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwsza Księga Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwsza Księgi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwsze Ksiega Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwsze Ksiegi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwsze Księga Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwsze Księgi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwszy Ksiega Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwszy Ksiegi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwszy Księga Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwszy Księgi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwsza Ks. Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwsze Ks. Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwszy Ks. Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwsza Ks Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwsze Ks Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwszy Ks Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1. Ksiega Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1. Ksiegi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1. Księga Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1. Księgi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I. Ksiega Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I. Ksiegi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I. Księga Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I. Księgi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1 Ksiega Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1 Ksiegi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1 Księga Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1 Księgi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I Ksiega Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I Ksiegi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I Księga Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I Księgi Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwsza Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwsze Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Pierwszy Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1. Ks. Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I. Ks. Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1 Ks. Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1. Ks Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I Ks. Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I. Ks Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1 Ks Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I Ks Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1. Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I. Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1 Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I Ezdrasza 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1Esd 1:1").osis()).toEqual("1Esd.1.1")
		`
		true
describe "Localized book 2Esd (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Esd (pl)", ->
		`
		expect(p.parse("Druga Ksiega Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druga Ksiegi Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druga Księga Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druga Księgi Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Drugi Ksiega Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Drugi Ksiegi Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Drugi Księga Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Drugi Księgi Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II. Ksiega Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II. Ksiegi Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II. Księga Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II. Księgi Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2. Ksiega Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2. Ksiegi Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2. Księga Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2. Księgi Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druga Ks. Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Drugi Ks. Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II Ksiega Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II Ksiegi Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II Księga Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II Księgi Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2 Ksiega Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2 Ksiegi Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2 Księga Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2 Księgi Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druga Ks Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Drugi Ks Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II. Ks. Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2. Ks. Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II Ks. Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II. Ks Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2 Ks. Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2. Ks Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druga Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Drugi Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II Ks Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2 Ks Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II. Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2. Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2 Ezdrasza 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2Esd 1:1").osis()).toEqual("2Esd.1.1")
		`
		true
describe "Localized book Isa (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Isa (pl)", ->
		`
		expect(p.parse("Ksiega Izajasza 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Ksiegi Izajasza 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Księga Izajasza 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Księgi Izajasza 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Ks. Izajasza 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Ks Izajasza 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Izajasza 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Isa 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Iz 1:1").osis()).toEqual("Isa.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA IZAJASZA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KSIEGI IZAJASZA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KSIĘGA IZAJASZA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KSIĘGI IZAJASZA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KS. IZAJASZA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KS IZAJASZA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IZAJASZA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("ISA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IZ 1:1").osis()).toEqual("Isa.1.1")
		`
		true
describe "Localized book 2Sam (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Sam (pl)", ->
		`
		expect(p.parse("Druga Ksiega Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druga Ksiegi Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druga Księga Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druga Księgi Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Drugi Ksiega Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Drugi Ksiegi Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Drugi Księga Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Drugi Księgi Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druga Ksiega Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druga Ksiegi Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druga Księga Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druga Księgi Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Drugi Ksiega Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Drugi Ksiegi Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Drugi Księga Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Drugi Księgi Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Ksiega Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Ksiegi Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Księga Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Księgi Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Ksiega Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Ksiegi Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Księga Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Księgi Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druga Ks. Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Drugi Ks. Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Ksiega Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Ksiegi Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Księga Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Księgi Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Ksiega Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Ksiegi Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Księga Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Księgi Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druga Ks Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Drugi Ks Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Ksiega Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Ksiegi Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Księga Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Księgi Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Ksiega Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Ksiegi Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Księga Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Księgi Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druga Ks. Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Drugi Ks. Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Ksiega Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Ksiegi Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Księga Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Księgi Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Ks. Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Ksiega Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Ksiegi Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Księga Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Księgi Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Ks. Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druga Ks Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Drugi Ks Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Ks. Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Ks Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Ks. Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Ks Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druga Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Drugi Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Ks Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Ks. Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Ks Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Ks. Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Ks. Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Ks Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Ks. Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Ks Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Ks Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Ks Samuela 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Samuelowa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Sa 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Sm 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2Sam 1:1").osis()).toEqual("2Sam.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUGA KSIEGA SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGA KSIEGI SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGA KSIĘGA SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGA KSIĘGI SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGI KSIEGA SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGI KSIEGI SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGI KSIĘGA SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGI KSIĘGI SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGA KSIEGA SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGA KSIEGI SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGA KSIĘGA SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGA KSIĘGI SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGI KSIEGA SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGI KSIEGI SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGI KSIĘGA SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGI KSIĘGI SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KSIEGA SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KSIEGI SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KSIĘGA SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KSIĘGI SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KSIEGA SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KSIEGI SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KSIĘGA SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KSIĘGI SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGA KS. SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGI KS. SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KSIEGA SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KSIEGI SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KSIĘGA SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KSIĘGI SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KSIEGA SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KSIEGI SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KSIĘGA SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KSIĘGI SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGA KS SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGI KS SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KSIEGA SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KSIEGI SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KSIĘGA SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KSIĘGI SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KSIEGA SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KSIEGI SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KSIĘGA SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KSIĘGI SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGA KS. SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGI KS. SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KSIEGA SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KSIEGI SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KSIĘGA SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KSIĘGI SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KS. SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KSIEGA SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KSIEGI SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KSIĘGA SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KSIĘGI SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KS. SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGA KS SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGI KS SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KS. SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KS SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KS. SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KS SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGA SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUGI SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KS SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KS. SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KS SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KS. SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KS. SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KS SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KS. SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KS SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KS SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KS SAMUELA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 SAMUELOWA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 SA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 SM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2SAM 1:1").osis()).toEqual("2Sam.1.1")
		`
		true
describe "Localized book 1Sam (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Sam (pl)", ->
		`
		expect(p.parse("Pierwsza Ksiega Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsza Ksiegi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsza Księga Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsza Księgi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsze Ksiega Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsze Ksiegi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsze Księga Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsze Księgi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwszy Ksiega Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwszy Ksiegi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwszy Księga Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwszy Księgi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsza Ksiega Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsza Ksiegi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsza Księga Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsza Księgi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsze Ksiega Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsze Ksiegi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsze Księga Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsze Księgi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwszy Ksiega Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwszy Ksiegi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwszy Księga Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwszy Księgi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsza Ks. Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsze Ks. Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwszy Ks. Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsza Ks Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsze Ks Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwszy Ks Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsza Ks. Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsze Ks. Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwszy Ks. Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Ksiega Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Ksiegi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Księga Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Księgi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Ksiega Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Ksiegi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Księga Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Księgi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsza Ks Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsze Ks Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwszy Ks Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Ksiega Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Ksiegi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Księga Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Księgi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Ksiega Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Ksiegi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Księga Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Księgi Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsza Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwsze Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Pierwszy Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Ksiega Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Ksiegi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Księga Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Księgi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Ksiega Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Ksiegi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Księga Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Księgi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Ksiega Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Ksiegi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Księga Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Księgi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Ks. Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Ksiega Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Ksiegi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Księga Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Księgi Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Ks. Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Ks. Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Ks Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Ks. Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Ks Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Ks Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Ks. Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Ks Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Ks. Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Ks. Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Ks Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Ks. Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Ks Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Ks Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Ks Samuela 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Samuelowa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Sam 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Sa 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Sm 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1Sam 1:1").osis()).toEqual("1Sam.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PIERWSZA KSIEGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZA KSIEGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZA KSIĘGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZA KSIĘGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZE KSIEGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZE KSIEGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZE KSIĘGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZE KSIĘGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZY KSIEGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZY KSIEGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZY KSIĘGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZY KSIĘGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZA KSIEGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZA KSIEGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZA KSIĘGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZA KSIĘGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZE KSIEGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZE KSIEGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZE KSIĘGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZE KSIĘGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZY KSIEGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZY KSIEGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZY KSIĘGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZY KSIĘGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZA KS. SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZE KS. SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZY KS. SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZA KS SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZE KS SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZY KS SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZA KS. SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZE KS. SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZY KS. SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KSIEGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KSIEGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KSIĘGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KSIĘGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KSIEGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KSIEGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KSIĘGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KSIĘGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZA KS SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZE KS SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZY KS SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KSIEGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KSIEGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KSIĘGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KSIĘGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KSIEGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KSIEGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KSIĘGA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KSIĘGI SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZA SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZE SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PIERWSZY SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KSIEGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KSIEGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KSIĘGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KSIĘGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KSIEGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KSIEGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KSIĘGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KSIĘGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KSIEGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KSIEGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KSIĘGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KSIĘGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KS. SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KSIEGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KSIEGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KSIĘGA SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KSIĘGI SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KS. SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KS. SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KS SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KS. SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KS SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KS SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KS. SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KS SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KS. SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KS. SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KS SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KS. SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KS SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KS SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KS SAMUELA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I SAMUELOWA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 SAM 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 SA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 SM 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1SAM 1:1").osis()).toEqual("1Sam.1.1")
		`
		true
describe "Localized book 2Kgs (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Kgs (pl)", ->
		`
		expect(p.parse("Czwarta Ksiega Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Czwarta Ksiega Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Czwarta Ksiegi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Czwarta Ksiegi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Czwarta Księga Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Czwarta Księga Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Czwarta Księgi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Czwarta Księgi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ksiega Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ksiega Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ksiegi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ksiegi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Księga Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Księga Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Księgi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Księgi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ksiega Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ksiega Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ksiegi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ksiegi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Księga Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Księga Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Księgi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Księgi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Czwarta Ks. Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Czwarta Ks. Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Czwarta Ks Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Czwarta Ks Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ksiega Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ksiega Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ksiegi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ksiegi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Księga Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Księga Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Księgi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Księgi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. Ksiega Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. Ksiega Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. Ksiegi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. Ksiegi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. Księga Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. Księga Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. Księgi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. Księgi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ksiega Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ksiega Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ksiegi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ksiegi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Księga Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Księga Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Księgi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Księgi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. Ksiega Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. Ksiega Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. Ksiegi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. Ksiegi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. Księga Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. Księga Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. Księgi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. Księgi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ks. Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ks. Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ksiega Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ksiega Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ksiega Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ksiega Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ksiegi Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ksiegi Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ksiegi Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ksiegi Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Księga Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Księga Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Księga Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Księga Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Księgi Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Księgi Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Księgi Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Księgi Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ks. Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ks. Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ksiega Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ksiega Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ksiega Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ksiega Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ksiegi Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ksiegi Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ksiegi Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ksiegi Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Księga Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Księga Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Księga Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Księga Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Księgi Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Księgi Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Księgi Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Księgi Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ksiega Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ksiega Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ksiegi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ksiegi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Księga Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Księga Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Księgi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Księgi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV Ksiega Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV Ksiega Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV Ksiegi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV Ksiegi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV Księga Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV Księga Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV Księgi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV Księgi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ksiega Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ksiega Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ksiegi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ksiegi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Księga Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Księga Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Księgi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Księgi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 Ksiega Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 Ksiega Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 Ksiegi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 Ksiegi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 Księga Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 Księga Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 Księgi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 Księgi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ks Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ks Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ks Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ks Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ks. Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ks. Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ksiega Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ksiega Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ksiega Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ksiega Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ksiegi Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ksiegi Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ksiegi Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ksiegi Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Księga Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Księga Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Księga Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Księga Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Księgi Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Księgi Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Księgi Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Księgi Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. Ks. Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. Ks. Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ks. Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ks. Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ksiega Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ksiega Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ksiega Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ksiega Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ksiegi Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ksiegi Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ksiegi Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ksiegi Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Księga Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Księga Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Księga Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Księga Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Księgi Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Księgi Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Księgi Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Księgi Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. Ks. Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. Ks. Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ks. Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ks. Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ks. Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ks. Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ks. Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ks. Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ks. Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ks. Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ks. Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ks. Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ksiega Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ksiega Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ksiega Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ksiega Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ksiegi Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ksiegi Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ksiegi Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ksiegi Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Księga Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Księga Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Księga Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Księga Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Księgi Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Księgi Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Księgi Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Księgi Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ks Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ks Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV Ks. Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV Ks. Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. Ks Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. Ks Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ks. Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ks. Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ksiega Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ksiega Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ksiega Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ksiega Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ksiegi Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ksiegi Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ksiegi Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ksiegi Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Księga Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Księga Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Księga Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Księga Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Księgi Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Księgi Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Księgi Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Księgi Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ks Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ks Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 Ks. Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 Ks. Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. Ks Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. Ks Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ks Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ks Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ks Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druga Ks Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ks Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ks Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ks Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Drugi Ks Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ks Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ks Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV Ks Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV Ks Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ks Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ks Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 Ks Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 Ks Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ks. Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ks. Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ks. Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ks. Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ks. Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ks. Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ks. Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ks. Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ks. Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ks. Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ks. Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ks. Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ks Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ks Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ks Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Ks Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ks. Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ks. Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ks. Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ks. Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ks Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ks Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ks Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Ks Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ks Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ks Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ks Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Ks Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Krolewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Królewska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ks Krolow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ks Krolów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ks Królow 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Ks Królów 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Krol 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Król 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Krl 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2Kgs 1:1").osis()).toEqual("2Kgs.1.1")
		p.include_apocrypha(false)
		expect(p.parse("CZWARTA KSIEGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("CZWARTA KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("CZWARTA KSIEGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("CZWARTA KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("CZWARTA KSIĘGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("CZWARTA KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("CZWARTA KSIĘGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("CZWARTA KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIEGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIEGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIĘGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIĘGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIEGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIEGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIĘGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIĘGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("CZWARTA KS. KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("CZWARTA KS. KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("CZWARTA KS KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("CZWARTA KS KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIEGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIEGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIĘGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIĘGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. KSIEGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. KSIEGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. KSIĘGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. KSIĘGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIEGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIEGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIĘGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIĘGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. KSIEGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. KSIEGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. KSIĘGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. KSIĘGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KS. KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KS. KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIEGA KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIEGA KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIEGA KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIEGA KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIEGI KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIEGI KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIEGI KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIEGI KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIĘGA KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIĘGA KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIĘGA KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIĘGA KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIĘGI KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIĘGI KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIĘGI KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KSIĘGI KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KS. KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KS. KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIEGA KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIEGA KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIEGA KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIEGA KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIEGI KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIEGI KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIEGI KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIEGI KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIĘGA KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIĘGA KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIĘGA KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIĘGA KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIĘGI KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIĘGI KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIĘGI KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KSIĘGI KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIEGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIEGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIĘGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIĘGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV KSIEGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV KSIEGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV KSIĘGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV KSIĘGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIEGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIEGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIĘGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIĘGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 KSIEGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 KSIEGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 KSIĘGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 KSIĘGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KS KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KS KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KS KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KS KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KS. KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KS. KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIEGA KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIEGA KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIEGA KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIEGA KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIEGI KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIEGI KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIEGI KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIEGI KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIĘGA KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIĘGA KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIĘGA KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIĘGA KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIĘGI KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIĘGI KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIĘGI KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KSIĘGI KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. KS. KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. KS. KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KS. KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KS. KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIEGA KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIEGA KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIEGA KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIEGA KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIEGI KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIEGI KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIEGI KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIEGI KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIĘGA KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIĘGA KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIĘGA KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIĘGA KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIĘGI KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIĘGI KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIĘGI KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KSIĘGI KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. KS. KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. KS. KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KS. KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KS. KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KS. KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KS. KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KS. KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KS. KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KS. KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KS. KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KS. KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KS. KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIEGA KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIEGA KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIEGA KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIEGA KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIEGI KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIEGI KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIEGI KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIEGI KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIĘGA KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIĘGA KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIĘGA KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIĘGA KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIĘGI KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIĘGI KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIĘGI KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KSIĘGI KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KS KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KS KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV KS. KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV KS. KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. KS KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV. KS KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KS. KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KS. KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIEGA KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIEGA KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIEGA KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIEGA KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIEGI KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIEGI KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIEGI KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIEGI KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIĘGA KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIĘGA KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIĘGA KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIĘGA KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIĘGI KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIĘGI KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIĘGI KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KSIĘGI KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KS KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KS KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 KS. KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 KS. KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. KS KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4. KS KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KS KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KS KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KS KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGA KS KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KS KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KS KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KS KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUGI KS KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KS KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KS KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV KS KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IV KS KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KS KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KS KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 KS KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("4 KS KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KS. KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KS. KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KS. KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KS. KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KS. KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KS. KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KS. KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KS. KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KS. KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KS. KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KS. KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KS. KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KS KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KS KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KS KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KS KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KS. KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KS. KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KS. KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KS. KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KS KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KS KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KS KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KS KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KS KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KS KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KS KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KS KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KROLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KRÓLEWSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KS KROLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KS KROLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KS KRÓLOW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KS KRÓLÓW 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KROL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KRÓL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KRL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2KGS 1:1").osis()).toEqual("2Kgs.1.1")
		`
		true
describe "Localized book 1Kgs (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Kgs (pl)", ->
		`
		expect(p.parse("Pierwsza Ksiega Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ksiega Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ksiegi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ksiegi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Księga Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Księga Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Księgi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Księgi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ksiega Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ksiega Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ksiegi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ksiegi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Księga Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Księga Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Księgi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Księgi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ksiega Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ksiega Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ksiegi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ksiegi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Księga Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Księga Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Księgi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Księgi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzecia Ksiega Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzecia Ksiega Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzecia Ksiegi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzecia Ksiegi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzecia Księga Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzecia Księga Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzecia Księgi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzecia Księgi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzeci Ksiega Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzeci Ksiega Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzeci Ksiegi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzeci Ksiegi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzeci Księga Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzeci Księga Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzeci Księgi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzeci Księgi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ks. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ks. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ksiega Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ksiega Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ksiega Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ksiega Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ksiegi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ksiegi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ksiegi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ksiegi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Księga Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Księga Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Księga Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Księga Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Księgi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Księgi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Księgi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Księgi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ks. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ks. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ksiega Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ksiega Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ksiega Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ksiega Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ksiegi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ksiegi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ksiegi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ksiegi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Księga Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Księga Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Księga Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Księga Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Księgi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Księgi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Księgi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Księgi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ks. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ks. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ksiega Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ksiega Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ksiega Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ksiega Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ksiegi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ksiegi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ksiegi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ksiegi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Księga Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Księga Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Księga Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Księga Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Księgi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Księgi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Księgi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Księgi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. Ksiega Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. Ksiega Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. Ksiegi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. Ksiegi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. Księga Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. Księga Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. Księgi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. Księgi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ks Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ks Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ks Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ks Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ks Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ks Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzecia Ks. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzecia Ks. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III Ksiega Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III Ksiega Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III Ksiegi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III Ksiegi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III Księga Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III Księga Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III Księgi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III Księgi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzeci Ks. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzeci Ks. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzecia Ks Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzecia Ks Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ksiega Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ksiega Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ksiegi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ksiegi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Księga Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Księga Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Księgi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Księgi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. Ksiega Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. Ksiega Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. Ksiegi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. Ksiegi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. Księga Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. Księga Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. Księgi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. Księgi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ksiega Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ksiega Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ksiegi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ksiegi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Księga Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Księga Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Księgi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Księgi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ks. Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ks. Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ks. Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ks. Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ks. Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ks. Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ks. Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ks. Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ks. Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ks. Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ks. Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ks. Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzeci Ks Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Trzeci Ks Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ksiega Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ksiega Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ksiegi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ksiegi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Księga Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Księga Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Księgi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Księgi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 Ksiega Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 Ksiega Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 Ksiegi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 Ksiegi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 Księga Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 Księga Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 Księgi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 Księgi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ksiega Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ksiega Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ksiegi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ksiegi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Księga Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Księga Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Księgi Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Księgi Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. Ks. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. Ks. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ks Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ks Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ks Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsza Ks Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ks Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ks Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ks Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwsze Ks Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ks Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ks Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ks Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Pierwszy Ks Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III Ks. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III Ks. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. Ks Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. Ks Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ks. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ks. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ksiega Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ksiega Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ksiega Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ksiega Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ksiegi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ksiegi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ksiegi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ksiegi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Księga Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Księga Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Księga Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Księga Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Księgi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Księgi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Księgi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Księgi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. Ks. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. Ks. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ks. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ks. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ksiega Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ksiega Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ksiega Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ksiega Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ksiegi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ksiegi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ksiegi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ksiegi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Księga Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Księga Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Księga Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Księga Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Księgi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Księgi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Księgi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Księgi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III Ks Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III Ks Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ks. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ks. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ksiega Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ksiega Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ksiega Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ksiega Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ksiegi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ksiegi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ksiegi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ksiegi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Księga Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Księga Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Księga Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Księga Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Księgi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Księgi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Księgi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Księgi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ks Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ks Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 Ks. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 Ks. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. Ks Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. Ks Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ks. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ks. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ksiega Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ksiega Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ksiega Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ksiega Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ksiegi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ksiegi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ksiegi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ksiegi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Księga Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Księga Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Księga Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Księga Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Księgi Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Księgi Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Księgi Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Księgi Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ks Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ks Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ks Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ks Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 Ks Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 Ks Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ks Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ks Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ks. Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ks. Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ks. Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ks. Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ks. Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ks. Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ks. Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ks. Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ks. Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ks. Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ks. Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ks. Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ks Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ks Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ks Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Ks Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ks. Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ks. Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ks. Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ks. Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ks Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ks Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ks Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Ks Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ks Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ks Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ks Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Ks Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Krolewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Królewska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ks Krolow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ks Krolów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ks Królow 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Ks Królów 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Krol 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Król 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Krl 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1Kgs 1:1").osis()).toEqual("1Kgs.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PIERWSZA KSIEGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIEGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIĘGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIĘGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIEGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIEGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIĘGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIĘGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIEGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIEGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIĘGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIĘGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECIA KSIEGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECIA KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECIA KSIEGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECIA KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECIA KSIĘGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECIA KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECIA KSIĘGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECIA KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECI KSIEGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECI KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECI KSIEGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECI KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECI KSIĘGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECI KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECI KSIĘGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECI KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KS. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KS. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIEGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIEGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIEGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIEGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIEGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIEGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIEGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIEGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIĘGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIĘGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIĘGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIĘGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIĘGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIĘGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIĘGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KSIĘGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KS. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KS. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIEGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIEGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIEGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIEGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIEGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIEGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIEGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIEGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIĘGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIĘGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIĘGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIĘGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIĘGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIĘGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIĘGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KSIĘGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KS. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KS. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIEGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIEGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIEGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIEGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIEGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIEGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIEGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIEGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIĘGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIĘGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIĘGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIĘGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIĘGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIĘGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIĘGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KSIĘGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. KSIEGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. KSIEGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. KSIĘGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. KSIĘGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KS KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KS KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KS KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KS KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KS KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KS KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECIA KS. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECIA KS. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III KSIEGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III KSIEGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III KSIĘGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III KSIĘGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECI KS. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECI KS. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECIA KS KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECIA KS KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIEGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIEGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIĘGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIĘGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. KSIEGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. KSIEGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. KSIĘGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. KSIĘGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIEGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIEGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIĘGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIĘGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KS. KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KS. KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KS. KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KS. KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KS. KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KS. KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KS. KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KS. KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KS. KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KS. KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KS. KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KS. KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECI KS KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("TRZECI KS KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIEGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIEGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIĘGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIĘGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 KSIEGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 KSIEGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 KSIĘGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 KSIĘGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIEGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIEGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIEGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIEGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIĘGA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIĘGA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIĘGI KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIĘGI KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. KS. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. KS. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KS KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KS KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KS KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZA KS KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KS KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KS KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KS KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZE KS KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KS KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KS KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KS KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PIERWSZY KS KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III KS. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III KS. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. KS KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III. KS KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KS. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KS. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIEGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIEGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIEGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIEGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIEGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIEGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIEGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIEGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIĘGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIĘGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIĘGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIĘGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIĘGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIĘGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIĘGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KSIĘGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. KS. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. KS. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KS. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KS. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIEGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIEGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIEGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIEGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIEGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIEGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIEGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIEGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIĘGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIĘGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIĘGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIĘGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIĘGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIĘGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIĘGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KSIĘGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III KS KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("III KS KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KS. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KS. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIEGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIEGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIEGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIEGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIEGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIEGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIEGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIEGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIĘGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIĘGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIĘGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIĘGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIĘGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIĘGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIĘGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KSIĘGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KS KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KS KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 KS. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 KS. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. KS KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3. KS KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KS. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KS. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIEGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIEGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIEGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIEGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIEGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIEGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIEGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIEGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIĘGA KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIĘGA KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIĘGA KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIĘGA KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIĘGI KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIĘGI KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIĘGI KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KSIĘGI KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KS KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KS KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KS KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KS KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 KS KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("3 KS KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KS KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KS KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KS. KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KS. KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KS. KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KS. KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KS. KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KS. KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KS. KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KS. KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KS. KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KS. KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KS. KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KS. KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KS KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KS KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KS KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KS KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KS. KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KS. KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KS. KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KS. KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KS KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KS KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KS KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KS KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KS KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KS KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KS KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KS KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KROLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KRÓLEWSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KS KROLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KS KROLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KS KRÓLOW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KS KRÓLÓW 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KROL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KRÓL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KRL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1KGS 1:1").osis()).toEqual("1Kgs.1.1")
		`
		true
describe "Localized book 2Chr (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Chr (pl)", ->
		`
		expect(p.parse("Druga Ksiega Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druga Ksiegi Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druga Księga Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druga Księgi Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Drugi Ksiega Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Drugi Ksiegi Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Drugi Księga Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Drugi Księgi Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. Ksiega Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. Ksiegi Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. Księga Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. Księgi Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. Ksiega Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. Ksiegi Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. Księga Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. Księgi Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druga Ks. Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Drugi Ks. Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II Ksiega Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II Ksiegi Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II Księga Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II Księgi Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Ksiega Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Ksiegi Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Księga Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Księgi Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druga Ks Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Drugi Ks Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. Ks. Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. Ks. Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II Ks. Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. Ks Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Ks. Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. Ks Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druga Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Drugi Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II Ks Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Ks Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Kron 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Krn 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2Chr 1:1").osis()).toEqual("2Chr.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUGA KSIEGA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUGA KSIEGI KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUGA KSIĘGA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUGA KSIĘGI KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUGI KSIEGA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUGI KSIEGI KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUGI KSIĘGA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUGI KSIĘGI KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KSIEGA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KSIEGI KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KSIĘGA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KSIĘGI KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KSIEGA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KSIEGI KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KSIĘGA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KSIĘGI KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUGA KS. KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUGI KS. KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KSIEGA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KSIEGI KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KSIĘGA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KSIĘGI KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KSIEGA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KSIEGI KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KSIĘGA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KSIĘGI KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUGA KS KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUGI KS KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KS. KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KS. KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KS. KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KS KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KS. KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KS KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUGA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUGI KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KS KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KS KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KRON 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KRN 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2CHR 1:1").osis()).toEqual("2Chr.1.1")
		`
		true
describe "Localized book 1Chr (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Chr (pl)", ->
		`
		expect(p.parse("Pierwsza Ksiega Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwsza Ksiegi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwsza Księga Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwsza Księgi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwsze Ksiega Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwsze Ksiegi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwsze Księga Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwsze Księgi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwszy Ksiega Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwszy Ksiegi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwszy Księga Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwszy Księgi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwsza Ks. Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwsze Ks. Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwszy Ks. Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwsza Ks Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwsze Ks Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwszy Ks Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. Ksiega Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. Ksiegi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. Księga Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. Księgi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. Ksiega Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. Ksiegi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. Księga Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. Księgi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Ksiega Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Ksiegi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Księga Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Księgi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I Ksiega Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I Ksiegi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I Księga Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I Księgi Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwsza Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwsze Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Pierwszy Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. Ks. Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. Ks. Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Ks. Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. Ks Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I Ks. Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. Ks Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Ks Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I Ks Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Kron 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Krn 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1Chr 1:1").osis()).toEqual("1Chr.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PIERWSZA KSIEGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZA KSIEGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZA KSIĘGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZA KSIĘGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZE KSIEGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZE KSIEGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZE KSIĘGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZE KSIĘGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZY KSIEGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZY KSIEGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZY KSIĘGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZY KSIĘGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZA KS. KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZE KS. KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZY KS. KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZA KS KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZE KS KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZY KS KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KSIEGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KSIEGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KSIĘGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KSIĘGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KSIEGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KSIEGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KSIĘGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KSIĘGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KSIEGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KSIEGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KSIĘGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KSIĘGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KSIEGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KSIEGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KSIĘGA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KSIĘGI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZE KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PIERWSZY KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KS. KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KS. KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KS. KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KS KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KS. KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KS KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KS KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KS KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KRON 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KRN 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1CHR 1:1").osis()).toEqual("1Chr.1.1")
		`
		true
describe "Localized book Ezra (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Ezra (pl)", ->
		`
		expect(p.parse("Ksiega Ezdrasza 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ksiegi Ezdrasza 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Księga Ezdrasza 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Księgi Ezdrasza 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ks. Ezdrasza 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ks Ezdrasza 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ezdrasza 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ezdr 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ezra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ezd 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ezr 1:1").osis()).toEqual("Ezra.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA EZDRASZA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KSIEGI EZDRASZA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KSIĘGA EZDRASZA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KSIĘGI EZDRASZA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KS. EZDRASZA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KS EZDRASZA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EZDRASZA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EZDR 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EZD 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EZR 1:1").osis()).toEqual("Ezra.1.1")
		`
		true
describe "Localized book Neh (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Neh (pl)", ->
		`
		expect(p.parse("Ksiega Nehemiasza 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Ksiegi Nehemiasza 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Księga Nehemiasza 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Księgi Nehemiasza 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Ks. Nehemiasza 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Ks Nehemiasza 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Nehemiasza 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Neh 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Ne 1:1").osis()).toEqual("Neh.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA NEHEMIASZA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KSIEGI NEHEMIASZA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KSIĘGA NEHEMIASZA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KSIĘGI NEHEMIASZA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KS. NEHEMIASZA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KS NEHEMIASZA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("NEHEMIASZA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("NEH 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("NE 1:1").osis()).toEqual("Neh.1.1")
		`
		true
describe "Localized book GkEsth (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: GkEsth (pl)", ->
		`
		expect(p.parse("GkEsth 1:1").osis()).toEqual("GkEsth.1.1")
		`
		true
describe "Localized book Esth (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Esth (pl)", ->
		`
		expect(p.parse("Ksiega Estery 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Ksiegi Estery 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Księga Estery 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Księgi Estery 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Ks. Estery 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Ks Estery 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Estery 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Esth 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Est 1:1").osis()).toEqual("Esth.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA ESTERY 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KSIEGI ESTERY 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KSIĘGA ESTERY 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KSIĘGI ESTERY 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KS. ESTERY 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KS ESTERY 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("ESTERY 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("ESTH 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("EST 1:1").osis()).toEqual("Esth.1.1")
		`
		true
describe "Localized book Job (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Job (pl)", ->
		`
		expect(p.parse("Ksiega Hioba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Ksiega Ijoba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Ksiegi Hioba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Ksiegi Ijoba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Księga Hioba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Księga Ijoba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Księgi Hioba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Księgi Ijoba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Ksiega Joba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Ksiegi Joba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Księga Joba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Księgi Joba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Ks. Hioba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Ks. Ijoba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Ks Hioba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Ks Ijoba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Ks. Joba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Ks Joba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Hioba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Hiob 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Joba 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Job 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Hi 1:1").osis()).toEqual("Job.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA HIOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KSIEGA IJOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KSIEGI HIOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KSIEGI IJOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KSIĘGA HIOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KSIĘGA IJOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KSIĘGI HIOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KSIĘGI IJOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KSIEGA JOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KSIEGI JOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KSIĘGA JOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KSIĘGI JOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KS. HIOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KS. IJOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KS HIOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KS IJOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KS. JOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KS JOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("HIOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("HIOB 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("JOBA 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("JOB 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("HI 1:1").osis()).toEqual("Job.1.1")
		`
		true
describe "Localized book Ps (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Ps (pl)", ->
		`
		expect(p.parse("Ksiega Psalmow 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Ksiega Psalmów 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Ksiegi Psalmow 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Ksiegi Psalmów 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Księga Psalmow 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Księga Psalmów 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Księgi Psalmow 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Księgi Psalmów 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Ks. Psalmow 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Ks. Psalmów 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Ks Psalmow 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Ks Psalmów 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Psalmy 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Psalm 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Ps 1:1").osis()).toEqual("Ps.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA PSALMOW 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KSIEGA PSALMÓW 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KSIEGI PSALMOW 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KSIEGI PSALMÓW 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KSIĘGA PSALMOW 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KSIĘGA PSALMÓW 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KSIĘGI PSALMOW 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KSIĘGI PSALMÓW 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KS. PSALMOW 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KS. PSALMÓW 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KS PSALMOW 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KS PSALMÓW 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("PSALMY 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("PSALM 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("PS 1:1").osis()).toEqual("Ps.1.1")
		`
		true
describe "Localized book PrAzar (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: PrAzar (pl)", ->
		`
		expect(p.parse("Modlitwa Azariasza 1:1").osis()).toEqual("PrAzar.1.1")
		expect(p.parse("Modlitwą Azariasza 1:1").osis()).toEqual("PrAzar.1.1")
		expect(p.parse("Piesn Azariasza 1:1").osis()).toEqual("PrAzar.1.1")
		expect(p.parse("Piesń Azariasza 1:1").osis()).toEqual("PrAzar.1.1")
		expect(p.parse("Pieśn Azariasza 1:1").osis()).toEqual("PrAzar.1.1")
		expect(p.parse("Pieśń Azariasza 1:1").osis()).toEqual("PrAzar.1.1")
		expect(p.parse("PrAzar 1:1").osis()).toEqual("PrAzar.1.1")
		`
		true
describe "Localized book Prov (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Prov (pl)", ->
		`
		expect(p.parse("Ksiega Przypowiesci Salomona 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ksiega Przypowieści Salomona 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ksiegi Przypowiesci Salomona 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ksiegi Przypowieści Salomona 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Księga Przypowiesci Salomona 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Księga Przypowieści Salomona 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Księgi Przypowiesci Salomona 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Księgi Przypowieści Salomona 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ks. Przypowiesci Salomona 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ks. Przypowieści Salomona 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Przypowiesci Salomonowych 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Przypowieści Salomonowych 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ks Przypowiesci Salomona 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ks Przypowieści Salomona 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ksiega Przysłow 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ksiega Przysłów 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ksiegi Przysłow 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ksiegi Przysłów 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Księga Przysłow 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Księga Przysłów 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Księgi Przysłow 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Księgi Przysłów 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ks. Przysłow 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ks. Przysłów 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ks Przysłow 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Ks Przysłów 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Przyp 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Prov 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Przy 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Prz 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Pr 1:1").osis()).toEqual("Prov.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA PRZYPOWIESCI SALOMONA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIEGA PRZYPOWIEŚCI SALOMONA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIEGI PRZYPOWIESCI SALOMONA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIEGI PRZYPOWIEŚCI SALOMONA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIĘGA PRZYPOWIESCI SALOMONA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIĘGA PRZYPOWIEŚCI SALOMONA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIĘGI PRZYPOWIESCI SALOMONA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIĘGI PRZYPOWIEŚCI SALOMONA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KS. PRZYPOWIESCI SALOMONA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KS. PRZYPOWIEŚCI SALOMONA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRZYPOWIESCI SALOMONOWYCH 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRZYPOWIEŚCI SALOMONOWYCH 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KS PRZYPOWIESCI SALOMONA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KS PRZYPOWIEŚCI SALOMONA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIEGA PRZYSŁOW 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIEGA PRZYSŁÓW 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIEGI PRZYSŁOW 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIEGI PRZYSŁÓW 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIĘGA PRZYSŁOW 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIĘGA PRZYSŁÓW 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIĘGI PRZYSŁOW 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KSIĘGI PRZYSŁÓW 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KS. PRZYSŁOW 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KS. PRZYSŁÓW 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KS PRZYSŁOW 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KS PRZYSŁÓW 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRZYP 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PROV 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRZY 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRZ 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PR 1:1").osis()).toEqual("Prov.1.1")
		`
		true
describe "Localized book Eccl (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Eccl (pl)", ->
		`
		expect(p.parse("Ksiega Kaznodziei Salomona 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Ksiegi Kaznodziei Salomona 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Księga Kaznodziei Salomona 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Księgi Kaznodziei Salomona 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Kaznodziei Salomonowego 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Ks. Kaznodziei Salomona 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Ks Kaznodziei Salomona 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Ksiega Eklezjastesa 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Ksiegi Eklezjastesa 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Księga Eklezjastesa 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Księgi Eklezjastesa 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Ks. Eklezjastesa 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Ks Eklezjastesa 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Ksiega Koheleta 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Ksiegi Koheleta 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Księga Koheleta 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Księgi Koheleta 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Ks. Koheleta 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Ks Koheleta 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Kohelet 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Eccl 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Kazn 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Ekl 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Koh 1:1").osis()).toEqual("Eccl.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA KAZNODZIEI SALOMONA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KSIEGI KAZNODZIEI SALOMONA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KSIĘGA KAZNODZIEI SALOMONA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KSIĘGI KAZNODZIEI SALOMONA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KAZNODZIEI SALOMONOWEGO 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KS. KAZNODZIEI SALOMONA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KS KAZNODZIEI SALOMONA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KSIEGA EKLEZJASTESA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KSIEGI EKLEZJASTESA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KSIĘGA EKLEZJASTESA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KSIĘGI EKLEZJASTESA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KS. EKLEZJASTESA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KS EKLEZJASTESA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KSIEGA KOHELETA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KSIEGI KOHELETA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KSIĘGA KOHELETA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KSIĘGI KOHELETA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KS. KOHELETA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KS KOHELETA 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KOHELET 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("ECCL 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KAZN 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("EKL 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KOH 1:1").osis()).toEqual("Eccl.1.1")
		`
		true
describe "Localized book SgThree (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: SgThree (pl)", ->
		`
		expect(p.parse("Piesnia trzech młodziencow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesnia trzech młodzienców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesnia trzech młodzieńcow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesnia trzech młodzieńców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesnią trzech młodziencow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesnią trzech młodzienców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesnią trzech młodzieńcow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesnią trzech młodzieńców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśnia trzech młodziencow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśnia trzech młodzienców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśnia trzech młodzieńcow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśnia trzech młodzieńców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśnią trzech młodziencow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśnią trzech młodzienców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśnią trzech młodzieńcow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśnią trzech młodzieńców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesn trzech młodziencow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesn trzech młodzienców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesn trzech młodzieńcow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesn trzech młodzieńców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesń trzech młodziencow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesń trzech młodzienców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesń trzech młodzieńcow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piesń trzech młodzieńców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśn trzech młodziencow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśn trzech młodzienców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśn trzech młodzieńcow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśn trzech młodzieńców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśń trzech młodziencow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśń trzech młodzienców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśń trzech młodzieńcow 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pieśń trzech młodzieńców 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("SgThree 1:1").osis()).toEqual("SgThree.1.1")
		`
		true
describe "Localized book Song (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Song (pl)", ->
		`
		expect(p.parse("Piesn nad Piesniami 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Piesn nad Pieśniami 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Piesń nad Piesniami 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Piesń nad Pieśniami 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pieśn nad Piesniami 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pieśn nad Pieśniami 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pieśń nad Piesniami 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pieśń nad Pieśniami 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Piesn Salomona 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Piesń Salomona 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pieśn Salomona 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pieśń Salomona 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Song 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PNP 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pnp 1:1").osis()).toEqual("Song.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PIESN NAD PIESNIAMI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PIESN NAD PIEŚNIAMI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PIESŃ NAD PIESNIAMI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PIESŃ NAD PIEŚNIAMI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PIEŚN NAD PIESNIAMI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PIEŚN NAD PIEŚNIAMI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PIEŚŃ NAD PIESNIAMI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PIEŚŃ NAD PIEŚNIAMI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PIESN SALOMONA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PIESŃ SALOMONA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PIEŚN SALOMONA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PIEŚŃ SALOMONA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("SONG 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PNP 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PNP 1:1").osis()).toEqual("Song.1.1")
		`
		true
describe "Localized book Jer (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Jer (pl)", ->
		`
		expect(p.parse("Ksiega Jeremiasza 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Ksiegi Jeremiasza 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Księga Jeremiasza 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Księgi Jeremiasza 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Ks. Jeremiasza 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Ks Jeremiasza 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Jeremiasza 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Jer 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Jr 1:1").osis()).toEqual("Jer.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA JEREMIASZA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KSIEGI JEREMIASZA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KSIĘGA JEREMIASZA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KSIĘGI JEREMIASZA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KS. JEREMIASZA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KS JEREMIASZA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("JEREMIASZA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("JER 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("JR 1:1").osis()).toEqual("Jer.1.1")
		`
		true
describe "Localized book Ezek (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Ezek (pl)", ->
		`
		expect(p.parse("Ksiega Ezechiela 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Ksiegi Ezechiela 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Księga Ezechiela 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Księgi Ezechiela 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Ks. Ezechiela 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Ks Ezechiela 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Ezechiela 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Ezek 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Eze 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Ez 1:1").osis()).toEqual("Ezek.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA EZECHIELA 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KSIEGI EZECHIELA 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KSIĘGA EZECHIELA 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KSIĘGI EZECHIELA 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KS. EZECHIELA 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KS EZECHIELA 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("EZECHIELA 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("EZEK 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("EZE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("EZ 1:1").osis()).toEqual("Ezek.1.1")
		`
		true
describe "Localized book Dan (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Dan (pl)", ->
		`
		expect(p.parse("Ksiega Daniela 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("Ksiegi Daniela 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("Księga Daniela 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("Księgi Daniela 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("Ks. Daniela 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("Ks Daniela 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("Daniela 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("Dan 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("Da 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("Dn 1:1").osis()).toEqual("Dan.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA DANIELA 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KSIEGI DANIELA 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KSIĘGA DANIELA 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KSIĘGI DANIELA 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KS. DANIELA 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KS DANIELA 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("DANIELA 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("DAN 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("DA 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("DN 1:1").osis()).toEqual("Dan.1.1")
		`
		true
describe "Localized book Hos (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Hos (pl)", ->
		`
		expect(p.parse("Ksiega Ozeasza 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Ksiegi Ozeasza 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Księga Ozeasza 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Księgi Ozeasza 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Ks. Ozeasza 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Ks Ozeasza 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Ozeasza 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Hos 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Oz 1:1").osis()).toEqual("Hos.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA OZEASZA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KSIEGI OZEASZA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KSIĘGA OZEASZA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KSIĘGI OZEASZA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KS. OZEASZA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KS OZEASZA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("OZEASZA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("HOS 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("OZ 1:1").osis()).toEqual("Hos.1.1")
		`
		true
describe "Localized book Joel (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Joel (pl)", ->
		`
		expect(p.parse("Proroctwo Ioelowe 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Ksiega Joela 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Ksiegi Joela 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Księga Joela 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Księgi Joela 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Ks. Joela 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Ks Joela 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Joela 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Joel 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Jl 1:1").osis()).toEqual("Joel.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PROROCTWO IOELOWE 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KSIEGA JOELA 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KSIEGI JOELA 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KSIĘGA JOELA 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KSIĘGI JOELA 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KS. JOELA 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KS JOELA 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("JOELA 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("JOEL 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("JL 1:1").osis()).toEqual("Joel.1.1")
		`
		true
describe "Localized book Amos (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Amos (pl)", ->
		`
		expect(p.parse("Ksiega Amosa 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("Ksiegi Amosa 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("Księga Amosa 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("Księgi Amosa 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("Ks. Amosa 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("Ks Amosa 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("Amosa 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("Amos 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("Am 1:1").osis()).toEqual("Amos.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA AMOSA 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KSIEGI AMOSA 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KSIĘGA AMOSA 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KSIĘGI AMOSA 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KS. AMOSA 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KS AMOSA 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("AMOSA 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("AMOS 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("AM 1:1").osis()).toEqual("Amos.1.1")
		`
		true
describe "Localized book Obad (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Obad (pl)", ->
		`
		expect(p.parse("Proroctwo Abdyaszowe 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Ksiega Abdiasza 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Ksiegi Abdiasza 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Księga Abdiasza 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Księgi Abdiasza 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Ks. Abdiasza 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Ks Abdiasza 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Abdiasza 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Obad 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Ab 1:1").osis()).toEqual("Obad.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PROROCTWO ABDYASZOWE 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KSIEGA ABDIASZA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KSIEGI ABDIASZA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KSIĘGA ABDIASZA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KSIĘGI ABDIASZA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KS. ABDIASZA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KS ABDIASZA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ABDIASZA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OBAD 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("AB 1:1").osis()).toEqual("Obad.1.1")
		`
		true
describe "Localized book Jonah (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Jonah (pl)", ->
		`
		expect(p.parse("Proroctwo Ionaszowe 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Ksiega Jonasza 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Ksiegi Jonasza 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Księga Jonasza 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Księgi Jonasza 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Ks. Jonasza 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Ks Jonasza 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Jonasza 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Jonah 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Jon 1:1").osis()).toEqual("Jonah.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PROROCTWO IONASZOWE 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KSIEGA JONASZA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KSIEGI JONASZA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KSIĘGA JONASZA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KSIĘGI JONASZA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KS. JONASZA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KS JONASZA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("JONASZA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("JONAH 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("JON 1:1").osis()).toEqual("Jonah.1.1")
		`
		true
describe "Localized book Mic (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Mic (pl)", ->
		`
		expect(p.parse("Ksiega Micheasza 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Ksiegi Micheasza 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Księga Micheasza 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Księgi Micheasza 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Ks. Micheasza 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Ks Micheasza 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Micheasza 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Mich 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Mic 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Mi 1:1").osis()).toEqual("Mic.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA MICHEASZA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KSIEGI MICHEASZA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KSIĘGA MICHEASZA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KSIĘGI MICHEASZA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KS. MICHEASZA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KS MICHEASZA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MICHEASZA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MICH 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MIC 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MI 1:1").osis()).toEqual("Mic.1.1")
		`
		true
describe "Localized book Nah (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Nah (pl)", ->
		`
		expect(p.parse("Proroctwo Nahumowe 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("Ksiega Nahuma 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("Ksiegi Nahuma 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("Księga Nahuma 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("Księgi Nahuma 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("Ks. Nahuma 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("Ks Nahuma 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("Nahuma 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("Nach 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("Nah 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("Na 1:1").osis()).toEqual("Nah.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PROROCTWO NAHUMOWE 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KSIEGA NAHUMA 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KSIEGI NAHUMA 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KSIĘGA NAHUMA 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KSIĘGI NAHUMA 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KS. NAHUMA 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KS NAHUMA 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("NAHUMA 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("NACH 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("NAH 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("NA 1:1").osis()).toEqual("Nah.1.1")
		`
		true
describe "Localized book Hab (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Hab (pl)", ->
		`
		expect(p.parse("Proroctwo Abakukowe 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Ksiega Habakuka 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Ksiegi Habakuka 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Księga Habakuka 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Księgi Habakuka 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Ks. Habakuka 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Ks Habakuka 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Habakuka 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Abakuka 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Hab 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Ha 1:1").osis()).toEqual("Hab.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PROROCTWO ABAKUKOWE 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KSIEGA HABAKUKA 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KSIEGI HABAKUKA 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KSIĘGA HABAKUKA 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KSIĘGI HABAKUKA 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KS. HABAKUKA 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KS HABAKUKA 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("HABAKUKA 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("ABAKUKA 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("HAB 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("HA 1:1").osis()).toEqual("Hab.1.1")
		`
		true
describe "Localized book Zeph (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Zeph (pl)", ->
		`
		expect(p.parse("Proroctwo Sofoniaszowe 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Ksiega Sofoniasza 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Ksiegi Sofoniasza 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Księga Sofoniasza 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Księgi Sofoniasza 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Ks. Sofoniasza 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Ks Sofoniasza 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Sofoniasza 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Zeph 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Sof 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("So 1:1").osis()).toEqual("Zeph.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PROROCTWO SOFONIASZOWE 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KSIEGA SOFONIASZA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KSIEGI SOFONIASZA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KSIĘGA SOFONIASZA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KSIĘGI SOFONIASZA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KS. SOFONIASZA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KS SOFONIASZA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("SOFONIASZA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("ZEPH 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("SOF 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("SO 1:1").osis()).toEqual("Zeph.1.1")
		`
		true
describe "Localized book Hag (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Hag (pl)", ->
		`
		expect(p.parse("Proroctwo Aggieuszowe 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Ksiega Aggeusza 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Ksiegi Aggeusza 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Księga Aggeusza 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Księgi Aggeusza 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Ks. Aggeusza 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Ks Aggeusza 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Aggeusza 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Hag 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Ag 1:1").osis()).toEqual("Hag.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PROROCTWO AGGIEUSZOWE 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KSIEGA AGGEUSZA 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KSIEGI AGGEUSZA 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KSIĘGA AGGEUSZA 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KSIĘGI AGGEUSZA 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KS. AGGEUSZA 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KS AGGEUSZA 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("AGGEUSZA 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("HAG 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("AG 1:1").osis()).toEqual("Hag.1.1")
		`
		true
describe "Localized book Zech (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Zech (pl)", ->
		`
		expect(p.parse("Ksiega Zachariasza 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Ksiegi Zachariasza 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Księga Zachariasza 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Księgi Zachariasza 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Ks. Zachariasza 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Ks Zachariasza 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Zachariasza 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Zach 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Zech 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Za 1:1").osis()).toEqual("Zech.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KSIEGA ZACHARIASZA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KSIEGI ZACHARIASZA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KSIĘGA ZACHARIASZA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KSIĘGI ZACHARIASZA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KS. ZACHARIASZA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KS ZACHARIASZA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZACHARIASZA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZACH 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZECH 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZA 1:1").osis()).toEqual("Zech.1.1")
		`
		true
describe "Localized book Mal (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Mal (pl)", ->
		`
		expect(p.parse("Proroctwo Malachyaszowe 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Ksiega Malachiasza 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Ksiegi Malachiasza 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Księga Malachiasza 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Księgi Malachiasza 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Ks. Malachiasza 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Ks Malachiasza 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Malachiasza 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Mal 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Ml 1:1").osis()).toEqual("Mal.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PROROCTWO MALACHYASZOWE 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KSIEGA MALACHIASZA 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KSIEGI MALACHIASZA 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KSIĘGA MALACHIASZA 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KSIĘGI MALACHIASZA 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KS. MALACHIASZA 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KS MALACHIASZA 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("MALACHIASZA 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("MAL 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("ML 1:1").osis()).toEqual("Mal.1.1")
		`
		true
describe "Localized book Matt (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Matt (pl)", ->
		`
		expect(p.parse("Ewangelia według sw. Mateusza 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Ewangelia według św. Mateusza 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Ewangelia według sw Mateusza 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Ewangelia według św Mateusza 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Ewangelia wg sw. Mateusza 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Ewangelia wg św. Mateusza 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Ewangelia wg sw Mateusza 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Ewangelia wg św Mateusza 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Ewangelia Mateusza 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Ew. Mateusza 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Ew Mateusza 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Mateusza 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Mateusz 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Ew Mat 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Matt 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Mat 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Mt 1:1").osis()).toEqual("Matt.1.1")
		p.include_apocrypha(false)
		expect(p.parse("EWANGELIA WEDŁUG SW. MATEUSZA 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EWANGELIA WEDŁUG ŚW. MATEUSZA 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EWANGELIA WEDŁUG SW MATEUSZA 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EWANGELIA WEDŁUG ŚW MATEUSZA 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EWANGELIA WG SW. MATEUSZA 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EWANGELIA WG ŚW. MATEUSZA 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EWANGELIA WG SW MATEUSZA 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EWANGELIA WG ŚW MATEUSZA 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EWANGELIA MATEUSZA 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EW. MATEUSZA 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EW MATEUSZA 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MATEUSZA 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MATEUSZ 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EW MAT 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MATT 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MAT 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MT 1:1").osis()).toEqual("Matt.1.1")
		`
		true
describe "Localized book Mark (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Mark (pl)", ->
		`
		expect(p.parse("Ewangelia według sw. Marka 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Ewangelia według św. Marka 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Ewangelia według sw Marka 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Ewangelia według św Marka 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Ewangelia wg sw. Marka 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Ewangelia wg św. Marka 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Ewangelia wg sw Marka 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Ewangelia wg św Marka 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Ewangelia Marka 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Ew. Marka 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Ew Marka 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Ew Mar 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Marek 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Marka 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Mark 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Mar 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Mk 1:1").osis()).toEqual("Mark.1.1")
		p.include_apocrypha(false)
		expect(p.parse("EWANGELIA WEDŁUG SW. MARKA 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EWANGELIA WEDŁUG ŚW. MARKA 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EWANGELIA WEDŁUG SW MARKA 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EWANGELIA WEDŁUG ŚW MARKA 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EWANGELIA WG SW. MARKA 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EWANGELIA WG ŚW. MARKA 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EWANGELIA WG SW MARKA 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EWANGELIA WG ŚW MARKA 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EWANGELIA MARKA 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EW. MARKA 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EW MARKA 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EW MAR 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("MAREK 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("MARKA 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("MARK 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("MAR 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("MK 1:1").osis()).toEqual("Mark.1.1")
		`
		true
describe "Localized book Luke (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Luke (pl)", ->
		`
		expect(p.parse("Ewangelia według sw. Łukasza 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Ewangelia według św. Łukasza 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Ewangelia według sw Łukasza 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Ewangelia według św Łukasza 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Ewangelia wg sw. Łukasza 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Ewangelia wg św. Łukasza 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Ewangelia wg sw Łukasza 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Ewangelia wg św Łukasza 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Ewangelia Łukasza 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Ew. Łukasza 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Ew Łukasza 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Łukasza 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Ew Łuk 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Łukasz 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Luke 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Luk 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Łuk 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Lk 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Łk 1:1").osis()).toEqual("Luke.1.1")
		p.include_apocrypha(false)
		expect(p.parse("EWANGELIA WEDŁUG SW. ŁUKASZA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EWANGELIA WEDŁUG ŚW. ŁUKASZA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EWANGELIA WEDŁUG SW ŁUKASZA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EWANGELIA WEDŁUG ŚW ŁUKASZA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EWANGELIA WG SW. ŁUKASZA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EWANGELIA WG ŚW. ŁUKASZA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EWANGELIA WG SW ŁUKASZA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EWANGELIA WG ŚW ŁUKASZA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EWANGELIA ŁUKASZA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EW. ŁUKASZA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EW ŁUKASZA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ŁUKASZA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EW ŁUK 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ŁUKASZ 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LUKE 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LUK 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ŁUK 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LK 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ŁK 1:1").osis()).toEqual("Luke.1.1")
		`
		true
describe "Localized book Acts (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Acts (pl)", ->
		`
		expect(p.parse("Dziejach Apostolskich 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Dzieje Apostolskie 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Dzieje Apost. 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Dzieje Apost 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Dzieje 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Dz Ap 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Acts 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Dz 1:1").osis()).toEqual("Acts.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DZIEJACH APOSTOLSKICH 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("DZIEJE APOSTOLSKIE 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("DZIEJE APOST. 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("DZIEJE APOST 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("DZIEJE 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("DZ AP 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("ACTS 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("DZ 1:1").osis()).toEqual("Acts.1.1")
		`
		true
describe "Localized book Rev (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Rev (pl)", ->
		`
		expect(p.parse("Apokalipsa Swietego Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Apokalipsa Swiętego Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Apokalipsa Świetego Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Apokalipsa Świętego Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Apokalipsa sw. Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Apokalipsa św. Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Objawienie sw. Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Objawienie św. Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Apokalipsa sw Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Apokalipsa św Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Objawienie sw Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Objawienie św Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Ksiega Apokalipsy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Ksiega Objawienia 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Ksiegi Apokalipsy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Ksiegi Objawienia 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Księga Apokalipsy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Księga Objawienia 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Księgi Apokalipsy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Księgi Objawienia 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Objawienie Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Ks. Apokalipsy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Ks. Objawienia 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Ks Apokalipsy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Ks Objawienia 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Apokalipsa 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Objawienie 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Obj 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Rev 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Ap 1:1").osis()).toEqual("Rev.1.1")
		p.include_apocrypha(false)
		expect(p.parse("APOKALIPSA SWIETEGO JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("APOKALIPSA SWIĘTEGO JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("APOKALIPSA ŚWIETEGO JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("APOKALIPSA ŚWIĘTEGO JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("APOKALIPSA SW. JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("APOKALIPSA ŚW. JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OBJAWIENIE SW. JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OBJAWIENIE ŚW. JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("APOKALIPSA SW JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("APOKALIPSA ŚW JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OBJAWIENIE SW JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OBJAWIENIE ŚW JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KSIEGA APOKALIPSY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KSIEGA OBJAWIENIA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KSIEGI APOKALIPSY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KSIEGI OBJAWIENIA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KSIĘGA APOKALIPSY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KSIĘGA OBJAWIENIA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KSIĘGI APOKALIPSY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KSIĘGI OBJAWIENIA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OBJAWIENIE JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KS. APOKALIPSY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KS. OBJAWIENIA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KS APOKALIPSY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KS OBJAWIENIA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("APOKALIPSA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OBJAWIENIE 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OBJ 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("REV 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("AP 1:1").osis()).toEqual("Rev.1.1")
		`
		true
describe "Localized book 1John (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1John (pl)", ->
		`
		expect(p.parse("Pierwsza List sw. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwsza List św. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwsze List sw. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwsze List św. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwszy List sw. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwszy List św. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwsza List sw Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwsza List św Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwsze List sw Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwsze List św Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwszy List sw Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwszy List św Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwsza List Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwsze List Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwszy List Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. List sw. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. List św. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. List sw. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. List św. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 List sw. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 List św. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. List sw Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. List św Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I List sw. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I List św. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. List sw Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. List św Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 List sw Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 List św Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I List sw Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I List św Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwsza Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwsze Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Pierwszy Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. List Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. List Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 List Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I List Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I Jana 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 Jan 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1John 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 Jn 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 J 1:1").osis()).toEqual("1John.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PIERWSZA LIST SW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZA LIST ŚW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZE LIST SW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZE LIST ŚW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZY LIST SW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZY LIST ŚW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZA LIST SW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZA LIST ŚW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZE LIST SW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZE LIST ŚW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZY LIST SW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZY LIST ŚW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZA LIST JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZE LIST JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZY LIST JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. LIST SW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. LIST ŚW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. LIST SW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. LIST ŚW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 LIST SW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 LIST ŚW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. LIST SW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. LIST ŚW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I LIST SW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I LIST ŚW. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. LIST SW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. LIST ŚW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 LIST SW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 LIST ŚW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I LIST SW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I LIST ŚW JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZA JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZE JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PIERWSZY JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. LIST JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. LIST JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 LIST JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I LIST JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I JANA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 JAN 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1JOHN 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 JN 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 J 1:1").osis()).toEqual("1John.1.1")
		`
		true
describe "Localized book 2John (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2John (pl)", ->
		`
		expect(p.parse("Druga List sw. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druga List św. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Drugi List sw. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Drugi List św. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druga List sw Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druga List św Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Drugi List sw Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Drugi List św Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. List sw. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. List św. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. List sw. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. List św. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II List sw. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II List św. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. List sw Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. List św Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 List sw. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 List św. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. List sw Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. List św Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druga List Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Drugi List Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II List sw Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II List św Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 List sw Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 List św Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. List Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. List Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II List Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 List Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druga Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Drugi Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 Jana 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 Jan 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2John 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 Jn 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 J 1:1").osis()).toEqual("2John.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUGA LIST SW. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUGA LIST ŚW. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUGI LIST SW. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUGI LIST ŚW. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUGA LIST SW JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUGA LIST ŚW JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUGI LIST SW JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUGI LIST ŚW JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. LIST SW. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. LIST ŚW. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. LIST SW. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. LIST ŚW. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II LIST SW. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II LIST ŚW. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. LIST SW JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. LIST ŚW JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 LIST SW. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 LIST ŚW. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. LIST SW JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. LIST ŚW JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUGA LIST JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUGI LIST JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II LIST SW JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II LIST ŚW JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 LIST SW JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 LIST ŚW JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. LIST JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. LIST JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II LIST JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 LIST JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUGA JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUGI JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 JANA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 JAN 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2JOHN 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 JN 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 J 1:1").osis()).toEqual("2John.1.1")
		`
		true
describe "Localized book 3John (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 3John (pl)", ->
		`
		expect(p.parse("Trzecia List sw. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Trzecia List św. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Trzeci List sw. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Trzeci List św. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Trzecia List sw Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Trzecia List św Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Trzeci List sw Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Trzeci List św Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. List sw. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. List św. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III List sw. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III List św. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. List sw Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. List św Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Trzecia List Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. List sw. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. List św. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III List sw Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III List św Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Trzeci List Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 List sw. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 List św. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. List sw Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. List św Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 List sw Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 List św Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. List Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III List Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. List Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Trzecia Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 List Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Trzeci Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 Jana 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 Jan 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3John 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 Jn 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 J 1:1").osis()).toEqual("3John.1.1")
		p.include_apocrypha(false)
		expect(p.parse("TRZECIA LIST SW. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRZECIA LIST ŚW. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRZECI LIST SW. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRZECI LIST ŚW. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRZECIA LIST SW JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRZECIA LIST ŚW JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRZECI LIST SW JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRZECI LIST ŚW JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. LIST SW. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. LIST ŚW. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III LIST SW. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III LIST ŚW. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. LIST SW JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. LIST ŚW JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRZECIA LIST JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. LIST SW. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. LIST ŚW. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III LIST SW JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III LIST ŚW JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRZECI LIST JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 LIST SW. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 LIST ŚW. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. LIST SW JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. LIST ŚW JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 LIST SW JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 LIST ŚW JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. LIST JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III LIST JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. LIST JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRZECIA JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 LIST JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRZECI JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 JANA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 JAN 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3JOHN 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 JN 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 J 1:1").osis()).toEqual("3John.1.1")
		`
		true
describe "Localized book John (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: John (pl)", ->
		`
		expect(p.parse("Ewangelia według sw. Jana 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Ewangelia według św. Jana 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Ewangelia według sw Jana 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Ewangelia według św Jana 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Ewangelia wg sw. Jana 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Ewangelia wg św. Jana 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Ewangelia wg sw Jana 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Ewangelia wg św Jana 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Ewangelia Jana 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Ew. Jana 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Ew Jana 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Ew Jan 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Jana 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("John 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Jan 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Jn 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("J 1:1").osis()).toEqual("John.1.1")
		p.include_apocrypha(false)
		expect(p.parse("EWANGELIA WEDŁUG SW. JANA 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EWANGELIA WEDŁUG ŚW. JANA 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EWANGELIA WEDŁUG SW JANA 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EWANGELIA WEDŁUG ŚW JANA 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EWANGELIA WG SW. JANA 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EWANGELIA WG ŚW. JANA 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EWANGELIA WG SW JANA 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EWANGELIA WG ŚW JANA 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EWANGELIA JANA 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EW. JANA 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EW JANA 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EW JAN 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("JANA 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("JOHN 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("JAN 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("JN 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("J 1:1").osis()).toEqual("John.1.1")
		`
		true
describe "Localized book Rom (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Rom (pl)", ->
		`
		expect(p.parse("List sw. Pawła do Rzymian 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("List św. Pawła do Rzymian 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("List sw Pawła do Rzymian 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("List św Pawła do Rzymian 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("List do Rzymian 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Rzymian 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Rzym 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Rom 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Rz 1:1").osis()).toEqual("Rom.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST SW. PAWŁA DO RZYMIAN 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("LIST ŚW. PAWŁA DO RZYMIAN 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("LIST SW PAWŁA DO RZYMIAN 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("LIST ŚW PAWŁA DO RZYMIAN 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("LIST DO RZYMIAN 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("RZYMIAN 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("RZYM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ROM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("RZ 1:1").osis()).toEqual("Rom.1.1")
		`
		true
describe "Localized book 2Cor (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Cor (pl)", ->
		`
		expect(p.parse("Druga List sw. Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druga List św. Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Drugi List sw. Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Drugi List św. Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druga List sw Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druga List św Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Drugi List sw Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Drugi List św Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. List sw. Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. List św. Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. List sw. Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. List św. Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II List sw. Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II List św. Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. List sw Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. List św Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 List sw. Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 List św. Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. List sw Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. List św Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II List sw Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II List św Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 List sw Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 List św Pawła do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druga list do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Drugi list do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. list do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. list do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II list do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 list do Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druga Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Drugi Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druga Koryntow 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druga Koryntów 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Drugi Koryntow 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Drugi Koryntów 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. Koryntow 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. Koryntów 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 Koryntian 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. Koryntow 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. Koryntów 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II Koryntow 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II Koryntów 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 Koryntow 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 Koryntów 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 Kor 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2Cor 1:1").osis()).toEqual("2Cor.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUGA LIST SW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGA LIST ŚW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGI LIST SW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGI LIST ŚW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGA LIST SW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGA LIST ŚW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGI LIST SW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGI LIST ŚW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. LIST SW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. LIST ŚW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. LIST SW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. LIST ŚW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II LIST SW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II LIST ŚW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. LIST SW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. LIST ŚW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 LIST SW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 LIST ŚW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. LIST SW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. LIST ŚW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II LIST SW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II LIST ŚW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 LIST SW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 LIST ŚW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGA LIST DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGI LIST DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. LIST DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. LIST DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II LIST DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 LIST DO KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGA KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGI KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGA KORYNTOW 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGA KORYNTÓW 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGI KORYNTOW 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUGI KORYNTÓW 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. KORYNTOW 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. KORYNTÓW 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 KORYNTIAN 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. KORYNTOW 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. KORYNTÓW 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II KORYNTOW 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II KORYNTÓW 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 KORYNTOW 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 KORYNTÓW 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 KOR 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2COR 1:1").osis()).toEqual("2Cor.1.1")
		`
		true
describe "Localized book 1Cor (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Cor (pl)", ->
		`
		expect(p.parse("Pierwsza List sw. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsza List św. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsze List sw. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsze List św. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwszy List sw. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwszy List św. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsza List sw Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsza List św Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsze List sw Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsze List św Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwszy List sw Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwszy List św Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. List sw. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. List św. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. List sw. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. List św. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 List sw. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 List św. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. List sw Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. List św Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I List sw. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I List św. Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. List sw Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. List św Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 List sw Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 List św Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I List sw Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I List św Pawła do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsza list do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsze list do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwszy list do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. list do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. list do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 list do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I list do Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsza Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsze Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwszy Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsza Koryntow 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsza Koryntów 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsze Koryntow 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwsze Koryntów 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwszy Koryntow 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Pierwszy Koryntów 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. Koryntow 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. Koryntów 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I Koryntian 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. Koryntow 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. Koryntów 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 Koryntow 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 Koryntów 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I Koryntow 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I Koryntów 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 Kor 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1Cor 1:1").osis()).toEqual("1Cor.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PIERWSZA LIST SW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZA LIST ŚW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZE LIST SW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZE LIST ŚW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZY LIST SW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZY LIST ŚW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZA LIST SW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZA LIST ŚW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZE LIST SW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZE LIST ŚW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZY LIST SW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZY LIST ŚW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. LIST SW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. LIST ŚW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. LIST SW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. LIST ŚW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 LIST SW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 LIST ŚW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. LIST SW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. LIST ŚW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I LIST SW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I LIST ŚW. PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. LIST SW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. LIST ŚW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 LIST SW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 LIST ŚW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I LIST SW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I LIST ŚW PAWŁA DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZA LIST DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZE LIST DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZY LIST DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. LIST DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. LIST DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 LIST DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I LIST DO KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZA KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZE KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZY KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZA KORYNTOW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZA KORYNTÓW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZE KORYNTOW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZE KORYNTÓW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZY KORYNTOW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PIERWSZY KORYNTÓW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. KORYNTOW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. KORYNTÓW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I KORYNTIAN 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. KORYNTOW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. KORYNTÓW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 KORYNTOW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 KORYNTÓW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I KORYNTOW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I KORYNTÓW 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 KOR 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1COR 1:1").osis()).toEqual("1Cor.1.1")
		`
		true
describe "Localized book Gal (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Gal (pl)", ->
		`
		expect(p.parse("List sw. Pawła do Galacjan 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("List św. Pawła do Galacjan 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("List sw Pawła do Galacjan 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("List św Pawła do Galacjan 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("List do Galacjan 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("List do Galatow 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("List do Galatów 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("Galacjan 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("Galatow 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("Galatów 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("Gal 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("Ga 1:1").osis()).toEqual("Gal.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST SW. PAWŁA DO GALACJAN 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("LIST ŚW. PAWŁA DO GALACJAN 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("LIST SW PAWŁA DO GALACJAN 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("LIST ŚW PAWŁA DO GALACJAN 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("LIST DO GALACJAN 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("LIST DO GALATOW 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("LIST DO GALATÓW 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("GALACJAN 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("GALATOW 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("GALATÓW 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("GAL 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("GA 1:1").osis()).toEqual("Gal.1.1")
		`
		true
describe "Localized book Eph (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Eph (pl)", ->
		`
		expect(p.parse("List Swietego Pawła Apostoła do Efezow 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List Swietego Pawła Apostoła do Efezów 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List Swiętego Pawła Apostoła do Efezow 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List Swiętego Pawła Apostoła do Efezów 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List Świetego Pawła Apostoła do Efezow 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List Świetego Pawła Apostoła do Efezów 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List Świętego Pawła Apostoła do Efezow 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List Świętego Pawła Apostoła do Efezów 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List sw. Pawła do Efezjan 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List św. Pawła do Efezjan 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List sw Pawła do Efezjan 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List św Pawła do Efezjan 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List do Efezjan 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Efezjan 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Efezow 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Efezów 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Efez 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Eph 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Ef 1:1").osis()).toEqual("Eph.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST SWIETEGO PAWŁA APOSTOŁA DO EFEZOW 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST SWIETEGO PAWŁA APOSTOŁA DO EFEZÓW 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST SWIĘTEGO PAWŁA APOSTOŁA DO EFEZOW 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST SWIĘTEGO PAWŁA APOSTOŁA DO EFEZÓW 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST ŚWIETEGO PAWŁA APOSTOŁA DO EFEZOW 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST ŚWIETEGO PAWŁA APOSTOŁA DO EFEZÓW 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST ŚWIĘTEGO PAWŁA APOSTOŁA DO EFEZOW 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST ŚWIĘTEGO PAWŁA APOSTOŁA DO EFEZÓW 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST SW. PAWŁA DO EFEZJAN 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST ŚW. PAWŁA DO EFEZJAN 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST SW PAWŁA DO EFEZJAN 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST ŚW PAWŁA DO EFEZJAN 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST DO EFEZJAN 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EFEZJAN 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EFEZOW 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EFEZÓW 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EFEZ 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EPH 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EF 1:1").osis()).toEqual("Eph.1.1")
		`
		true
describe "Localized book Phil (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Phil (pl)", ->
		`
		expect(p.parse("List sw. Pawła do Filipian 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("List św. Pawła do Filipian 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("List sw Pawła do Filipian 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("List św Pawła do Filipian 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("List do Filipian 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Filipensow 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Filipensów 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Filipian 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Filip 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Phil 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Fil 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Flp 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Fl 1:1").osis()).toEqual("Phil.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST SW. PAWŁA DO FILIPIAN 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("LIST ŚW. PAWŁA DO FILIPIAN 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("LIST SW PAWŁA DO FILIPIAN 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("LIST ŚW PAWŁA DO FILIPIAN 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("LIST DO FILIPIAN 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FILIPENSOW 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FILIPENSÓW 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FILIPIAN 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FILIP 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("PHIL 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FIL 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FLP 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FL 1:1").osis()).toEqual("Phil.1.1")
		`
		true
describe "Localized book Col (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Col (pl)", ->
		`
		expect(p.parse("List sw. Pawła do Kolosan 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("List św. Pawła do Kolosan 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("List sw Pawła do Kolosan 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("List św Pawła do Kolosan 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("List do Kolosan 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Kolosensow 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Kolosensów 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Kolosan 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Col 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Kol 1:1").osis()).toEqual("Col.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST SW. PAWŁA DO KOLOSAN 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("LIST ŚW. PAWŁA DO KOLOSAN 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("LIST SW PAWŁA DO KOLOSAN 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("LIST ŚW PAWŁA DO KOLOSAN 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("LIST DO KOLOSAN 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOLOSENSOW 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOLOSENSÓW 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOLOSAN 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("COL 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOL 1:1").osis()).toEqual("Col.1.1")
		`
		true
describe "Localized book 2Thess (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Thess (pl)", ->
		`
		expect(p.parse("Druga List sw. Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druga List św. Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Drugi List sw. Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Drugi List św. Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druga List sw Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druga List św Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Drugi List sw Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Drugi List św Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. List sw. Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. List św. Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. List sw. Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. List św. Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II List sw. Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II List św. Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. List sw Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. List św Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 List sw. Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 List św. Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. List sw Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. List św Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II List sw Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II List św Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 List sw Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 List św Pawła do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druga List do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Drugi List do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. List do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. List do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II List do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 List do Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druga Tesalonicensow 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druga Tesalonicensów 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Drugi Tesalonicensow 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Drugi Tesalonicensów 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druga Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Drugi Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Tesalonicensow 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Tesalonicensów 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Tesalonicensow 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Tesalonicensów 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Tesalonicensow 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Tesalonicensów 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Tesalonicensow 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Tesalonicensów 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Tesaloniczan 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2Thess 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Tes 1:1").osis()).toEqual("2Thess.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUGA LIST SW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGA LIST ŚW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGI LIST SW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGI LIST ŚW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGA LIST SW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGA LIST ŚW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGI LIST SW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGI LIST ŚW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. LIST SW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. LIST ŚW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. LIST SW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. LIST ŚW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II LIST SW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II LIST ŚW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. LIST SW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. LIST ŚW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 LIST SW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 LIST ŚW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. LIST SW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. LIST ŚW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II LIST SW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II LIST ŚW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 LIST SW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 LIST ŚW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGA LIST DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGI LIST DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. LIST DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. LIST DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II LIST DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 LIST DO TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGA TESALONICENSOW 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGA TESALONICENSÓW 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGI TESALONICENSOW 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGI TESALONICENSÓW 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGA TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUGI TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. TESALONICENSOW 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. TESALONICENSÓW 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. TESALONICENSOW 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. TESALONICENSÓW 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II TESALONICENSOW 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II TESALONICENSÓW 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 TESALONICENSOW 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 TESALONICENSÓW 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 TESALONICZAN 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2THESS 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 TES 1:1").osis()).toEqual("2Thess.1.1")
		`
		true
describe "Localized book 1Thess (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Thess (pl)", ->
		`
		expect(p.parse("Pierwsza List sw. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsza List św. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsze List sw. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsze List św. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwszy List sw. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwszy List św. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsza List sw Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsza List św Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsze List sw Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsze List św Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwszy List sw Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwszy List św Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. List sw. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. List św. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. List sw. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. List św. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 List sw. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 List św. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. List sw Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. List św Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I List sw. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I List św. Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. List sw Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. List św Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 List sw Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 List św Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I List sw Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I List św Pawła do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsza List do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsze List do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwszy List do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. List do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. List do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsza Tesalonicensow 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsza Tesalonicensów 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsze Tesalonicensow 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsze Tesalonicensów 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwszy Tesalonicensow 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwszy Tesalonicensów 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 List do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I List do Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsza Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwsze Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Pierwszy Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Tesalonicensow 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Tesalonicensów 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Tesalonicensow 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Tesalonicensów 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Tesalonicensow 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Tesalonicensów 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Tesalonicensow 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Tesalonicensów 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Tesaloniczan 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1Thess 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Tes 1:1").osis()).toEqual("1Thess.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PIERWSZA LIST SW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZA LIST ŚW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZE LIST SW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZE LIST ŚW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZY LIST SW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZY LIST ŚW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZA LIST SW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZA LIST ŚW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZE LIST SW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZE LIST ŚW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZY LIST SW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZY LIST ŚW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. LIST SW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. LIST ŚW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. LIST SW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. LIST ŚW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 LIST SW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 LIST ŚW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. LIST SW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. LIST ŚW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I LIST SW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I LIST ŚW. PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. LIST SW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. LIST ŚW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 LIST SW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 LIST ŚW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I LIST SW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I LIST ŚW PAWŁA DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZA LIST DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZE LIST DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZY LIST DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. LIST DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. LIST DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZA TESALONICENSOW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZA TESALONICENSÓW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZE TESALONICENSOW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZE TESALONICENSÓW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZY TESALONICENSOW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZY TESALONICENSÓW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 LIST DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I LIST DO TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZA TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZE TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PIERWSZY TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. TESALONICENSOW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. TESALONICENSÓW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. TESALONICENSOW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. TESALONICENSÓW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 TESALONICENSOW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 TESALONICENSÓW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I TESALONICENSOW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I TESALONICENSÓW 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I TESALONICZAN 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1THESS 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 TES 1:1").osis()).toEqual("1Thess.1.1")
		`
		true
describe "Localized book 2Tim (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Tim (pl)", ->
		`
		expect(p.parse("Druga List sw. Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druga List św. Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Drugi List sw. Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Drugi List św. Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druga List sw Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druga List św Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Drugi List sw Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Drugi List św Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. List sw. Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. List św. Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. List sw. Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. List św. Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II List sw. Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II List św. Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. List sw Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. List św Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 List sw. Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 List św. Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. List sw Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. List św Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II List sw Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II List św Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 List sw Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 List św Pawła do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druga List do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Drugi List do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. List do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. List do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II List do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 List do Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druga Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Drugi Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 Tymoteusza 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 Tym 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 Tm 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2Tim 1:1").osis()).toEqual("2Tim.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUGA LIST SW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUGA LIST ŚW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUGI LIST SW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUGI LIST ŚW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUGA LIST SW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUGA LIST ŚW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUGI LIST SW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUGI LIST ŚW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. LIST SW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. LIST ŚW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. LIST SW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. LIST ŚW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II LIST SW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II LIST ŚW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. LIST SW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. LIST ŚW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 LIST SW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 LIST ŚW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. LIST SW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. LIST ŚW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II LIST SW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II LIST ŚW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 LIST SW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 LIST ŚW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUGA LIST DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUGI LIST DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. LIST DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. LIST DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II LIST DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 LIST DO TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUGA TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUGI TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 TYMOTEUSZA 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 TYM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 TM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2TIM 1:1").osis()).toEqual("2Tim.1.1")
		`
		true
describe "Localized book 1Tim (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Tim (pl)", ->
		`
		expect(p.parse("Pierwsza List sw. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwsza List św. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwsze List sw. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwsze List św. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwszy List sw. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwszy List św. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwsza List sw Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwsza List św Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwsze List sw Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwsze List św Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwszy List sw Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwszy List św Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. List sw. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. List św. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. List sw. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. List św. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 List sw. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 List św. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. List sw Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. List św Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I List sw. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I List św. Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. List sw Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. List św Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 List sw Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 List św Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I List sw Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I List św Pawła do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwsza List do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwsze List do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwszy List do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. List do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. List do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 List do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I List do Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwsza Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwsze Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwszy Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I Tymoteusza 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwsza Tym 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwsze Tym 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Pierwszy Tym 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. Tym 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. Tym 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 Tym 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I Tym 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 Tm 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1Tim 1:1").osis()).toEqual("1Tim.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PIERWSZA LIST SW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZA LIST ŚW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZE LIST SW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZE LIST ŚW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZY LIST SW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZY LIST ŚW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZA LIST SW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZA LIST ŚW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZE LIST SW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZE LIST ŚW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZY LIST SW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZY LIST ŚW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. LIST SW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. LIST ŚW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. LIST SW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. LIST ŚW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 LIST SW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 LIST ŚW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. LIST SW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. LIST ŚW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I LIST SW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I LIST ŚW. PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. LIST SW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. LIST ŚW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 LIST SW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 LIST ŚW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I LIST SW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I LIST ŚW PAWŁA DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZA LIST DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZE LIST DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZY LIST DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. LIST DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. LIST DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 LIST DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I LIST DO TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZA TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZE TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZY TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I TYMOTEUSZA 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZA TYM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZE TYM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PIERWSZY TYM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. TYM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. TYM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 TYM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I TYM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 TM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1TIM 1:1").osis()).toEqual("1Tim.1.1")
		`
		true
describe "Localized book Titus (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Titus (pl)", ->
		`
		expect(p.parse("List sw. Pawła do Tytusa 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("List św. Pawła do Tytusa 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("List sw Pawła do Tytusa 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("List św Pawła do Tytusa 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("List do Tytusa 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("Tytusa 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("Titus 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("Tyt 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("Tt 1:1").osis()).toEqual("Titus.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST SW. PAWŁA DO TYTUSA 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("LIST ŚW. PAWŁA DO TYTUSA 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("LIST SW PAWŁA DO TYTUSA 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("LIST ŚW PAWŁA DO TYTUSA 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("LIST DO TYTUSA 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("TYTUSA 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("TITUS 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("TYT 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("TT 1:1").osis()).toEqual("Titus.1.1")
		`
		true
describe "Localized book Phlm (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Phlm (pl)", ->
		`
		expect(p.parse("List sw. Pawła do Filemona 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("List św. Pawła do Filemona 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("List sw Pawła do Filemona 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("List św Pawła do Filemona 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("List do Filemona 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("Filemona 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("Filem 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("Phlm 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("Flm 1:1").osis()).toEqual("Phlm.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST SW. PAWŁA DO FILEMONA 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("LIST ŚW. PAWŁA DO FILEMONA 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("LIST SW PAWŁA DO FILEMONA 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("LIST ŚW PAWŁA DO FILEMONA 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("LIST DO FILEMONA 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("FILEMONA 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("FILEM 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("PHLM 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("FLM 1:1").osis()).toEqual("Phlm.1.1")
		`
		true
describe "Localized book Heb (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Heb (pl)", ->
		`
		expect(p.parse("List do Hebrajczykow 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("List do Hebrajczyków 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("List do Zydow 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("List do Zydów 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("List do Żydow 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("List do Żydów 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Hebrajczykow 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Hebrajczyków 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Zydow 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Zydów 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Żydow 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Żydów 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Hebr 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Hbr 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Heb 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Zyd 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Żyd 1:1").osis()).toEqual("Heb.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST DO HEBRAJCZYKOW 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("LIST DO HEBRAJCZYKÓW 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("LIST DO ZYDOW 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("LIST DO ZYDÓW 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("LIST DO ŻYDOW 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("LIST DO ŻYDÓW 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("HEBRAJCZYKOW 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("HEBRAJCZYKÓW 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ZYDOW 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ZYDÓW 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ŻYDOW 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ŻYDÓW 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("HEBR 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("HBR 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("HEB 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ZYD 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ŻYD 1:1").osis()).toEqual("Heb.1.1")
		`
		true
describe "Localized book Jas (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Jas (pl)", ->
		`
		expect(p.parse("List powszechny Swietego Iakuba Apostoła 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("List powszechny Swiętego Iakuba Apostoła 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("List powszechny Świetego Iakuba Apostoła 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("List powszechny Świętego Iakuba Apostoła 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("List sw. Jakuba 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("List św. Jakuba 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("List sw Jakuba 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("List św Jakuba 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("List Jakuba 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("Jakuba 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("Jak 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("Jas 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("Jk 1:1").osis()).toEqual("Jas.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST POWSZECHNY SWIETEGO IAKUBA APOSTOŁA 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("LIST POWSZECHNY SWIĘTEGO IAKUBA APOSTOŁA 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("LIST POWSZECHNY ŚWIETEGO IAKUBA APOSTOŁA 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("LIST POWSZECHNY ŚWIĘTEGO IAKUBA APOSTOŁA 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("LIST SW. JAKUBA 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("LIST ŚW. JAKUBA 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("LIST SW JAKUBA 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("LIST ŚW JAKUBA 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("LIST JAKUBA 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("JAKUBA 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("JAK 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("JAS 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("JK 1:1").osis()).toEqual("Jas.1.1")
		`
		true
describe "Localized book 2Pet (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Pet (pl)", ->
		`
		expect(p.parse("Druga List sw. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druga List św. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Drugi List sw. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Drugi List św. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druga List sw Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druga List św Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Drugi List sw Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Drugi List św Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. List sw. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. List św. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. List sw. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. List św. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II List sw. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II List św. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. List sw Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. List św Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 List sw. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 List św. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. List sw Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. List św Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druga List Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Drugi List Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II List sw Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II List św Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 List sw Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 List św Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. List Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. List Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II List Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 List Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druga Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Drugi Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druga Piotr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Drugi Piotr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. Piotr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 Piotra 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. Piotr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II Piotr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 Piotr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2Pet 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 P 1:1").osis()).toEqual("2Pet.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUGA LIST SW. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUGA LIST ŚW. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUGI LIST SW. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUGI LIST ŚW. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUGA LIST SW PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUGA LIST ŚW PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUGI LIST SW PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUGI LIST ŚW PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. LIST SW. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. LIST ŚW. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. LIST SW. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. LIST ŚW. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II LIST SW. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II LIST ŚW. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. LIST SW PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. LIST ŚW PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 LIST SW. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 LIST ŚW. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. LIST SW PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. LIST ŚW PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUGA LIST PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUGI LIST PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II LIST SW PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II LIST ŚW PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 LIST SW PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 LIST ŚW PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. LIST PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. LIST PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II LIST PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 LIST PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUGA PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUGI PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUGA PIOTR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUGI PIOTR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. PIOTR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 PIOTRA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. PIOTR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II PIOTR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 PIOTR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2PET 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 P 1:1").osis()).toEqual("2Pet.1.1")
		`
		true
describe "Localized book 1Pet (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Pet (pl)", ->
		`
		expect(p.parse("Pierwsza List sw. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwsza List św. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwsze List sw. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwsze List św. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwszy List sw. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwszy List św. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwsza List sw Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwsza List św Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwsze List sw Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwsze List św Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwszy List sw Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwszy List św Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwsza List Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwsze List Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwszy List Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. List sw. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. List św. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. List sw. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. List św. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 List sw. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 List św. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. List sw Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. List św Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I List sw. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I List św. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. List sw Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. List św Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 List sw Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 List św Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I List sw Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I List św Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwsza Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwsze Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwszy Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. List Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. List Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwsza Piotr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwsze Piotr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Pierwszy Piotr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 List Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I List Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. Piotr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I Piotra 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. Piotr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 Piotr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I Piotr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1Pet 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 P 1:1").osis()).toEqual("1Pet.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PIERWSZA LIST SW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZA LIST ŚW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZE LIST SW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZE LIST ŚW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZY LIST SW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZY LIST ŚW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZA LIST SW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZA LIST ŚW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZE LIST SW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZE LIST ŚW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZY LIST SW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZY LIST ŚW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZA LIST PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZE LIST PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZY LIST PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. LIST SW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. LIST ŚW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. LIST SW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. LIST ŚW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 LIST SW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 LIST ŚW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. LIST SW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. LIST ŚW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I LIST SW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I LIST ŚW. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. LIST SW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. LIST ŚW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 LIST SW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 LIST ŚW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I LIST SW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I LIST ŚW PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZA PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZE PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZY PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. LIST PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. LIST PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZA PIOTR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZE PIOTR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PIERWSZY PIOTR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 LIST PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I LIST PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. PIOTR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I PIOTRA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. PIOTR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 PIOTR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I PIOTR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1PET 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 P 1:1").osis()).toEqual("1Pet.1.1")
		`
		true
describe "Localized book Jude (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Jude (pl)", ->
		`
		expect(p.parse("List powszechny Swietego Iudasa Apostoła 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("List powszechny Swiętego Iudasa Apostoła 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("List powszechny Świetego Iudasa Apostoła 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("List powszechny Świętego Iudasa Apostoła 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("List sw. Judy 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("List św. Judy 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("List sw Judy 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("List św Judy 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("List Judy 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("Jude 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("Judy 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("Jud 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("Jd 1:1").osis()).toEqual("Jude.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST POWSZECHNY SWIETEGO IUDASA APOSTOŁA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("LIST POWSZECHNY SWIĘTEGO IUDASA APOSTOŁA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("LIST POWSZECHNY ŚWIETEGO IUDASA APOSTOŁA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("LIST POWSZECHNY ŚWIĘTEGO IUDASA APOSTOŁA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("LIST SW. JUDY 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("LIST ŚW. JUDY 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("LIST SW JUDY 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("LIST ŚW JUDY 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("LIST JUDY 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("JUDE 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("JUDY 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("JUD 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("JD 1:1").osis()).toEqual("Jude.1.1")
		`
		true
describe "Localized book Tob (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Tob (pl)", ->
		`
		expect(p.parse("Ksiega Tobiasza 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Ksiegi Tobiasza 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Księga Tobiasza 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Księgi Tobiasza 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Ksiega Tobita 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Ksiegi Tobita 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Księga Tobita 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Księgi Tobita 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Ks. Tobiasza 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Ks Tobiasza 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Ks. Tobita 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Ks Tobita 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tob 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tb 1:1").osis()).toEqual("Tob.1.1")
		`
		true
describe "Localized book Jdt (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Jdt (pl)", ->
		`
		expect(p.parse("Ksiega Judyty 1:1").osis()).toEqual("Jdt.1.1")
		expect(p.parse("Ksiegi Judyty 1:1").osis()).toEqual("Jdt.1.1")
		expect(p.parse("Księga Judyty 1:1").osis()).toEqual("Jdt.1.1")
		expect(p.parse("Księgi Judyty 1:1").osis()).toEqual("Jdt.1.1")
		expect(p.parse("Ks. Judyty 1:1").osis()).toEqual("Jdt.1.1")
		expect(p.parse("Ks Judyty 1:1").osis()).toEqual("Jdt.1.1")
		expect(p.parse("Judyty 1:1").osis()).toEqual("Jdt.1.1")
		expect(p.parse("Jdt 1:1").osis()).toEqual("Jdt.1.1")
		`
		true
describe "Localized book Bar (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Bar (pl)", ->
		`
		expect(p.parse("Ksiega Barucha 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Ksiegi Barucha 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Księga Barucha 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Księgi Barucha 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Ks. Barucha 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Ks Barucha 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Barucha 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Bar 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Ba 1:1").osis()).toEqual("Bar.1.1")
		`
		true
describe "Localized book Sus (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Sus (pl)", ->
		`
		expect(p.parse("Opowiadaniem o Zuzannie 1:1").osis()).toEqual("Sus.1.1")
		expect(p.parse("Zuzanna 1:1").osis()).toEqual("Sus.1.1")
		expect(p.parse("Sus 1:1").osis()).toEqual("Sus.1.1")
		`
		true
describe "Localized book 2Macc (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Macc (pl)", ->
		`
		expect(p.parse("Druga Ksiega Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druga Ksiegi Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druga Księga Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druga Księgi Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Drugi Ksiega Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Drugi Ksiegi Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Drugi Księga Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Drugi Księgi Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II. Ksiega Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II. Ksiegi Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II. Księga Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II. Księgi Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2. Ksiega Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2. Ksiegi Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2. Księga Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2. Księgi Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druga Ks. Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Drugi Ks. Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II Ksiega Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II Ksiegi Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II Księga Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II Księgi Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2 Ksiega Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2 Ksiegi Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2 Księga Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2 Księgi Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druga Ks Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Drugi Ks Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II. Ks. Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2. Ks. Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II Ks. Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II. Ks Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2 Ks. Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2. Ks Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II Ks Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2 Ks Machabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2 Mach 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2 Mch 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2Macc 1:1").osis()).toEqual("2Macc.1.1")
		`
		true
describe "Localized book 3Macc (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 3Macc (pl)", ->
		`
		expect(p.parse("Trzecia Ksiega Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Trzecia Ksiegi Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Trzecia Księga Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Trzecia Księgi Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Trzeci Ksiega Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Trzeci Ksiegi Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Trzeci Księga Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Trzeci Księgi Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III. Ksiega Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III. Ksiegi Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III. Księga Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III. Księgi Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Trzecia Ks. Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III Ksiega Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III Ksiegi Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III Księga Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III Księgi Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Trzeci Ks. Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Trzecia Ks Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3. Ksiega Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3. Ksiegi Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3. Księga Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3. Księgi Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Trzeci Ks Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3 Ksiega Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3 Ksiegi Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3 Księga Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3 Księgi Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III. Ks. Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III Ks. Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III. Ks Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3. Ks. Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III Ks Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3 Ks. Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3. Ks Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3 Ks Machabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3 Mach 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3 Mch 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3Macc 1:1").osis()).toEqual("3Macc.1.1")
		`
		true
describe "Localized book 4Macc (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 4Macc (pl)", ->
		`
		expect(p.parse("Czwarta Ksiega Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Czwarta Ksiegi Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Czwarta Księga Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Czwarta Księgi Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Czwarta Ks. Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Czwarta Ks Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV. Ksiega Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV. Ksiegi Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV. Księga Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV. Księgi Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4. Ksiega Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4. Ksiegi Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4. Księga Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4. Księgi Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV Ksiega Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV Ksiegi Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV Księga Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV Księgi Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4 Ksiega Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4 Ksiegi Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4 Księga Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4 Księgi Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV. Ks. Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4. Ks. Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV Ks. Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV. Ks Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4 Ks. Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4. Ks Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV Ks Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4 Ks Machabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4 Mach 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4 Mch 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4Macc 1:1").osis()).toEqual("4Macc.1.1")
		`
		true
describe "Localized book 1Macc (pl)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Macc (pl)", ->
		`
		expect(p.parse("Pierwsza Ksiega Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwsza Ksiegi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwsza Księga Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwsza Księgi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwsze Ksiega Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwsze Ksiegi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwsze Księga Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwsze Księgi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwszy Ksiega Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwszy Ksiegi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwszy Księga Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwszy Księgi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwsza Ks. Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwsze Ks. Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwszy Ks. Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwsza Ks Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwsze Ks Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Pierwszy Ks Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1. Ksiega Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1. Ksiegi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1. Księga Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1. Księgi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I. Ksiega Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I. Ksiegi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I. Księga Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I. Księgi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1 Ksiega Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1 Ksiegi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1 Księga Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1 Księgi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I Ksiega Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I Ksiegi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I Księga Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I Księgi Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1. Ks. Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I. Ks. Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1 Ks. Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1. Ks Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I Ks. Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I. Ks Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1 Ks Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I Ks Machabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1 Mach 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1 Mch 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1Macc 1:1").osis()).toEqual("1Macc.1.1")
		`
		true

describe "Miscellaneous tests", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore", book_sequence_strategy: "ignore", osis_compaction_strategy: "bc", captive_end_digits_strategy: "delete"
		p.include_apocrypha true

	it "should return the expected language", ->
		expect(p.languages).toEqual ["pl"]

	it "should handle ranges (pl)", ->
		expect(p.parse("Titus 1:1 do 2").osis()).toEqual "Titus.1.1-Titus.1.2"
		expect(p.parse("Matt 1do2").osis()).toEqual "Matt.1-Matt.2"
		expect(p.parse("Phlm 2 DO 3").osis()).toEqual "Phlm.1.2-Phlm.1.3"
	it "should handle chapters (pl)", ->
		expect(p.parse("Titus 1:1, rozdziały 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 ROZDZIAŁY 6").osis()).toEqual "Matt.3.4,Matt.6"
		expect(p.parse("Titus 1:1, rozdziałów 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 ROZDZIAŁÓW 6").osis()).toEqual "Matt.3.4,Matt.6"
		expect(p.parse("Titus 1:1, rozdziałow 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 ROZDZIAŁOW 6").osis()).toEqual "Matt.3.4,Matt.6"
		expect(p.parse("Titus 1:1, rozdział 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 ROZDZIAŁ 6").osis()).toEqual "Matt.3.4,Matt.6"
		expect(p.parse("Titus 1:1, rozdz 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 ROZDZ 6").osis()).toEqual "Matt.3.4,Matt.6"
		expect(p.parse("Titus 1:1, rr. 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 RR. 6").osis()).toEqual "Matt.3.4,Matt.6"
		expect(p.parse("Titus 1:1, rr 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 RR 6").osis()).toEqual "Matt.3.4,Matt.6"
		expect(p.parse("Titus 1:1, r. 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 R. 6").osis()).toEqual "Matt.3.4,Matt.6"
		expect(p.parse("Titus 1:1, r 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 R 6").osis()).toEqual "Matt.3.4,Matt.6"
	it "should handle verses (pl)", ->
		expect(p.parse("Exod 1:1 wersetów 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm WERSETÓW 6").osis()).toEqual "Phlm.1.6"
		expect(p.parse("Exod 1:1 wersetow 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm WERSETOW 6").osis()).toEqual "Phlm.1.6"
		expect(p.parse("Exod 1:1 wersety 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm WERSETY 6").osis()).toEqual "Phlm.1.6"
		expect(p.parse("Exod 1:1 werset 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm WERSET 6").osis()).toEqual "Phlm.1.6"
		expect(p.parse("Exod 1:1 wers. 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm WERS. 6").osis()).toEqual "Phlm.1.6"
		expect(p.parse("Exod 1:1 wers 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm WERS 6").osis()).toEqual "Phlm.1.6"
		expect(p.parse("Exod 1:1 w. 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm W. 6").osis()).toEqual "Phlm.1.6"
		expect(p.parse("Exod 1:1 w 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm W 6").osis()).toEqual "Phlm.1.6"
	it "should handle 'and' (pl)", ->
		expect(p.parse("Exod 1:1 oraz 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm 2 ORAZ 6").osis()).toEqual "Phlm.1.2,Phlm.1.6"
		expect(p.parse("Exod 1:1 por 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm 2 POR 6").osis()).toEqual "Phlm.1.2,Phlm.1.6"
		expect(p.parse("Exod 1:1 i 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm 2 I 6").osis()).toEqual "Phlm.1.2,Phlm.1.6"
	it "should handle titles (pl)", ->
		expect(p.parse("Ps 3 tytuł, 4:2, 5:tytuł").osis()).toEqual "Ps.3.1,Ps.4.2,Ps.5.1"
		expect(p.parse("PS 3 TYTUŁ, 4:2, 5:TYTUŁ").osis()).toEqual "Ps.3.1,Ps.4.2,Ps.5.1"
	it "should handle 'ff' (pl)", ->
		expect(p.parse("Rev 3nn, 4:2nn").osis()).toEqual "Rev.3-Rev.22,Rev.4.2-Rev.4.11"
		expect(p.parse("REV 3 NN, 4:2 NN").osis()).toEqual "Rev.3-Rev.22,Rev.4.2-Rev.4.11"
	it "should handle 'next' (pl)", ->
		expect(p.parse("Rev 3:1n, 4:2n").osis()).toEqual "Rev.3.1-Rev.3.2,Rev.4.2-Rev.4.3"
		expect(p.parse("REV 3 N, 4:2 N").osis()).toEqual "Rev.3-Rev.4,Rev.4.2-Rev.4.3"
		expect(p.parse("Jude 1n, 2n").osis()).toEqual "Jude.1.1-Jude.1.2,Jude.1.2-Jude.1.3"
		expect(p.parse("Gen 1:31n").osis()).toEqual "Gen.1.31-Gen.2.1"
		expect(p.parse("Gen 1:2-31n").osis()).toEqual "Gen.1.2-Gen.2.1"
		expect(p.parse("Gen 1:2n-30").osis()).toEqual "Gen.1.2-Gen.1.3,Gen.1.30"
		expect(p.parse("Gen 50n, Gen 50:26n").osis()).toEqual "Gen.50,Gen.50.26"
		expect(p.parse("Gen 1:32n, Gen 51n").osis()).toEqual ""
	it "should handle translations (pl)", ->
		expect(p.parse("Lev 1 (NP)").osis_and_translations()).toEqual [["Lev.1", "NP"]]
		expect(p.parse("lev 1 np").osis_and_translations()).toEqual [["Lev.1", "NP"]]
	it "should handle book ranges (pl)", ->
		p.set_options {book_alone_strategy: "full", book_range_strategy: "include"}
		expect(p.parse("Pierwsza do Trzecia  Jana").osis()).toEqual "1John.1-3John.1"
	it "should handle boundaries (pl)", ->
		p.set_options {book_alone_strategy: "full"}
		expect(p.parse("\u2014Matt\u2014").osis()).toEqual "Matt.1-Matt.28"
		expect(p.parse("\u201cMatt 1:1\u201d").osis()).toEqual "Matt.1.1"
