bcv_parser = require("../../js/cs_bcv_parser.js").bcv_parser

describe "Parsing", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.options.osis_compaction_strategy = "b"
		p.options.sequence_combination_strategy = "combine"

	it "should round-trip OSIS references", ->
		p.set_options osis_compaction_strategy: "bc"
		books = ["Gen","Exod","Lev","Num","Deut","Josh","Judg","Ruth","1Sam","2Sam","1Kgs","2Kgs","1Chr","2Chr","Ezra","Neh","Esth","Job","Ps","Prov","Eccl","Song","Isa","Jer","Lam","Ezek","Dan","Hos","Joel","Amos","Obad","Jonah","Mic","Nah","Hab","Zeph","Hag","Zech","Mal","Matt","Mark","Luke","John","Acts","Rom","1Cor","2Cor","Gal","Eph","Phil","Col","1Thess","2Thess","1Tim","2Tim","Titus","Phlm","Heb","Jas","1Pet","2Pet","1John","2John","3John","Jude","Rev"]
		for book in books
			bc = book + ".1"
			bcv = bc + ".1"
			bcv_range = bcv + "-" + bc + ".2"
			expect(p.parse(bc).osis()).toEqual bc
			expect(p.parse(bcv).osis()).toEqual bcv
			expect(p.parse(bcv_range).osis()).toEqual bcv_range

	it "should round-trip OSIS Apocrypha references", ->
		p.set_options osis_compaction_strategy: "bc", ps151_strategy: "b"
		p.include_apocrypha true
		books = ["Tob","Jdt","GkEsth","Wis","Sir","Bar","PrAzar","Sus","Bel","SgThree","EpJer","1Macc","2Macc","3Macc","4Macc","1Esd","2Esd","PrMan","Ps151"]
		for book in books
			bc = book + ".1"
			bcv = bc + ".1"
			bcv_range = bcv + "-" + bc + ".2"
			expect(p.parse(bc).osis()).toEqual bc
			expect(p.parse(bcv).osis()).toEqual bcv
			expect(p.parse(bcv_range).osis()).toEqual bcv_range
		p.set_options ps151_strategy: "bc"
		expect(p.parse("Ps151.1").osis()).toEqual "Ps.151"
		expect(p.parse("Ps151.1.1").osis()).toEqual "Ps.151.1"
		expect(p.parse("Ps151.1-Ps151.2").osis()).toEqual "Ps.151.1-Ps.151.2"
		p.include_apocrypha false
		for book in books
			bc = book + ".1"
			expect(p.parse(bc).osis()).toEqual ""

	it "should handle a preceding character", ->
		expect(p.parse(" Gen 1").osis()).toEqual "Gen.1"
		expect(p.parse("Matt5John3").osis()).toEqual "Matt.5,John.3"
		expect(p.parse("1Ps 1").osis()).toEqual ""
		expect(p.parse("11Sam 1").osis()).toEqual ""

describe "Localized book Gen (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Gen (cs)", ->
		`
		expect(p.parse("Prvni kniha Mojzisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni kniha Mojzišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni kniha Mojzísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni kniha Mojzíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni kniha Mojžisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni kniha Mojžišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni kniha Mojžísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni kniha Mojžíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První kniha Mojzisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První kniha Mojzišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První kniha Mojzísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První kniha Mojzíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První kniha Mojžisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První kniha Mojžišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První kniha Mojžísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První kniha Mojžíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. kniha Mojzisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. kniha Mojzišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. kniha Mojzísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. kniha Mojzíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. kniha Mojžisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. kniha Mojžišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. kniha Mojžísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. kniha Mojžíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. kniha Mojzisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. kniha Mojzišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. kniha Mojzísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. kniha Mojzíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. kniha Mojžisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. kniha Mojžišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. kniha Mojžísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. kniha Mojžíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 kniha Mojzisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 kniha Mojzišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 kniha Mojzísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 kniha Mojzíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 kniha Mojžisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 kniha Mojžišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 kniha Mojžísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 kniha Mojžíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I kniha Mojzisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I kniha Mojzišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I kniha Mojzísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I kniha Mojzíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I kniha Mojžisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I kniha Mojžišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I kniha Mojžísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I kniha Mojžíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni Mojzisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni Mojzišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni Mojzísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni Mojzíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni Mojžisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni Mojžišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni Mojžísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Prvni Mojžíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První Mojzisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První Mojzišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První Mojzísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První Mojzíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První Mojžisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První Mojžišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První Mojžísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("První Mojžíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Mojzisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Mojzišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Mojzísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Mojzíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Mojžisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Mojžišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Mojžísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. Mojžíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Mojzisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Mojzišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Mojzísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Mojzíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Mojžisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Mojžišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Mojžísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. Mojžíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Mojzisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Mojzišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Mojzísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Mojzíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Mojžisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Mojžišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Mojžísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 Mojžíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Mojzisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Mojzišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Mojzísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Mojzíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Mojžisova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Mojžišova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Mojžísova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I Mojžíšova 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Genesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Gen 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Gn 1:1").osis()).toEqual("Gen.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PRVNI KNIHA MOJZISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI KNIHA MOJŽISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ KNIHA MOJZISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ KNIHA MOJŽISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KNIHA MOJZISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KNIHA MOJŽISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KNIHA MOJZISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KNIHA MOJŽISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KNIHA MOJZISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KNIHA MOJŽISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KNIHA MOJZISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KNIHA MOJŽISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI MOJZISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI MOJZIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI MOJZÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI MOJZÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI MOJŽISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI MOJŽIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI MOJŽÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNI MOJŽÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ MOJZISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ MOJZIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ MOJZÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ MOJZÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ MOJŽISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ MOJŽIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ MOJŽÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("PRVNÍ MOJŽÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. MOJZISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. MOJZIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. MOJZÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. MOJZÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. MOJŽISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. MOJŽIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. MOJŽÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1. MOJŽÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. MOJZISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. MOJZIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. MOJZÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. MOJZÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. MOJŽISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. MOJŽIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. MOJŽÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I. MOJŽÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 MOJZISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 MOJZIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 MOJZÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 MOJZÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 MOJŽISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 MOJŽIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 MOJŽÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("1 MOJŽÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I MOJZISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I MOJZIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I MOJZÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I MOJZÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I MOJŽISOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I MOJŽIŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I MOJŽÍSOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("I MOJŽÍŠOVA 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("GENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("GEN 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("GN 1:1").osis()).toEqual("Gen.1.1")
		`
		true
describe "Localized book Exod (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Exod (cs)", ->
		`
		expect(p.parse("Druha kniha Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha kniha Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha kniha Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha kniha Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha kniha Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha kniha Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha kniha Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha kniha Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy kniha Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy kniha Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy kniha Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy kniha Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy kniha Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy kniha Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy kniha Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy kniha Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá kniha Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá kniha Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá kniha Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá kniha Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá kniha Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá kniha Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá kniha Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá kniha Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý kniha Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý kniha Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý kniha Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý kniha Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý kniha Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý kniha Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý kniha Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý kniha Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. kniha Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. kniha Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. kniha Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. kniha Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. kniha Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. kniha Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. kniha Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. kniha Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. kniha Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. kniha Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. kniha Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. kniha Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. kniha Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. kniha Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. kniha Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. kniha Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II kniha Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II kniha Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II kniha Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II kniha Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II kniha Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II kniha Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II kniha Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II kniha Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 kniha Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 kniha Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 kniha Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 kniha Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 kniha Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 kniha Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 kniha Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 kniha Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druha Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhy Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhá Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Druhý Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Mojzisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Mojzišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Mojzísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Mojzíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Mojžisova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Mojžišova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Mojžísova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 Mojžíšova 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Exodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Exod 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Ex 1:1").osis()).toEqual("Exod.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUHA KNIHA MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA KNIHA MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY KNIHA MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY KNIHA MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ KNIHA MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ KNIHA MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ KNIHA MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ KNIHA MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KNIHA MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KNIHA MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KNIHA MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KNIHA MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KNIHA MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KNIHA MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KNIHA MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KNIHA MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHA MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHY MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÁ MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("DRUHÝ MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II. MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2. MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("II MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 MOJZISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 MOJZIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 MOJZÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 MOJZÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 MOJŽISOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 MOJŽIŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 MOJŽÍSOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("2 MOJŽÍŠOVA 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("EXODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("EXOD 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("EX 1:1").osis()).toEqual("Exod.1.1")
		`
		true
describe "Localized book Bel (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Bel (cs)", ->
		`
		expect(p.parse("Bel a drak 1:1").osis()).toEqual("Bel.1.1")
		expect(p.parse("Bél a drak 1:1").osis()).toEqual("Bel.1.1")
		expect(p.parse("Bel 1:1").osis()).toEqual("Bel.1.1")
		expect(p.parse("Bél 1:1").osis()).toEqual("Bel.1.1")
		`
		true
describe "Localized book Lev (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Lev (cs)", ->
		`
		expect(p.parse("Treti kniha Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti kniha Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti kniha Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti kniha Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti kniha Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti kniha Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti kniha Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti kniha Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí kniha Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí kniha Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí kniha Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí kniha Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí kniha Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí kniha Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí kniha Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí kniha Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti kniha Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti kniha Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti kniha Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti kniha Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti kniha Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti kniha Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti kniha Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti kniha Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí kniha Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí kniha Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí kniha Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí kniha Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí kniha Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí kniha Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí kniha Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí kniha Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. kniha Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. kniha Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. kniha Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. kniha Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. kniha Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. kniha Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. kniha Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. kniha Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III kniha Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III kniha Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III kniha Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III kniha Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III kniha Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III kniha Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III kniha Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III kniha Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. kniha Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. kniha Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. kniha Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. kniha Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. kniha Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. kniha Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. kniha Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. kniha Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 kniha Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 kniha Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 kniha Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 kniha Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 kniha Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 kniha Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 kniha Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 kniha Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Treti Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Tretí Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třeti Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Třetí Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Mojzisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Mojzišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Mojzísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Mojzíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Mojžisova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Mojžišova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Mojžísova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 Mojžíšova 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Leviticusi 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Leviticus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Levitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Lev 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Lv 1:1").osis()).toEqual("Lev.1.1")
		p.include_apocrypha(false)
		expect(p.parse("TRETI KNIHA MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI KNIHA MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ KNIHA MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ KNIHA MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI KNIHA MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI KNIHA MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ KNIHA MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ KNIHA MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KNIHA MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KNIHA MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KNIHA MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KNIHA MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KNIHA MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KNIHA MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KNIHA MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KNIHA MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETI MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TRETÍ MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETI MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("TŘETÍ MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III. MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("III MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3. MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 MOJZISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 MOJZIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 MOJZÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 MOJZÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 MOJŽISOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 MOJŽIŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 MOJŽÍSOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("3 MOJŽÍŠOVA 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("LEVITICUSI 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("LEVITICUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("LEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("LEV 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("LV 1:1").osis()).toEqual("Lev.1.1")
		`
		true
describe "Localized book Num (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Num (cs)", ->
		`
		expect(p.parse("Ctvrta kniha Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta kniha Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta kniha Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta kniha Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta kniha Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta kniha Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta kniha Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta kniha Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá kniha Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá kniha Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá kniha Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá kniha Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá kniha Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá kniha Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá kniha Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá kniha Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta kniha Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta kniha Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta kniha Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta kniha Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta kniha Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta kniha Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta kniha Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta kniha Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá kniha Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá kniha Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá kniha Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá kniha Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá kniha Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá kniha Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá kniha Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá kniha Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. kniha Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. kniha Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. kniha Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. kniha Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. kniha Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. kniha Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. kniha Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. kniha Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. kniha Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. kniha Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. kniha Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. kniha Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. kniha Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. kniha Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. kniha Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. kniha Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV kniha Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV kniha Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV kniha Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV kniha Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV kniha Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV kniha Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV kniha Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV kniha Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 kniha Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 kniha Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 kniha Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 kniha Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 kniha Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 kniha Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 kniha Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 kniha Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrta Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Ctvrtá Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrta Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Čtvrtá Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Mojzisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Mojzišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Mojzísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Mojzíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Mojžisova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Mojžišova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Mojžísova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 Mojžíšova 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Numeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Num 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Nu 1:1").osis()).toEqual("Num.1.1")
		p.include_apocrypha(false)
		expect(p.parse("CTVRTA KNIHA MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA KNIHA MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ KNIHA MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ KNIHA MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA KNIHA MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA KNIHA MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ KNIHA MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ KNIHA MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KNIHA MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KNIHA MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KNIHA MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KNIHA MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KNIHA MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KNIHA MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KNIHA MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KNIHA MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTA MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("CTVRTÁ MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTA MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ČTVRTÁ MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV. MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4. MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IV MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 MOJZISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 MOJZIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 MOJZÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 MOJZÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 MOJŽISOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 MOJŽIŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 MOJŽÍSOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("4 MOJŽÍŠOVA 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("NUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("NUM 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("NU 1:1").osis()).toEqual("Num.1.1")
		`
		true
describe "Localized book Sir (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Sir (cs)", ->
		`
		expect(p.parse("Kniha Sirachovcova 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Kniha Sírachovcova 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Ecclesiasticus 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Sirachovec 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Sírachovec 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Sir 1:1").osis()).toEqual("Sir.1.1")
		expect(p.parse("Sír 1:1").osis()).toEqual("Sir.1.1")
		`
		true
describe "Localized book Wis (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Wis (cs)", ->
		`
		expect(p.parse("Moudrost Salomounova 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Moudrost Šalomounova 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Kniha Moudrosti 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Kniha moudrosti 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Kniha moudrostí 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Moudrost 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Mdr 1:1").osis()).toEqual("Wis.1.1")
		expect(p.parse("Wis 1:1").osis()).toEqual("Wis.1.1")
		`
		true
describe "Localized book Lam (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Lam (cs)", ->
		`
		expect(p.parse("Plac Jeremiasuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremiasův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremiašuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremiašův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremiásuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremiásův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremiášuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremiášův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremjasuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremjasův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremjašuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremjašův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremjásuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremjásův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremjášuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac Jeremjášův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremiasuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremiasův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremiašuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremiašův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremiásuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremiásův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremiášuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremiášův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremjasuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremjasův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremjašuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremjašův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremjásuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremjásův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremjášuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač Jeremjášův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremiasuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremiasův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremiašuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremiašův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremiásuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremiásův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremiášuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremiášův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremjasuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremjasův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremjašuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremjašův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremjásuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremjásův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremjášuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác Jeremjášův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremiasuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremiasův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremiašuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremiašův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremiásuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremiásův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremiášuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremiášův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremjasuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremjasův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremjašuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremjašův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremjásuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremjásův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremjášuv 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč Jeremjášův 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Kniha narku 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Kniha narků 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Kniha nařku 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Kniha nařků 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Kniha nárku 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Kniha nárků 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Kniha nářku 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Kniha nářků 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plac 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plač 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Plác 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pláč 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Lam 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Pl 1:1").osis()).toEqual("Lam.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PLAC JEREMIASUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMIASŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMIAŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMIAŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMIÁSUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMIÁSŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMIÁŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMIÁŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMJASUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMJASŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMJAŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMJAŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMJÁSUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMJÁSŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMJÁŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC JEREMJÁŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMIASUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMIASŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMIAŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMIAŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMIÁSUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMIÁSŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMIÁŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMIÁŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMJASUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMJASŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMJAŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMJAŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMJÁSUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMJÁSŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMJÁŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ JEREMJÁŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMIASUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMIASŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMIAŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMIAŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMIÁSUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMIÁSŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMIÁŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMIÁŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMJASUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMJASŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMJAŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMJAŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMJÁSUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMJÁSŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMJÁŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC JEREMJÁŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMIASUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMIASŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMIAŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMIAŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMIÁSUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMIÁSŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMIÁŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMIÁŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMJASUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMJASŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMJAŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMJAŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMJÁSUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMJÁSŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMJÁŠUV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ JEREMJÁŠŮV 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KNIHA NARKU 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KNIHA NARKŮ 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KNIHA NAŘKU 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KNIHA NAŘKŮ 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KNIHA NÁRKU 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KNIHA NÁRKŮ 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KNIHA NÁŘKU 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KNIHA NÁŘKŮ 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAC 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLAČ 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁC 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PLÁČ 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("LAM 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("PL 1:1").osis()).toEqual("Lam.1.1")
		`
		true
describe "Localized book EpJer (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: EpJer (cs)", ->
		`
		expect(p.parse("List Jeremjasuv 1:1").osis()).toEqual("EpJer.1.1")
		expect(p.parse("List Jeremjasův 1:1").osis()).toEqual("EpJer.1.1")
		expect(p.parse("List Jeremjašuv 1:1").osis()).toEqual("EpJer.1.1")
		expect(p.parse("List Jeremjašův 1:1").osis()).toEqual("EpJer.1.1")
		expect(p.parse("List Jeremjásuv 1:1").osis()).toEqual("EpJer.1.1")
		expect(p.parse("List Jeremjásův 1:1").osis()).toEqual("EpJer.1.1")
		expect(p.parse("List Jeremjášuv 1:1").osis()).toEqual("EpJer.1.1")
		expect(p.parse("List Jeremjášův 1:1").osis()).toEqual("EpJer.1.1")
		expect(p.parse("EpJer 1:1").osis()).toEqual("EpJer.1.1")
		`
		true
describe "Localized book Rev (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Rev (cs)", ->
		`
		expect(p.parse("Zjeveni svateho Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Zjeveni svatého Jana 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Zjeveni Janovo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Zjevení Janovo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Kniha Zjeveni 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Kniha Zjevení 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Apokalypsa 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Zjeveni 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Zjevení 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Rev 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Zj 1:1").osis()).toEqual("Rev.1.1")
		p.include_apocrypha(false)
		expect(p.parse("ZJEVENI SVATEHO JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ZJEVENI SVATÉHO JANA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ZJEVENI JANOVO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ZJEVENÍ JANOVO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KNIHA ZJEVENI 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KNIHA ZJEVENÍ 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("APOKALYPSA 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ZJEVENI 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ZJEVENÍ 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("REV 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ZJ 1:1").osis()).toEqual("Rev.1.1")
		`
		true
describe "Localized book PrMan (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: PrMan (cs)", ->
		`
		expect(p.parse("Modlitbu Manasse 1:1").osis()).toEqual("PrMan.1.1")
		expect(p.parse("PrMan 1:1").osis()).toEqual("PrMan.1.1")
		`
		true
describe "Localized book Deut (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Deut (cs)", ->
		`
		expect(p.parse("Pata kniha Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata kniha Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata kniha Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata kniha Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata kniha Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata kniha Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata kniha Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata kniha Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá kniha Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá kniha Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá kniha Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá kniha Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá kniha Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá kniha Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá kniha Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá kniha Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta kniha Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta kniha Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta kniha Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta kniha Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta kniha Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta kniha Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta kniha Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta kniha Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá kniha Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá kniha Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá kniha Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá kniha Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá kniha Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá kniha Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá kniha Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá kniha Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. kniha Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. kniha Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. kniha Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. kniha Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. kniha Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. kniha Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. kniha Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. kniha Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. kniha Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. kniha Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. kniha Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. kniha Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. kniha Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. kniha Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. kniha Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. kniha Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 kniha Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 kniha Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 kniha Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 kniha Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 kniha Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 kniha Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 kniha Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 kniha Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V kniha Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V kniha Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V kniha Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V kniha Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V kniha Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V kniha Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V kniha Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V kniha Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pata Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Patá Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Páta Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Pátá Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Deuteronomium 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Mojzisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Mojzišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Mojzísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Mojzíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Mojžisova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Mojžišova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Mojžísova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V Mojžíšova 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Deut 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Dt 1:1").osis()).toEqual("Deut.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PATA KNIHA MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA KNIHA MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ KNIHA MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ KNIHA MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA KNIHA MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA KNIHA MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ KNIHA MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ KNIHA MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KNIHA MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KNIHA MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KNIHA MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KNIHA MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KNIHA MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KNIHA MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KNIHA MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KNIHA MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KNIHA MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KNIHA MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KNIHA MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KNIHA MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KNIHA MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V KNIHA MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATA MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PATÁ MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTA MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("PÁTÁ MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("DEUTERONOMIUM 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5. MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V. MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("5 MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V MOJZISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V MOJZIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V MOJZÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V MOJZÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V MOJŽISOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V MOJŽIŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V MOJŽÍSOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("V MOJŽÍŠOVA 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("DEUT 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("DT 1:1").osis()).toEqual("Deut.1.1")
		`
		true
describe "Localized book Josh (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Josh (cs)", ->
		`
		expect(p.parse("Jozue 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Josh 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Joz 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Jz 1:1").osis()).toEqual("Josh.1.1")
		p.include_apocrypha(false)
		expect(p.parse("JOZUE 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("JOSH 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("JOZ 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("JZ 1:1").osis()).toEqual("Josh.1.1")
		`
		true
describe "Localized book Judg (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Judg (cs)", ->
		`
		expect(p.parse("Soudcu 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Soudců 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Judg 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Sdc 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Sd 1:1").osis()).toEqual("Judg.1.1")
		p.include_apocrypha(false)
		expect(p.parse("SOUDCU 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("SOUDCŮ 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("JUDG 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("SDC 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("SD 1:1").osis()).toEqual("Judg.1.1")
		`
		true
describe "Localized book Ruth (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Ruth (cs)", ->
		`
		expect(p.parse("Ruth 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Rut 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Rút 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Rt 1:1").osis()).toEqual("Ruth.1.1")
		p.include_apocrypha(false)
		expect(p.parse("RUTH 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("RUT 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("RÚT 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("RT 1:1").osis()).toEqual("Ruth.1.1")
		`
		true
describe "Localized book 1Esd (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Esd (cs)", ->
		`
		expect(p.parse("Prvni Ezdras 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Prvni Ezdraš 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Prvni Ezdrás 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("Prvni Ezdráš 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("První Ezdras 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("První Ezdraš 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("První Ezdrás 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("První Ezdráš 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1. Ezdras 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1. Ezdraš 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1. Ezdrás 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1. Ezdráš 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I. Ezdras 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I. Ezdraš 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I. Ezdrás 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I. Ezdráš 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1 Ezdras 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1 Ezdraš 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1 Ezdrás 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1 Ezdráš 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I Ezdras 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I Ezdraš 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I Ezdrás 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("I Ezdráš 1:1").osis()).toEqual("1Esd.1.1")
		expect(p.parse("1Esd 1:1").osis()).toEqual("1Esd.1.1")
		`
		true
describe "Localized book 2Esd (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Esd (cs)", ->
		`
		expect(p.parse("Druha Ezdras 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druha Ezdraš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druha Ezdrás 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druha Ezdráš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druhy Ezdras 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druhy Ezdraš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druhy Ezdrás 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druhy Ezdráš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druhá Ezdras 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druhá Ezdraš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druhá Ezdrás 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druhá Ezdráš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druhý Ezdras 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druhý Ezdraš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druhý Ezdrás 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("Druhý Ezdráš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II. Ezdras 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II. Ezdraš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II. Ezdrás 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II. Ezdráš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2. Ezdras 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2. Ezdraš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2. Ezdrás 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2. Ezdráš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II Ezdras 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II Ezdraš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II Ezdrás 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("II Ezdráš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2 Ezdras 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2 Ezdraš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2 Ezdrás 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2 Ezdráš 1:1").osis()).toEqual("2Esd.1.1")
		expect(p.parse("2Esd 1:1").osis()).toEqual("2Esd.1.1")
		`
		true
describe "Localized book Isa (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Isa (cs)", ->
		`
		expect(p.parse("Izaias 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Izaiaš 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Izaiás 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Izaiáš 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Izajas 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Izajaš 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Izajás 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Izajáš 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Isa 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Iz 1:1").osis()).toEqual("Isa.1.1")
		p.include_apocrypha(false)
		expect(p.parse("IZAIAS 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IZAIAŠ 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IZAIÁS 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IZAIÁŠ 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IZAJAS 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IZAJAŠ 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IZAJÁS 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IZAJÁŠ 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("ISA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IZ 1:1").osis()).toEqual("Isa.1.1")
		`
		true
describe "Localized book 2Sam (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Sam (cs)", ->
		`
		expect(p.parse("Druha kniha Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhy kniha Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhá kniha Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhý kniha Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. kniha Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. kniha Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II kniha Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 kniha Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druha Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhy Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhá Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhý Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druha Samuel 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhy Samuel 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhá Samuel 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhý Samuel 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Samuelova 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Samuel 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Samuel 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druha Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhy Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhá Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhý Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Samuel 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Samuel 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druha S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhy S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhá S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Druhý S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 S 1:1").osis()).toEqual("2Sam.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUHA KNIHA SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHY KNIHA SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHÁ KNIHA SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHÝ KNIHA SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KNIHA SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KNIHA SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KNIHA SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KNIHA SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHA SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHY SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHÁ SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHÝ SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHA SAMUEL 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHY SAMUEL 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHÁ SAMUEL 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHÝ SAMUEL 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 SAMUELOVA 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. SAMUEL 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. SAMUEL 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHA SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHY SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHÁ SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHÝ SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II SAMUEL 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 SAMUEL 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHA S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHY S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHÁ S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("DRUHÝ S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II S 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 S 1:1").osis()).toEqual("2Sam.1.1")
		`
		true
describe "Localized book 1Sam (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Sam (cs)", ->
		`
		expect(p.parse("Prvni kniha Samuelova 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("První kniha Samuelova 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. kniha Samuelova 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. kniha Samuelova 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 kniha Samuelova 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I kniha Samuelova 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Prvni Samuelova 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("První Samuelova 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Samuelova 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Samuelova 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Prvni Samuel 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("První Samuel 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Samuelova 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Samuelova 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Samuel 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Samuel 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Prvni Sam 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("První Sam 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Samuel 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Samuel 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Prvni S 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("První S 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Sam 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Sam 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Sam 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Sam 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. S 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1Sam 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. S 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 S 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I S 1:1").osis()).toEqual("1Sam.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PRVNI KNIHA SAMUELOVA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PRVNÍ KNIHA SAMUELOVA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KNIHA SAMUELOVA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KNIHA SAMUELOVA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KNIHA SAMUELOVA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KNIHA SAMUELOVA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PRVNI SAMUELOVA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PRVNÍ SAMUELOVA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. SAMUELOVA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. SAMUELOVA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PRVNI SAMUEL 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PRVNÍ SAMUEL 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 SAMUELOVA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I SAMUELOVA 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. SAMUEL 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. SAMUEL 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PRVNI SAM 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PRVNÍ SAM 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 SAMUEL 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I SAMUEL 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PRVNI S 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("PRVNÍ S 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. SAM 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. SAM 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 SAM 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I SAM 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. S 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1SAM 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. S 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 S 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I S 1:1").osis()).toEqual("1Sam.1.1")
		`
		true
describe "Localized book 2Kgs (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Kgs (cs)", ->
		`
		expect(p.parse("Druha kniha kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druha kniha kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druha kniha královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druha kniha královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhy kniha kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhy kniha kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhy kniha královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhy kniha královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhá kniha kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhá kniha kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhá kniha královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhá kniha královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhý kniha kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhý kniha kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhý kniha královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhý kniha královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. kniha kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. kniha kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. kniha královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. kniha královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. kniha kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. kniha kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. kniha královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. kniha královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II kniha kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II kniha kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II kniha královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II kniha královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 kniha kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 kniha kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 kniha královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 kniha královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druha Kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druha Kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druha Královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druha Královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhy Kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhy Kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhy Královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhy Královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhá Kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhá Kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhá Královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhá Královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhý Kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhý Kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhý Královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhý Královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Kralovska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Kralovská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Královska 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Královská 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druha Kral 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druha Král 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhy Kral 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhy Král 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhá Kral 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhá Král 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhý Kral 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhý Král 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druha Kr 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhy Kr 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhá Kr 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Druhý Kr 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Kral 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Král 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Kral 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Král 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Kral 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Král 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Kral 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Král 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Kr 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Kr 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Kr 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Kr 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2Kgs 1:1").osis()).toEqual("2Kgs.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUHA KNIHA KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHA KNIHA KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHA KNIHA KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHA KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHY KNIHA KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHY KNIHA KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHY KNIHA KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHY KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÁ KNIHA KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÁ KNIHA KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÁ KNIHA KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÁ KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÝ KNIHA KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÝ KNIHA KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÝ KNIHA KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÝ KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KNIHA KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KNIHA KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KNIHA KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KNIHA KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KNIHA KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KNIHA KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KNIHA KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KNIHA KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KNIHA KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KNIHA KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KNIHA KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KNIHA KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHA KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHA KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHA KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHA KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHY KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHY KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHY KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHY KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÁ KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÁ KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÁ KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÁ KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÝ KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÝ KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÝ KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÝ KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KRALOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KRALOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KRÁLOVSKA 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KRÁLOVSKÁ 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHA KRAL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHA KRÁL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHY KRAL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHY KRÁL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÁ KRAL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÁ KRÁL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÝ KRAL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÝ KRÁL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHA KR 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHY KR 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÁ KR 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("DRUHÝ KR 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KRAL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KRÁL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KRAL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KRÁL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KRAL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KRÁL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KRAL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KRÁL 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KR 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KR 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KR 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KR 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2KGS 1:1").osis()).toEqual("2Kgs.1.1")
		`
		true
describe "Localized book 1Kgs (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Kgs (cs)", ->
		`
		expect(p.parse("Prvni kniha kralovska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Prvni kniha kralovská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Prvni kniha královska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Prvni kniha královská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("První kniha kralovska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("První kniha kralovská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("První kniha královska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("První kniha královská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. kniha kralovska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. kniha kralovská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. kniha královska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. kniha královská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. kniha kralovska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. kniha kralovská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. kniha královska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. kniha královská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 kniha kralovska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 kniha kralovská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 kniha královska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 kniha královská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I kniha kralovska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I kniha kralovská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I kniha královska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I kniha královská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Prvni Kralovska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Prvni Kralovská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Prvni Královska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Prvni Královská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("První Kralovska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("První Kralovská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("První Královska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("První Královská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Kralovska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Kralovská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Královska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Královská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Kralovska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Kralovská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Královska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Královská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Kralovska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Kralovská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Královska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Královská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Kralovska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Kralovská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Královska 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Královská 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Prvni Kral 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Prvni Král 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("První Kral 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("První Král 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Prvni Kr 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("První Kr 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Kral 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Král 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Kral 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Král 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Kral 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Král 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Kral 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Král 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Kr 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Kr 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Kr 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1Kgs 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Kr 1:1").osis()).toEqual("1Kgs.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PRVNI KNIHA KRALOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNI KNIHA KRALOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNI KNIHA KRÁLOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNI KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNÍ KNIHA KRALOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNÍ KNIHA KRALOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNÍ KNIHA KRÁLOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNÍ KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KNIHA KRALOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KNIHA KRALOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KNIHA KRÁLOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KNIHA KRALOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KNIHA KRALOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KNIHA KRÁLOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KNIHA KRALOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KNIHA KRALOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KNIHA KRÁLOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KNIHA KRALOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KNIHA KRALOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KNIHA KRÁLOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KNIHA KRÁLOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNI KRALOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNI KRALOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNI KRÁLOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNI KRÁLOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNÍ KRALOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNÍ KRALOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNÍ KRÁLOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNÍ KRÁLOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KRALOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KRALOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KRÁLOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KRÁLOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KRALOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KRALOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KRÁLOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KRÁLOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KRALOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KRALOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KRÁLOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KRÁLOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KRALOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KRALOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KRÁLOVSKA 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KRÁLOVSKÁ 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNI KRAL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNI KRÁL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNÍ KRAL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNÍ KRÁL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNI KR 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("PRVNÍ KR 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KRAL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KRÁL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KRAL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KRÁL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KRAL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KRÁL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KRAL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KRÁL 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KR 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KR 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KR 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1KGS 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KR 1:1").osis()).toEqual("1Kgs.1.1")
		`
		true
describe "Localized book 2Chr (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Chr (cs)", ->
		`
		expect(p.parse("Druha Paralipomenon 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhy Paralipomenon 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhá Paralipomenon 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhý Paralipomenon 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druha kniha kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhy kniha kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhá kniha kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhý kniha kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. Paralipomenon 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. Paralipomenon 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II Paralipomenon 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. kniha kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Paralipomenon 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. kniha kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II kniha kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 kniha kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druha Letopisu 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druha Letopisů 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhy Letopisu 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhy Letopisů 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhá Letopisu 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhá Letopisů 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhý Letopisu 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhý Letopisů 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druha Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhy Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhá Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhý Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. Letopisu 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. Letopisů 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. Letopisu 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. Letopisů 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II Letopisu 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II Letopisů 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Letopisu 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Letopisů 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Kronik 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druha Pa 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhy Pa 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhá Pa 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Druhý Pa 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. Pa 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. Pa 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II Pa 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Pa 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2Chr 1:1").osis()).toEqual("2Chr.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUHA PARALIPOMENON 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHY PARALIPOMENON 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHÁ PARALIPOMENON 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHÝ PARALIPOMENON 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHA KNIHA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHY KNIHA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHÁ KNIHA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHÝ KNIHA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. PARALIPOMENON 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. PARALIPOMENON 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II PARALIPOMENON 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KNIHA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 PARALIPOMENON 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KNIHA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KNIHA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KNIHA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHA LETOPISU 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHA LETOPISŮ 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHY LETOPISU 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHY LETOPISŮ 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHÁ LETOPISU 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHÁ LETOPISŮ 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHÝ LETOPISU 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHÝ LETOPISŮ 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHA KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHY KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHÁ KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHÝ KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. LETOPISU 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. LETOPISŮ 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. LETOPISU 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. LETOPISŮ 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II LETOPISU 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II LETOPISŮ 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 LETOPISU 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 LETOPISŮ 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KRONIK 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHA PA 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHY PA 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHÁ PA 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("DRUHÝ PA 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. PA 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. PA 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II PA 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 PA 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2CHR 1:1").osis()).toEqual("2Chr.1.1")
		`
		true
describe "Localized book 1Chr (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Chr (cs)", ->
		`
		expect(p.parse("Prvni Paralipomenon 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("První Paralipomenon 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Prvni kniha kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("První kniha kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. Paralipomenon 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. Paralipomenon 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Paralipomenon 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. kniha kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I Paralipomenon 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. kniha kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 kniha kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I kniha kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Prvni Letopisu 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Prvni Letopisů 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("První Letopisu 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("První Letopisů 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Prvni Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("První Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. Letopisu 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. Letopisů 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. Letopisu 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. Letopisů 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Letopisu 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Letopisů 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I Letopisu 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I Letopisů 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I Kronik 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Prvni Pa 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("První Pa 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. Pa 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. Pa 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Pa 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1Chr 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I Pa 1:1").osis()).toEqual("1Chr.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PRVNI PARALIPOMENON 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PRVNÍ PARALIPOMENON 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PRVNI KNIHA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PRVNÍ KNIHA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. PARALIPOMENON 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. PARALIPOMENON 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 PARALIPOMENON 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KNIHA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I PARALIPOMENON 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KNIHA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KNIHA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KNIHA KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PRVNI LETOPISU 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PRVNI LETOPISŮ 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PRVNÍ LETOPISU 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PRVNÍ LETOPISŮ 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PRVNI KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PRVNÍ KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. LETOPISU 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. LETOPISŮ 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. LETOPISU 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. LETOPISŮ 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 LETOPISU 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 LETOPISŮ 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I LETOPISU 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I LETOPISŮ 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KRONIK 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PRVNI PA 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("PRVNÍ PA 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. PA 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. PA 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 PA 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1CHR 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I PA 1:1").osis()).toEqual("1Chr.1.1")
		`
		true
describe "Localized book Ezra (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Ezra (cs)", ->
		`
		expect(p.parse("Ezdras 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ezdraš 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ezdrás 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ezdráš 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ezra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ezd 1:1").osis()).toEqual("Ezra.1.1")
		p.include_apocrypha(false)
		expect(p.parse("EZDRAS 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EZDRAŠ 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EZDRÁS 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EZDRÁŠ 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EZD 1:1").osis()).toEqual("Ezra.1.1")
		`
		true
describe "Localized book Neh (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Neh (cs)", ->
		`
		expect(p.parse("Nehemias 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Nehemiaš 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Nehemiás 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Nehemiáš 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Nehemjas 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Nehemjaš 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Nehemjás 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Nehemjáš 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Neh 1:1").osis()).toEqual("Neh.1.1")
		p.include_apocrypha(false)
		expect(p.parse("NEHEMIAS 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("NEHEMIAŠ 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("NEHEMIÁS 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("NEHEMIÁŠ 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("NEHEMJAS 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("NEHEMJAŠ 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("NEHEMJÁS 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("NEHEMJÁŠ 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("NEH 1:1").osis()).toEqual("Neh.1.1")
		`
		true
describe "Localized book GkEsth (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: GkEsth (cs)", ->
		`
		expect(p.parse("Ester (řecké dodatky) 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester (řecké části) 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester recke dodatky 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester recké dodatky 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester řecke dodatky 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester řecké dodatky 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester recke casti 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester recke cásti 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester recke časti 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester recke části 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester recké casti 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester recké cásti 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester recké časti 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester recké části 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester řecke casti 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester řecke cásti 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester řecke časti 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester řecke části 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester řecké casti 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester řecké cásti 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester řecké časti 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("Ester řecké části 1:1").osis()).toEqual("GkEsth.1.1")
		expect(p.parse("GkEsth 1:1").osis()).toEqual("GkEsth.1.1")
		`
		true
describe "Localized book Esth (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Esth (cs)", ->
		`
		expect(p.parse("Ester 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Esth 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Est 1:1").osis()).toEqual("Esth.1.1")
		p.include_apocrypha(false)
		expect(p.parse("ESTER 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("ESTH 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("EST 1:1").osis()).toEqual("Esth.1.1")
		`
		true
describe "Localized book Job (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Job (cs)", ->
		`
		expect(p.parse("Job 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Jób 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Jb 1:1").osis()).toEqual("Job.1.1")
		p.include_apocrypha(false)
		expect(p.parse("JOB 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("JÓB 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("JB 1:1").osis()).toEqual("Job.1.1")
		`
		true
describe "Localized book Ps (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Ps (cs)", ->
		`
		expect(p.parse("Kniha zalmu 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Kniha zalmů 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Kniha žalmu 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Kniha žalmů 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Zalmy 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Žalmy 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Zalm 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Žalm 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Ps 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Z 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Ž 1:1").osis()).toEqual("Ps.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KNIHA ZALMU 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KNIHA ZALMŮ 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KNIHA ŽALMU 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KNIHA ŽALMŮ 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ZALMY 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ŽALMY 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ZALM 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ŽALM 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("PS 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Z 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Ž 1:1").osis()).toEqual("Ps.1.1")
		`
		true
describe "Localized book PrAzar (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: PrAzar (cs)", ->
		`
		expect(p.parse("Azarjasova modlitba 1:1").osis()).toEqual("PrAzar.1.1")
		expect(p.parse("Azarjašova modlitba 1:1").osis()).toEqual("PrAzar.1.1")
		expect(p.parse("Azarjásova modlitba 1:1").osis()).toEqual("PrAzar.1.1")
		expect(p.parse("Azarjášova modlitba 1:1").osis()).toEqual("PrAzar.1.1")
		expect(p.parse("PrAzar 1:1").osis()).toEqual("PrAzar.1.1")
		`
		true
describe "Localized book Prov (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Prov (cs)", ->
		`
		expect(p.parse("Prislovi Salomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Prislovi Šalomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Prisloví Salomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Prisloví Šalomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Príslovi Salomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Príslovi Šalomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Prísloví Salomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Prísloví Šalomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Přislovi Salomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Přislovi Šalomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Přisloví Salomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Přisloví Šalomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Příslovi Salomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Příslovi Šalomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Přísloví Salomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Přísloví Šalomounova 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Prislovi 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Prisloví 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Príslovi 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Prísloví 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Přislovi 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Přisloví 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Příslovi 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Přísloví 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Pris 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Prov 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Prís 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Přis 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Přís 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Pr 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Př 1:1").osis()).toEqual("Prov.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PRISLOVI SALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRISLOVI ŠALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRISLOVÍ SALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRISLOVÍ ŠALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRÍSLOVI SALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRÍSLOVI ŠALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRÍSLOVÍ SALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRÍSLOVÍ ŠALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘISLOVI SALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘISLOVI ŠALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘISLOVÍ SALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘISLOVÍ ŠALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘÍSLOVI SALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘÍSLOVI ŠALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘÍSLOVÍ SALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘÍSLOVÍ ŠALOMOUNOVA 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRISLOVI 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRISLOVÍ 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRÍSLOVI 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRÍSLOVÍ 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘISLOVI 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘISLOVÍ 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘÍSLOVI 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘÍSLOVÍ 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRIS 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PROV 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PRÍS 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘIS 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘÍS 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PR 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PŘ 1:1").osis()).toEqual("Prov.1.1")
		`
		true
describe "Localized book Eccl (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Eccl (cs)", ->
		`
		expect(p.parse("Kazatel 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Kohelet 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Eccl 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Kaz 1:1").osis()).toEqual("Eccl.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KAZATEL 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KOHELET 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("ECCL 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KAZ 1:1").osis()).toEqual("Eccl.1.1")
		`
		true
describe "Localized book SgThree (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: SgThree (cs)", ->
		`
		expect(p.parse("Pisen mladencu v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladencu v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladencu v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladencu v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladencu v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladencu v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladencu v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladencu v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladenců v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladenců v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladenců v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladenců v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladenců v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladenců v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladenců v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mladenců v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládencu v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládencu v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládencu v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládencu v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládencu v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládencu v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládencu v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládencu v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládenců v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládenců v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládenců v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládenců v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládenců v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládenců v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládenců v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Pisen mládenců v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladencu v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladencu v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladencu v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladencu v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladencu v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladencu v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladencu v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladencu v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladenců v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladenců v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladenců v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladenců v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladenců v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladenců v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladenců v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mladenců v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládencu v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládencu v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládencu v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládencu v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládencu v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládencu v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládencu v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládencu v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládenců v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládenců v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládenců v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládenců v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládenců v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládenců v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládenců v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Piseň mládenců v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladencu v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladencu v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladencu v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladencu v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladencu v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladencu v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladencu v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladencu v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladenců v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladenců v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladenců v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladenců v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladenců v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladenců v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladenců v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mladenců v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládencu v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládencu v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládencu v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládencu v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládencu v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládencu v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládencu v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládencu v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládenců v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládenců v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládenců v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládenců v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládenců v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládenců v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládenců v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Písen mládenců v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladencu v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladencu v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladencu v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladencu v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladencu v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladencu v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladencu v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladencu v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladenců v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladenců v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladenců v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladenců v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladenců v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladenců v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladenců v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mladenců v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládencu v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládencu v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládencu v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládencu v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládencu v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládencu v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládencu v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládencu v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládenců v horici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládenců v horicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládenců v horíci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládenců v horící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládenců v hořici peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládenců v hořicí peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládenců v hoříci peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Píseň mládenců v hořící peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tri muzi v rozpalene peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tri muzi v rozpalené peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tri muzi v rozpálene peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tri muzi v rozpálené peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tri muži v rozpalene peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tri muži v rozpalené peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tri muži v rozpálene peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tri muži v rozpálené peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tři muzi v rozpalene peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tři muzi v rozpalené peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tři muzi v rozpálene peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tři muzi v rozpálené peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tři muži v rozpalene peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tři muži v rozpalené peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tři muži v rozpálene peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("Tři muži v rozpálené peci 1:1").osis()).toEqual("SgThree.1.1")
		expect(p.parse("SgThree 1:1").osis()).toEqual("SgThree.1.1")
		`
		true
describe "Localized book Song (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Song (cs)", ->
		`
		expect(p.parse("Pisen Salamounova 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pisen Šalamounova 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Piseň Salamounova 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Piseň Šalamounova 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Písen Salamounova 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Písen Šalamounova 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Píseň Salamounova 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Píseň Šalamounova 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pisen pisni 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pisen pisní 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pisen písni 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pisen písní 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Piseň pisni 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Piseň pisní 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Piseň písni 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Piseň písní 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Písen pisni 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Písen pisní 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Písen písni 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Písen písní 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Píseň pisni 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Píseň pisní 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Píseň písni 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Píseň písní 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pisen 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Piseň 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Písen 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Píseň 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Song 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pis 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Pís 1:1").osis()).toEqual("Song.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PISEN SALAMOUNOVA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PISEN ŠALAMOUNOVA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PISEŇ SALAMOUNOVA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PISEŇ ŠALAMOUNOVA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEN SALAMOUNOVA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEN ŠALAMOUNOVA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEŇ SALAMOUNOVA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEŇ ŠALAMOUNOVA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PISEN PISNI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PISEN PISNÍ 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PISEN PÍSNI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PISEN PÍSNÍ 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PISEŇ PISNI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PISEŇ PISNÍ 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PISEŇ PÍSNI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PISEŇ PÍSNÍ 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEN PISNI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEN PISNÍ 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEN PÍSNI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEN PÍSNÍ 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEŇ PISNI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEŇ PISNÍ 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEŇ PÍSNI 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEŇ PÍSNÍ 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PISEN 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PISEŇ 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEN 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍSEŇ 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("SONG 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PIS 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("PÍS 1:1").osis()).toEqual("Song.1.1")
		`
		true
describe "Localized book Jer (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Jer (cs)", ->
		`
		expect(p.parse("Jeremias 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Jeremiaš 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Jeremiás 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Jeremiáš 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Jeremjas 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Jeremjaš 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Jeremjás 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Jeremjáš 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Jer 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Jr 1:1").osis()).toEqual("Jer.1.1")
		p.include_apocrypha(false)
		expect(p.parse("JEREMIAS 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("JEREMIAŠ 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("JEREMIÁS 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("JEREMIÁŠ 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("JEREMJAS 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("JEREMJAŠ 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("JEREMJÁS 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("JEREMJÁŠ 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("JER 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("JR 1:1").osis()).toEqual("Jer.1.1")
		`
		true
describe "Localized book Ezek (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Ezek (cs)", ->
		`
		expect(p.parse("Ezechiel 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Ezek 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Ez 1:1").osis()).toEqual("Ezek.1.1")
		p.include_apocrypha(false)
		expect(p.parse("EZECHIEL 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("EZEK 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("EZ 1:1").osis()).toEqual("Ezek.1.1")
		`
		true
describe "Localized book Dan (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Dan (cs)", ->
		`
		expect(p.parse("Daniel 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("Dan 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("Da 1:1").osis()).toEqual("Dan.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DANIEL 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("DAN 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("DA 1:1").osis()).toEqual("Dan.1.1")
		`
		true
describe "Localized book Hos (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Hos (cs)", ->
		`
		expect(p.parse("Ozeas 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Ozeaš 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Ozeás 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Ozeáš 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Hos 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Oz 1:1").osis()).toEqual("Hos.1.1")
		p.include_apocrypha(false)
		expect(p.parse("OZEAS 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("OZEAŠ 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("OZEÁS 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("OZEÁŠ 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("HOS 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("OZ 1:1").osis()).toEqual("Hos.1.1")
		`
		true
describe "Localized book Joel (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Joel (cs)", ->
		`
		expect(p.parse("Joel 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Jóel 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Jl 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Jo 1:1").osis()).toEqual("Joel.1.1")
		p.include_apocrypha(false)
		expect(p.parse("JOEL 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("JÓEL 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("JL 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("JO 1:1").osis()).toEqual("Joel.1.1")
		`
		true
describe "Localized book Amos (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Amos (cs)", ->
		`
		expect(p.parse("Amos 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("Ámos 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("Am 1:1").osis()).toEqual("Amos.1.1")
		p.include_apocrypha(false)
		expect(p.parse("AMOS 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("ÁMOS 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("AM 1:1").osis()).toEqual("Amos.1.1")
		`
		true
describe "Localized book Obad (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Obad (cs)", ->
		`
		expect(p.parse("Abdijas 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Abdijaš 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Abdijás 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Abdijáš 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Obadjas 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Obadjaš 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Obadjás 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Obadjáš 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Abdias 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Abdiaš 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Abdiás 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Abdiáš 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Obadja 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Obadjá 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Obad 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Abd 1:1").osis()).toEqual("Obad.1.1")
		p.include_apocrypha(false)
		expect(p.parse("ABDIJAS 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ABDIJAŠ 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ABDIJÁS 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ABDIJÁŠ 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OBADJAS 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OBADJAŠ 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OBADJÁS 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OBADJÁŠ 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ABDIAS 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ABDIAŠ 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ABDIÁS 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ABDIÁŠ 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OBADJA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OBADJÁ 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OBAD 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ABD 1:1").osis()).toEqual("Obad.1.1")
		`
		true
describe "Localized book Jonah (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Jonah (cs)", ->
		`
		expect(p.parse("Jonah 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Jonas 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Jonaš 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Jonás 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Jonáš 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Jon 1:1").osis()).toEqual("Jonah.1.1")
		p.include_apocrypha(false)
		expect(p.parse("JONAH 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("JONAS 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("JONAŠ 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("JONÁS 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("JONÁŠ 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("JON 1:1").osis()).toEqual("Jonah.1.1")
		`
		true
describe "Localized book Mic (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Mic (cs)", ->
		`
		expect(p.parse("Michaas 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Michaaš 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Michaás 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Michaáš 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Micheas 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Micheaš 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Micheás 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Micheáš 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Mich 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Mic 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Mi 1:1").osis()).toEqual("Mic.1.1")
		p.include_apocrypha(false)
		expect(p.parse("MICHAAS 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MICHAAŠ 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MICHAÁS 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MICHAÁŠ 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MICHEAS 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MICHEAŠ 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MICHEÁS 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MICHEÁŠ 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MICH 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MIC 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MI 1:1").osis()).toEqual("Mic.1.1")
		`
		true
describe "Localized book Nah (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Nah (cs)", ->
		`
		expect(p.parse("Nahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("Nah 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("Na 1:1").osis()).toEqual("Nah.1.1")
		p.include_apocrypha(false)
		expect(p.parse("NAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("NAH 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("NA 1:1").osis()).toEqual("Nah.1.1")
		`
		true
describe "Localized book Hab (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Hab (cs)", ->
		`
		expect(p.parse("Abakuk 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Abk 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Hab 1:1").osis()).toEqual("Hab.1.1")
		p.include_apocrypha(false)
		expect(p.parse("ABAKUK 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("ABK 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("HAB 1:1").osis()).toEqual("Hab.1.1")
		`
		true
describe "Localized book Zeph (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Zeph (cs)", ->
		`
		expect(p.parse("Sofonias 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Sofoniaš 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Sofoniás 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Sofoniáš 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Sofonjas 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Sofonjaš 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Sofonjás 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Sofonjáš 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Zeph 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Sf 1:1").osis()).toEqual("Zeph.1.1")
		p.include_apocrypha(false)
		expect(p.parse("SOFONIAS 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("SOFONIAŠ 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("SOFONIÁS 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("SOFONIÁŠ 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("SOFONJAS 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("SOFONJAŠ 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("SOFONJÁS 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("SOFONJÁŠ 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("ZEPH 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("SF 1:1").osis()).toEqual("Zeph.1.1")
		`
		true
describe "Localized book Hag (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Hag (cs)", ->
		`
		expect(p.parse("Aggeus 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Ageus 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Hag 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Ag 1:1").osis()).toEqual("Hag.1.1")
		p.include_apocrypha(false)
		expect(p.parse("AGGEUS 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("AGEUS 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("HAG 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("AG 1:1").osis()).toEqual("Hag.1.1")
		`
		true
describe "Localized book Zech (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Zech (cs)", ->
		`
		expect(p.parse("Zacharias 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Zachariaš 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Zachariás 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Zachariáš 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Zacharjas 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Zacharjaš 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Zacharjás 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Zacharjáš 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Zech 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Za 1:1").osis()).toEqual("Zech.1.1")
		p.include_apocrypha(false)
		expect(p.parse("ZACHARIAS 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZACHARIAŠ 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZACHARIÁS 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZACHARIÁŠ 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZACHARJAS 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZACHARJAŠ 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZACHARJÁS 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZACHARJÁŠ 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZECH 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZA 1:1").osis()).toEqual("Zech.1.1")
		`
		true
describe "Localized book Mal (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Mal (cs)", ->
		`
		expect(p.parse("Malachias 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Malachiaš 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Malachiás 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Malachiáš 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Mal 1:1").osis()).toEqual("Mal.1.1")
		p.include_apocrypha(false)
		expect(p.parse("MALACHIAS 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("MALACHIAŠ 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("MALACHIÁS 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("MALACHIÁŠ 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("MAL 1:1").osis()).toEqual("Mal.1.1")
		`
		true
describe "Localized book Matt (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Matt (cs)", ->
		`
		expect(p.parse("Evangelium podle Matouse 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Evangelium podle Matouše 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Matousovo evangelium 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Matoušovo evangelium 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Matous 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Matouš 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Matt 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Mat 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Mt 1:1").osis()).toEqual("Matt.1.1")
		p.include_apocrypha(false)
		expect(p.parse("EVANGELIUM PODLE MATOUSE 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EVANGELIUM PODLE MATOUŠE 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MATOUSOVO EVANGELIUM 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MATOUŠOVO EVANGELIUM 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MATOUS 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MATOUŠ 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MATT 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MAT 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MT 1:1").osis()).toEqual("Matt.1.1")
		`
		true
describe "Localized book Mark (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Mark (cs)", ->
		`
		expect(p.parse("Evangelium podle Marka 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Markovo evangelium 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Marek 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Mark 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Mk 1:1").osis()).toEqual("Mark.1.1")
		p.include_apocrypha(false)
		expect(p.parse("EVANGELIUM PODLE MARKA 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("MARKOVO EVANGELIUM 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("MAREK 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("MARK 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("MK 1:1").osis()).toEqual("Mark.1.1")
		`
		true
describe "Localized book Luke (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Luke (cs)", ->
		`
		expect(p.parse("Evangelium podle Lukase 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Evangelium podle Lukaše 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Evangelium podle Lukáse 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Evangelium podle Lukáše 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Lukasovo evangelium 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Lukašovo evangelium 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Lukásovo evangelium 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Lukášovo evangelium 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Lukas 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Lukaš 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Lukás 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Lukáš 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Luke 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Lk 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("L 1:1").osis()).toEqual("Luke.1.1")
		p.include_apocrypha(false)
		expect(p.parse("EVANGELIUM PODLE LUKASE 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EVANGELIUM PODLE LUKAŠE 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EVANGELIUM PODLE LUKÁSE 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EVANGELIUM PODLE LUKÁŠE 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LUKASOVO EVANGELIUM 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LUKAŠOVO EVANGELIUM 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LUKÁSOVO EVANGELIUM 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LUKÁŠOVO EVANGELIUM 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LUKAS 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LUKAŠ 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LUKÁS 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LUKÁŠ 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LUKE 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LK 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("L 1:1").osis()).toEqual("Luke.1.1")
		`
		true
describe "Localized book 1John (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1John (cs)", ->
		`
		expect(p.parse("Prvni list Januv 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Prvni list Janův 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("První list Januv 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("První list Janův 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. list Januv 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. list Janův 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. list Januv 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. list Janův 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 list Januv 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 list Janův 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I list Januv 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I list Janův 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Prvni Janova 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("První Janova 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Prvni Januv 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Prvni Janův 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("První Januv 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("První Janův 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. Janova 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. Janova 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Prvni Jan 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("První Jan 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 Janova 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. Januv 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. Janův 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I Janova 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. Januv 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. Janův 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 Januv 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 Janův 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I Januv 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I Janův 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Prvni J 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("První J 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. Jan 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. Jan 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 Jan 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1John 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I Jan 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. J 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. J 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 J 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I J 1:1").osis()).toEqual("1John.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PRVNI LIST JANUV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PRVNI LIST JANŮV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PRVNÍ LIST JANUV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PRVNÍ LIST JANŮV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. LIST JANUV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. LIST JANŮV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. LIST JANUV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. LIST JANŮV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 LIST JANUV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 LIST JANŮV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I LIST JANUV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I LIST JANŮV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PRVNI JANOVA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PRVNÍ JANOVA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PRVNI JANUV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PRVNI JANŮV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PRVNÍ JANUV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PRVNÍ JANŮV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. JANOVA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. JANOVA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PRVNI JAN 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PRVNÍ JAN 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 JANOVA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. JANUV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. JANŮV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I JANOVA 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. JANUV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. JANŮV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 JANUV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 JANŮV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I JANUV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I JANŮV 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PRVNI J 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("PRVNÍ J 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. JAN 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. JAN 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 JAN 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1JOHN 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I JAN 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. J 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. J 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 J 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I J 1:1").osis()).toEqual("1John.1.1")
		`
		true
describe "Localized book 2John (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2John (cs)", ->
		`
		expect(p.parse("Druha list Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druha list Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhy list Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhy list Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhá list Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhá list Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhý list Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhý list Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. list Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. list Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. list Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. list Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II list Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II list Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 list Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 list Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druha Janova 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhy Janova 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhá Janova 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhý Janova 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druha Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druha Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhy Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhy Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhá Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhá Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhý Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhý Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. Janova 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. Janova 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druha Jan 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhy Jan 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhá Jan 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhý Jan 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II Janova 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 Janova 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 Januv 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 Janův 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druha J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhy J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhá J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Druhý J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. Jan 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. Jan 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II Jan 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 Jan 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2John 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 J 1:1").osis()).toEqual("2John.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUHA LIST JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHA LIST JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHY LIST JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHY LIST JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÁ LIST JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÁ LIST JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÝ LIST JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÝ LIST JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. LIST JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. LIST JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. LIST JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. LIST JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II LIST JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II LIST JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 LIST JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 LIST JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHA JANOVA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHY JANOVA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÁ JANOVA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÝ JANOVA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHA JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHA JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHY JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHY JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÁ JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÁ JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÝ JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÝ JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. JANOVA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. JANOVA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHA JAN 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHY JAN 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÁ JAN 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÝ JAN 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II JANOVA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 JANOVA 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 JANUV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 JANŮV 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHA J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHY J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÁ J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("DRUHÝ J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. JAN 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. JAN 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II JAN 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 JAN 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2JOHN 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II J 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 J 1:1").osis()).toEqual("2John.1.1")
		`
		true
describe "Localized book 3John (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 3John (cs)", ->
		`
		expect(p.parse("Treti list Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Treti list Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Tretí list Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Tretí list Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třeti list Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třeti list Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třetí list Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třetí list Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. list Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. list Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III list Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III list Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. list Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. list Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 list Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 list Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Treti Janova 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Tretí Janova 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třeti Janova 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třetí Janova 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. Janova 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Treti Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Treti Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Tretí Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Tretí Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třeti Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třeti Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třetí Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třetí Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III Janova 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. Janova 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Treti Jan 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Tretí Jan 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třeti Jan 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třetí Jan 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 Janova 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. Jan 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 Januv 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 Janův 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III Jan 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Treti J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Tretí J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třeti J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Třetí J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. Jan 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 Jan 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3John 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 J 1:1").osis()).toEqual("3John.1.1")
		p.include_apocrypha(false)
		expect(p.parse("TRETI LIST JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRETI LIST JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRETÍ LIST JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRETÍ LIST JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETI LIST JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETI LIST JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETÍ LIST JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETÍ LIST JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. LIST JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. LIST JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III LIST JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III LIST JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. LIST JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. LIST JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 LIST JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 LIST JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRETI JANOVA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRETÍ JANOVA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETI JANOVA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETÍ JANOVA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. JANOVA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRETI JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRETI JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRETÍ JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRETÍ JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETI JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETI JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETÍ JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETÍ JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III JANOVA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. JANOVA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRETI JAN 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRETÍ JAN 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETI JAN 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETÍ JAN 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 JANOVA 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. JAN 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 JANUV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 JANŮV 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III JAN 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRETI J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TRETÍ J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETI J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("TŘETÍ J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. JAN 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 JAN 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3JOHN 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. J 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 J 1:1").osis()).toEqual("3John.1.1")
		`
		true
describe "Localized book John (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: John (cs)", ->
		`
		expect(p.parse("Evangelium podle Jana 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Janovo evangelium 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("John 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Jan 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("J 1:1").osis()).toEqual("John.1.1")
		p.include_apocrypha(false)
		expect(p.parse("EVANGELIUM PODLE JANA 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("JANOVO EVANGELIUM 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("JOHN 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("JAN 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("J 1:1").osis()).toEqual("John.1.1")
		`
		true
describe "Localized book Acts (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Acts (cs)", ->
		`
		expect(p.parse("Skutky apostolske 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Skutky apostolské 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Skutky apoštolske 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Skutky apoštolské 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Skutky apostolu 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Skutky apostolü 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Skutky apostolů 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Skutky apoštolu 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Skutky apoštolü 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Skutky apoštolů 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Skutky 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Acts 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Sk 1:1").osis()).toEqual("Acts.1.1")
		p.include_apocrypha(false)
		expect(p.parse("SKUTKY APOSTOLSKE 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("SKUTKY APOSTOLSKÉ 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("SKUTKY APOŠTOLSKE 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("SKUTKY APOŠTOLSKÉ 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("SKUTKY APOSTOLU 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("SKUTKY APOSTOLÜ 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("SKUTKY APOSTOLŮ 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("SKUTKY APOŠTOLU 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("SKUTKY APOŠTOLÜ 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("SKUTKY APOŠTOLŮ 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("SKUTKY 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("ACTS 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("SK 1:1").osis()).toEqual("Acts.1.1")
		`
		true
describe "Localized book Rom (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Rom (cs)", ->
		`
		expect(p.parse("List Rimanum 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("List Rimanům 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("List Rímanum 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("List Rímanům 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("List Řimanum 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("List Řimanům 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("List Římanum 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("List Římanům 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Rimanum 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Rimanům 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Rímanum 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Rímanům 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Řimanum 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Řimanům 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Římanum 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Římanům 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Rim 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Rom 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Rím 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Řim 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Řím 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("R 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Ř 1:1").osis()).toEqual("Rom.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST RIMANUM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("LIST RIMANŮM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("LIST RÍMANUM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("LIST RÍMANŮM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("LIST ŘIMANUM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("LIST ŘIMANŮM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("LIST ŘÍMANUM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("LIST ŘÍMANŮM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("RIMANUM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("RIMANŮM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("RÍMANUM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("RÍMANŮM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ŘIMANUM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ŘIMANŮM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ŘÍMANUM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ŘÍMANŮM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("RIM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ROM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("RÍM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ŘIM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ŘÍM 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("R 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Ř 1:1").osis()).toEqual("Rom.1.1")
		`
		true
describe "Localized book 2Cor (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Cor (cs)", ->
		`
		expect(p.parse("Druha list Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druha list Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhy list Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhy list Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhá list Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhá list Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhý list Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhý list Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druha list Korinskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druha list Korinským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhy list Korinskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhy list Korinským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhá list Korinskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhá list Korinským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhý list Korinskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhý list Korinským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. list Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. list Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. list Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. list Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II list Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II list Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. list Korinskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. list Korinským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 list Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 list Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. list Korinskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. list Korinským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II list Korinskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II list Korinským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 list Korinskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 list Korinským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druha Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druha Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhy Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhy Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhá Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhá Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhý Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhý Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 Korintskym 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 Korintským 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druha K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhy K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhá K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Druhý K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DruhaK 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DruhyK 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DruháK 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DruhýK 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 Kor 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2Cor 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2Kor 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II.K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2.K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IIK 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2K 1:1").osis()).toEqual("2Cor.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUHA LIST KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHA LIST KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHY LIST KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHY LIST KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÁ LIST KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÁ LIST KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÝ LIST KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÝ LIST KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHA LIST KORINSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHA LIST KORINSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHY LIST KORINSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHY LIST KORINSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÁ LIST KORINSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÁ LIST KORINSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÝ LIST KORINSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÝ LIST KORINSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. LIST KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. LIST KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. LIST KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. LIST KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II LIST KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II LIST KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. LIST KORINSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. LIST KORINSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 LIST KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 LIST KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. LIST KORINSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. LIST KORINSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II LIST KORINSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II LIST KORINSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 LIST KORINSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 LIST KORINSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHA KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHA KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHY KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHY KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÁ KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÁ KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÝ KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÝ KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 KORINTSKYM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 KORINTSKÝM 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHA K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHY K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÁ K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÝ K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHAK 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHYK 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÁK 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("DRUHÝK 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 KOR 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2COR 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2KOR 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II.K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2.K 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IIK 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2K 1:1").osis()).toEqual("2Cor.1.1")
		`
		true
describe "Localized book 1Cor (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Cor (cs)", ->
		`
		expect(p.parse("Prvni list Korintskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Prvni list Korintským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("První list Korintskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("První list Korintským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Prvni list Korinskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Prvni list Korinským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("První list Korinskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("První list Korinským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. list Korintskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. list Korintským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. list Korintskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. list Korintským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 list Korintskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 list Korintským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. list Korinskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. list Korinským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I list Korintskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I list Korintským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. list Korinskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. list Korinským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 list Korinskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 list Korinským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I list Korinskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I list Korinským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Prvni Korintskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Prvni Korintským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("První Korintskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("První Korintským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. Korintskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. Korintským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. Korintskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. Korintským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 Korintskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 Korintským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I Korintskym 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I Korintským 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Prvni Kor 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("První Kor 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Prvni K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("První K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. Kor 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. Kor 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PrvniK 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PrvníK 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 Kor 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I Kor 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1Cor 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1.K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I.K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IK 1:1").osis()).toEqual("1Cor.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PRVNI LIST KORINTSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNI LIST KORINTSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNÍ LIST KORINTSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNÍ LIST KORINTSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNI LIST KORINSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNI LIST KORINSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNÍ LIST KORINSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNÍ LIST KORINSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. LIST KORINTSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. LIST KORINTSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. LIST KORINTSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. LIST KORINTSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 LIST KORINTSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 LIST KORINTSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. LIST KORINSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. LIST KORINSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I LIST KORINTSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I LIST KORINTSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. LIST KORINSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. LIST KORINSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 LIST KORINSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 LIST KORINSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I LIST KORINSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I LIST KORINSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNI KORINTSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNI KORINTSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNÍ KORINTSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNÍ KORINTSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. KORINTSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. KORINTSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. KORINTSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. KORINTSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 KORINTSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 KORINTSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I KORINTSKYM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I KORINTSKÝM 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNI KOR 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNÍ KOR 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNI K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNÍ K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. KOR 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. KOR 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNIK 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("PRVNÍK 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 KOR 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I KOR 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1COR 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1.K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I.K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1K 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IK 1:1").osis()).toEqual("1Cor.1.1")
		`
		true
describe "Localized book Gal (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Gal (cs)", ->
		`
		expect(p.parse("List Galatskym 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("List Galatským 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("Galatskym 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("Galatským 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("Gal 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("Ga 1:1").osis()).toEqual("Gal.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST GALATSKYM 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("LIST GALATSKÝM 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("GALATSKYM 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("GALATSKÝM 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("GAL 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("GA 1:1").osis()).toEqual("Gal.1.1")
		`
		true
describe "Localized book Eph (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Eph (cs)", ->
		`
		expect(p.parse("List Efezanum 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List Efezanům 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List Efezskym 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List Efezským 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List Efézskym 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("List Efézským 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Efezskym 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Efezským 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Efeskym 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Efeským 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Eph 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Ef 1:1").osis()).toEqual("Eph.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST EFEZANUM 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST EFEZANŮM 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST EFEZSKYM 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST EFEZSKÝM 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST EFÉZSKYM 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("LIST EFÉZSKÝM 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EFEZSKYM 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EFEZSKÝM 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EFESKYM 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EFESKÝM 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EPH 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EF 1:1").osis()).toEqual("Eph.1.1")
		`
		true
describe "Localized book Phil (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Phil (cs)", ->
		`
		expect(p.parse("List Filipskym 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("List Filipským 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Filipenskym 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Filipenským 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Filipskym 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Filipským 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Phil 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Fp 1:1").osis()).toEqual("Phil.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST FILIPSKYM 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("LIST FILIPSKÝM 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FILIPENSKYM 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FILIPENSKÝM 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FILIPSKYM 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FILIPSKÝM 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("PHIL 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FP 1:1").osis()).toEqual("Phil.1.1")
		`
		true
describe "Localized book Col (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Col (cs)", ->
		`
		expect(p.parse("List Kolosanum 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("List Kolosanům 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("List Koloskym 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("List Koloským 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Kolossenskym 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Kolossenským 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Kolosenskym 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Kolosenským 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Kolosanum 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Kolosanům 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Koloskym 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Koloským 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Col 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Kol 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Ko 1:1").osis()).toEqual("Col.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST KOLOSANUM 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("LIST KOLOSANŮM 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("LIST KOLOSKYM 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("LIST KOLOSKÝM 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOLOSSENSKYM 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOLOSSENSKÝM 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOLOSENSKYM 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOLOSENSKÝM 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOLOSANUM 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOLOSANŮM 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOLOSKYM 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOLOSKÝM 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("COL 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOL 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KO 1:1").osis()).toEqual("Col.1.1")
		`
		true
describe "Localized book 2Thess (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Thess (cs)", ->
		`
		expect(p.parse("Druha list Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha list Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy list Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy list Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá list Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá list Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý list Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý list Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha Tessalonicenskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha Tessalonicenským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy Tessalonicenskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy Tessalonicenským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá Tessalonicenskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá Tessalonicenským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý Tessalonicenskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý Tessalonicenským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. list Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. list Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. list Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. list Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha list Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha list Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha list Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha list Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy list Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy list Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy list Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy list Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá list Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá list Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá list Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá list Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý list Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý list Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý list Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý list Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II list Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II list Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Tessalonicenskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Tessalonicenským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 list Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 list Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Tessalonicenskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Tessalonicenským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Tessalonicenskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Tessalonicenským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Tessalonicenskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Tessalonicenským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. list Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. list Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. list Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. list Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. list Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. list Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. list Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. list Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II list Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II list Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II list Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II list Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 list Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 list Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 list Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 list Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Tesalonickym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Tesalonickým 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Solunskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Solunským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Soluňskym 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Soluňským 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha Sol 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy Sol 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá Sol 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý Sol 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druha Te 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhy Te 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhá Te 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Druhý Te 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Sol 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Sol 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2Thess 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Sol 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Te 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Sol 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Te 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Te 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Te 1:1").osis()).toEqual("2Thess.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUHA LIST TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA LIST TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY LIST TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY LIST TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ LIST TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ LIST TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ LIST TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ LIST TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA TESSALONICENSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA TESSALONICENSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY TESSALONICENSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY TESSALONICENSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ TESSALONICENSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ TESSALONICENSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ TESSALONICENSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ TESSALONICENSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. LIST TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. LIST TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. LIST TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. LIST TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA LIST SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA LIST SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA LIST SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA LIST SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY LIST SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY LIST SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY LIST SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY LIST SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ LIST SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ LIST SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ LIST SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ LIST SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ LIST SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ LIST SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ LIST SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ LIST SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II LIST TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II LIST TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. TESSALONICENSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. TESSALONICENSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 LIST TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 LIST TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. TESSALONICENSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. TESSALONICENSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II TESSALONICENSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II TESSALONICENSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 TESSALONICENSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 TESSALONICENSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. LIST SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. LIST SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. LIST SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. LIST SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. LIST SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. LIST SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. LIST SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. LIST SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II LIST SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II LIST SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II LIST SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II LIST SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 LIST SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 LIST SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 LIST SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 LIST SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 TESALONICKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 TESALONICKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 SOLUNSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 SOLUNSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 SOLUŇSKYM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 SOLUŇSKÝM 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA SOL 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY SOL 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ SOL 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ SOL 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHA TE 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHY TE 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÁ TE 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("DRUHÝ TE 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. SOL 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. SOL 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2THESS 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II SOL 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. TE 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 SOL 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. TE 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II TE 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 TE 1:1").osis()).toEqual("2Thess.1.1")
		`
		true
describe "Localized book 1Thess (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Thess (cs)", ->
		`
		expect(p.parse("Prvni list Tesalonickym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni list Tesalonickým 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První list Tesalonickym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První list Tesalonickým 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni Tessalonicenskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni Tessalonicenským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První Tessalonicenskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První Tessalonicenským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. list Tesalonickym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. list Tesalonickým 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. list Tesalonickym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. list Tesalonickým 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni list Solunskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni list Solunským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni list Soluňskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni list Soluňským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První list Solunskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První list Solunským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První list Soluňskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První list Soluňským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 list Tesalonickym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 list Tesalonickým 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Tessalonicenskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Tessalonicenským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I list Tesalonickym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I list Tesalonickým 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Tessalonicenskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Tessalonicenským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Tessalonicenskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Tessalonicenským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Tessalonicenskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Tessalonicenským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni Tesalonickym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni Tesalonickým 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První Tesalonickym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První Tesalonickým 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. list Solunskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. list Solunským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. list Soluňskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. list Soluňským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. list Solunskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. list Solunským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. list Soluňskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. list Soluňským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 list Solunskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 list Solunským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 list Soluňskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 list Soluňským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I list Solunskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I list Solunským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I list Soluňskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I list Soluňským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Tesalonickym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Tesalonickým 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Tesalonickym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Tesalonickým 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni Solunskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni Solunským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni Soluňskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni Soluňským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První Solunskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První Solunským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První Soluňskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První Soluňským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Tesalonickym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Tesalonickým 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Tesalonickym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Tesalonickým 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Solunskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Solunským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Soluňskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Soluňským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Solunskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Solunským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Soluňskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Soluňským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Solunskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Solunským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Soluňskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Soluňským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Solunskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Solunským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Soluňskym 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Soluňským 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni Sol 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První Sol 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Prvni Te 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("První Te 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Sol 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1Thess 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Sol 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Sol 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Te 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Sol 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Te 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Te 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Te 1:1").osis()).toEqual("1Thess.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PRVNI LIST TESALONICKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI LIST TESALONICKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ LIST TESALONICKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ LIST TESALONICKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI TESSALONICENSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI TESSALONICENSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ TESSALONICENSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ TESSALONICENSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. LIST TESALONICKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. LIST TESALONICKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. LIST TESALONICKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. LIST TESALONICKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI LIST SOLUNSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI LIST SOLUNSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI LIST SOLUŇSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI LIST SOLUŇSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ LIST SOLUNSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ LIST SOLUNSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ LIST SOLUŇSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ LIST SOLUŇSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 LIST TESALONICKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 LIST TESALONICKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. TESSALONICENSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. TESSALONICENSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I LIST TESALONICKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I LIST TESALONICKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. TESSALONICENSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. TESSALONICENSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 TESSALONICENSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 TESSALONICENSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I TESSALONICENSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I TESSALONICENSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI TESALONICKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI TESALONICKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ TESALONICKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ TESALONICKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. LIST SOLUNSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. LIST SOLUNSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. LIST SOLUŇSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. LIST SOLUŇSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. LIST SOLUNSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. LIST SOLUNSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. LIST SOLUŇSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. LIST SOLUŇSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 LIST SOLUNSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 LIST SOLUNSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 LIST SOLUŇSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 LIST SOLUŇSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I LIST SOLUNSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I LIST SOLUNSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I LIST SOLUŇSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I LIST SOLUŇSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. TESALONICKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. TESALONICKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. TESALONICKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. TESALONICKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI SOLUNSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI SOLUNSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI SOLUŇSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI SOLUŇSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ SOLUNSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ SOLUNSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ SOLUŇSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ SOLUŇSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 TESALONICKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 TESALONICKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I TESALONICKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I TESALONICKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. SOLUNSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. SOLUNSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. SOLUŇSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. SOLUŇSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. SOLUNSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. SOLUNSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. SOLUŇSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. SOLUŇSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 SOLUNSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 SOLUNSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 SOLUŇSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 SOLUŇSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I SOLUNSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I SOLUNSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I SOLUŇSKYM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I SOLUŇSKÝM 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI SOL 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ SOL 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNI TE 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("PRVNÍ TE 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. SOL 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1THESS 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. SOL 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 SOL 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. TE 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I SOL 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. TE 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 TE 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I TE 1:1").osis()).toEqual("1Thess.1.1")
		`
		true
describe "Localized book 2Tim (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Tim (cs)", ->
		`
		expect(p.parse("Druha list Timetejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druha list Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhy list Timetejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhy list Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhá list Timetejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhá list Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhý list Timetejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhý list Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druha list Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhy list Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhá list Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhý list Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. list Timetejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. list Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. list Timetejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. list Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II list Timetejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II list Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. list Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 list Timetejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 list Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. list Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II list Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 list Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druha Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhy Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhá Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhý Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druha Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhy Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhá Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhý Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druha Timoteus 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhy Timoteus 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhá Timoteus 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhý Timoteus 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 Timotejovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. Timoteus 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 Timoteovi 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. Timoteus 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II Timoteus 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 Timoteus 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druha Tim 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhy Tim 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhá Tim 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhý Tim 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druha Tm 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhy Tm 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhá Tm 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Druhý Tm 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. Tim 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. Tim 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II Tim 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. Tm 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 Tim 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. Tm 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II Tm 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 Tm 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2Tim 1:1").osis()).toEqual("2Tim.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUHA LIST TIMETEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHA LIST TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHY LIST TIMETEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHY LIST TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÁ LIST TIMETEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÁ LIST TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÝ LIST TIMETEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÝ LIST TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHA LIST TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHY LIST TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÁ LIST TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÝ LIST TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. LIST TIMETEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. LIST TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. LIST TIMETEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. LIST TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II LIST TIMETEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II LIST TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. LIST TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 LIST TIMETEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 LIST TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. LIST TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II LIST TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 LIST TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHA TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHY TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÁ TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÝ TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHA TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHY TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÁ TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÝ TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHA TIMOTEUS 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHY TIMOTEUS 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÁ TIMOTEUS 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÝ TIMOTEUS 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 TIMOTEJOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. TIMOTEUS 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 TIMOTEOVI 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. TIMOTEUS 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II TIMOTEUS 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 TIMOTEUS 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHA TIM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHY TIM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÁ TIM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÝ TIM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHA TM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHY TM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÁ TM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("DRUHÝ TM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. TIM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. TIM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II TIM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. TM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 TIM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. TM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II TM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 TM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2TIM 1:1").osis()).toEqual("2Tim.1.1")
		`
		true
describe "Localized book 1Tim (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Tim (cs)", ->
		`
		expect(p.parse("Prvni list Timotejovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("První list Timotejovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Prvni list Timeteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Prvni list Timoteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("První list Timeteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("První list Timoteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. list Timotejovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. list Timotejovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 list Timotejovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. list Timeteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. list Timoteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I list Timotejovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. list Timeteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. list Timoteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 list Timeteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 list Timoteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I list Timeteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I list Timoteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Prvni Timotejovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("První Timotejovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Prvni Timoteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("První Timoteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Prvni Timoteus 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("První Timoteus 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. Timotejovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. Timotejovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 Timotejovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. Timoteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I Timotejovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. Timoteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 Timoteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. Timoteus 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I Timoteovi 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. Timoteus 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 Timoteus 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I Timoteus 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Prvni Tim 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("První Tim 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Prvni Tm 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("První Tm 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. Tim 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. Tim 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 Tim 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. Tm 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I Tim 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. Tm 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 Tm 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1Tim 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I Tm 1:1").osis()).toEqual("1Tim.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PRVNI LIST TIMOTEJOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNÍ LIST TIMOTEJOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNI LIST TIMETEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNI LIST TIMOTEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNÍ LIST TIMETEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNÍ LIST TIMOTEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. LIST TIMOTEJOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. LIST TIMOTEJOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 LIST TIMOTEJOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. LIST TIMETEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. LIST TIMOTEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I LIST TIMOTEJOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. LIST TIMETEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. LIST TIMOTEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 LIST TIMETEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 LIST TIMOTEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I LIST TIMETEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I LIST TIMOTEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNI TIMOTEJOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNÍ TIMOTEJOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNI TIMOTEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNÍ TIMOTEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNI TIMOTEUS 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNÍ TIMOTEUS 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. TIMOTEJOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. TIMOTEJOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 TIMOTEJOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. TIMOTEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I TIMOTEJOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. TIMOTEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 TIMOTEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. TIMOTEUS 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I TIMOTEOVI 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. TIMOTEUS 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 TIMOTEUS 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I TIMOTEUS 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNI TIM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNÍ TIM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNI TM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("PRVNÍ TM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. TIM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. TIM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 TIM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. TM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I TIM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. TM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 TM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1TIM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I TM 1:1").osis()).toEqual("1Tim.1.1")
		`
		true
describe "Localized book Titus (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Titus (cs)", ->
		`
		expect(p.parse("List Titovi 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("Titovi 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("Titus 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("Tit 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("Tt 1:1").osis()).toEqual("Titus.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST TITOVI 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("TITOVI 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("TITUS 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("TIT 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("TT 1:1").osis()).toEqual("Titus.1.1")
		`
		true
describe "Localized book Phlm (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Phlm (cs)", ->
		`
		expect(p.parse("List Filemonovi 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("Filemonovi 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("Filemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("Phlm 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("Flm 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("Fm 1:1").osis()).toEqual("Phlm.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST FILEMONOVI 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("FILEMONOVI 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("FILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("PHLM 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("FLM 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("FM 1:1").osis()).toEqual("Phlm.1.1")
		`
		true
describe "Localized book Heb (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Heb (cs)", ->
		`
		expect(p.parse("List Hebrejum 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("List Hebrejům 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("List Zidum 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("List Zidům 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("List Židum 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("List Židům 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Hebrejum 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Hebrejům 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Zidum 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Zidům 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Židum 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Židům 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Heb 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Zd 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Žd 1:1").osis()).toEqual("Heb.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST HEBREJUM 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("LIST HEBREJŮM 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("LIST ZIDUM 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("LIST ZIDŮM 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("LIST ŽIDUM 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("LIST ŽIDŮM 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("HEBREJUM 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("HEBREJŮM 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ZIDUM 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ZIDŮM 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ŽIDUM 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ŽIDŮM 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("HEB 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ZD 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ŽD 1:1").osis()).toEqual("Heb.1.1")
		`
		true
describe "Localized book Jas (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Jas (cs)", ->
		`
		expect(p.parse("List Jakubuv 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("List Jakubův 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("Jakubuv 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("Jakubův 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("Jakub 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("Jak 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("Jas 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("Jk 1:1").osis()).toEqual("Jas.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST JAKUBUV 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("LIST JAKUBŮV 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("JAKUBUV 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("JAKUBŮV 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("JAKUB 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("JAK 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("JAS 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("JK 1:1").osis()).toEqual("Jas.1.1")
		`
		true
describe "Localized book 2Pet (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Pet (cs)", ->
		`
		expect(p.parse("Druha list Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druha list Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhy list Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhy list Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhá list Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhá list Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhý list Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhý list Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. list Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. list Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. list Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. list Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II list Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II list Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 list Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 list Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druha Petrova 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhy Petrova 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhá Petrova 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhý Petrova 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druha Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druha Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhy Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhy Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhá Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhá Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhý Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhý Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. Petrova 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. Petrova 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druha Petr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhy Petr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhá Petr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhý Petr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II Petrova 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 Petrova 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 Petruv 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 Petrův 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druha Pt 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhy Pt 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhá Pt 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhý Pt 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. Petr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. Petr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druha P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhy P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhá P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Druhý P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II Petr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 Petr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. Pt 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. Pt 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II Pt 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 Pt 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2Pet 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 P 1:1").osis()).toEqual("2Pet.1.1")
		p.include_apocrypha(false)
		expect(p.parse("DRUHA LIST PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHA LIST PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHY LIST PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHY LIST PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÁ LIST PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÁ LIST PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÝ LIST PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÝ LIST PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. LIST PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. LIST PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. LIST PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. LIST PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II LIST PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II LIST PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 LIST PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 LIST PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHA PETROVA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHY PETROVA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÁ PETROVA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÝ PETROVA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHA PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHA PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHY PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHY PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÁ PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÁ PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÝ PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÝ PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. PETROVA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. PETROVA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHA PETR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHY PETR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÁ PETR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÝ PETR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II PETROVA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 PETROVA 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 PETRUV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 PETRŮV 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHA PT 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHY PT 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÁ PT 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÝ PT 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. PETR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. PETR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHA P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHY P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÁ P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("DRUHÝ P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II PETR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 PETR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. PT 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. PT 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II PT 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 PT 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2PET 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II P 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 P 1:1").osis()).toEqual("2Pet.1.1")
		`
		true
describe "Localized book 1Pet (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Pet (cs)", ->
		`
		expect(p.parse("Prvni list Petruv 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Prvni list Petrův 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("První list Petruv 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("První list Petrův 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. list Petruv 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. list Petrův 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. list Petruv 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. list Petrův 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 list Petruv 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 list Petrův 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I list Petruv 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I list Petrův 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Prvni Petrova 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("První Petrova 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Prvni Petruv 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Prvni Petrův 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("První Petruv 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("První Petrův 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. Petrova 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. Petrova 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Prvni Petr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("První Petr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 Petrova 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. Petruv 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. Petrův 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I Petrova 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. Petruv 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. Petrův 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 Petruv 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 Petrův 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I Petruv 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I Petrův 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Prvni Pt 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("První Pt 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. Petr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. Petr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Prvni P 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("První P 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 Petr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I Petr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. Pt 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. Pt 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 Pt 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. P 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1Pet 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I Pt 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. P 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 P 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I P 1:1").osis()).toEqual("1Pet.1.1")
		p.include_apocrypha(false)
		expect(p.parse("PRVNI LIST PETRUV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNI LIST PETRŮV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNÍ LIST PETRUV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNÍ LIST PETRŮV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. LIST PETRUV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. LIST PETRŮV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. LIST PETRUV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. LIST PETRŮV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 LIST PETRUV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 LIST PETRŮV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I LIST PETRUV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I LIST PETRŮV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNI PETROVA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNÍ PETROVA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNI PETRUV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNI PETRŮV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNÍ PETRUV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNÍ PETRŮV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. PETROVA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. PETROVA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNI PETR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNÍ PETR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 PETROVA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. PETRUV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. PETRŮV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I PETROVA 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. PETRUV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. PETRŮV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 PETRUV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 PETRŮV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I PETRUV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I PETRŮV 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNI PT 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNÍ PT 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. PETR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. PETR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNI P 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PRVNÍ P 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 PETR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I PETR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. PT 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. PT 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 PT 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. P 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1PET 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I PT 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. P 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 P 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I P 1:1").osis()).toEqual("1Pet.1.1")
		`
		true
describe "Localized book Jude (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Jude (cs)", ->
		`
		expect(p.parse("List Juduv 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("List Judův 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("Judova 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("Juduv 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("Judův 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("Juda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("Jude 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("Jd 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("Ju 1:1").osis()).toEqual("Jude.1.1")
		p.include_apocrypha(false)
		expect(p.parse("LIST JUDUV 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("LIST JUDŮV 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("JUDOVA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("JUDUV 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("JUDŮV 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("JUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("JUDE 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("JD 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("JU 1:1").osis()).toEqual("Jude.1.1")
		`
		true
describe "Localized book Tob (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Tob (cs)", ->
		`
		expect(p.parse("Tobijas 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tobijaš 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tobijás 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tobijáš 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tóbijas 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tóbijaš 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tóbijás 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tóbijáš 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tobias 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tobiaš 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tobiás 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tobiáš 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tobit 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tóbit 1:1").osis()).toEqual("Tob.1.1")
		expect(p.parse("Tob 1:1").osis()).toEqual("Tob.1.1")
		`
		true
describe "Localized book Jdt (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Jdt (cs)", ->
		`
		expect(p.parse("Judit 1:1").osis()).toEqual("Jdt.1.1")
		expect(p.parse("Júdit 1:1").osis()).toEqual("Jdt.1.1")
		expect(p.parse("Jdt 1:1").osis()).toEqual("Jdt.1.1")
		expect(p.parse("Jud 1:1").osis()).toEqual("Jdt.1.1")
		expect(p.parse("Júd 1:1").osis()).toEqual("Jdt.1.1")
		`
		true
describe "Localized book Bar (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Bar (cs)", ->
		`
		expect(p.parse("Kniha Baruchova 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Kniha Báruchova 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Kniha Barukova 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Kniha Bárukova 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Baruch 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Báruch 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Baruk 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Báruk 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Bar 1:1").osis()).toEqual("Bar.1.1")
		expect(p.parse("Bár 1:1").osis()).toEqual("Bar.1.1")
		`
		true
describe "Localized book Sus (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: Sus (cs)", ->
		`
		expect(p.parse("Zuzana 1:1").osis()).toEqual("Sus.1.1")
		expect(p.parse("Sus 1:1").osis()).toEqual("Sus.1.1")
		expect(p.parse("Zuz 1:1").osis()).toEqual("Sus.1.1")
		`
		true
describe "Localized book 2Macc (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 2Macc (cs)", ->
		`
		expect(p.parse("Druha Makabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druha Makabejská 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druhy Makabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druhy Makabejská 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druhá Makabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druhá Makabejská 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druhý Makabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druhý Makabejská 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II. Makabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II. Makabejská 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2. Makabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2. Makabejská 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II Makabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II Makabejská 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2 Makabejska 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2 Makabejská 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druha Mak 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druhy Mak 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druhá Mak 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("Druhý Mak 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II. Mak 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2. Mak 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("II Mak 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2 Mak 1:1").osis()).toEqual("2Macc.1.1")
		expect(p.parse("2Macc 1:1").osis()).toEqual("2Macc.1.1")
		`
		true
describe "Localized book 3Macc (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 3Macc (cs)", ->
		`
		expect(p.parse("Treti Makabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Treti Makabejská 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Tretí Makabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Tretí Makabejská 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Třeti Makabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Třeti Makabejská 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Třetí Makabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Třetí Makabejská 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III. Makabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III. Makabejská 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III Makabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III Makabejská 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3. Makabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3. Makabejská 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3 Makabejska 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3 Makabejská 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Treti Mak 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Tretí Mak 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Třeti Mak 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("Třetí Mak 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III. Mak 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("III Mak 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3. Mak 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3 Mak 1:1").osis()).toEqual("3Macc.1.1")
		expect(p.parse("3Macc 1:1").osis()).toEqual("3Macc.1.1")
		`
		true
describe "Localized book 4Macc (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 4Macc (cs)", ->
		`
		expect(p.parse("Ctvrta Makabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Ctvrta Makabejská 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Ctvrtá Makabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Ctvrtá Makabejská 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Čtvrta Makabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Čtvrta Makabejská 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Čtvrtá Makabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Čtvrtá Makabejská 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV. Makabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV. Makabejská 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4. Makabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4. Makabejská 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV Makabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV Makabejská 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4 Makabejska 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4 Makabejská 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Ctvrta Mak 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Ctvrtá Mak 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Čtvrta Mak 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("Čtvrtá Mak 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV. Mak 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4. Mak 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("IV Mak 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4 Mak 1:1").osis()).toEqual("4Macc.1.1")
		expect(p.parse("4Macc 1:1").osis()).toEqual("4Macc.1.1")
		`
		true
describe "Localized book 1Macc (cs)", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore",book_sequence_strategy: "ignore",osis_compaction_strategy: "bc",captive_end_digits_strategy: "delete"
		p.include_apocrypha true
	it "should handle book: 1Macc (cs)", ->
		`
		expect(p.parse("Prvni Makabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Prvni Makabejská 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("První Makabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("První Makabejská 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1. Makabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1. Makabejská 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I. Makabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I. Makabejská 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1 Makabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1 Makabejská 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I Makabejska 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I Makabejská 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("Prvni Mak 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("První Mak 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1. Mak 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I. Mak 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1 Mak 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("1Macc 1:1").osis()).toEqual("1Macc.1.1")
		expect(p.parse("I Mak 1:1").osis()).toEqual("1Macc.1.1")
		`
		true

describe "Miscellaneous tests", ->
	p = {}
	beforeEach ->
		p = new bcv_parser
		p.set_options book_alone_strategy: "ignore", book_sequence_strategy: "ignore", osis_compaction_strategy: "bc", captive_end_digits_strategy: "delete"
		p.include_apocrypha true

	it "should return the expected language", ->
		expect(p.languages).toEqual ["cs"]

	it "should handle ranges (cs)", ->
		expect(p.parse("Titus 1:1 - 2").osis()).toEqual "Titus.1.1-Titus.1.2"
		expect(p.parse("Matt 1-2").osis()).toEqual "Matt.1-Matt.2"
		expect(p.parse("Phlm 2 - 3").osis()).toEqual "Phlm.1.2-Phlm.1.3"
	it "should handle chapters (cs)", ->
		expect(p.parse("Titus 1:1, kapitola 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 KAPITOLA 6").osis()).toEqual "Matt.3.4,Matt.6"
		expect(p.parse("Titus 1:1, kapitoly 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 KAPITOLY 6").osis()).toEqual "Matt.3.4,Matt.6"
		expect(p.parse("Titus 1:1, kapitol 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 KAPITOL 6").osis()).toEqual "Matt.3.4,Matt.6"
		expect(p.parse("Titus 1:1, kap. 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 KAP. 6").osis()).toEqual "Matt.3.4,Matt.6"
		expect(p.parse("Titus 1:1, kap 2").osis()).toEqual "Titus.1.1,Titus.2"
		expect(p.parse("Matt 3:4 KAP 6").osis()).toEqual "Matt.3.4,Matt.6"
	it "should handle verses (cs)", ->
		expect(p.parse("Exod 1:1 verše 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm VERŠE 6").osis()).toEqual "Phlm.1.6"
		expect(p.parse("Exod 1:1 verse 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm VERSE 6").osis()).toEqual "Phlm.1.6"
	it "should handle 'and' (cs)", ->
		expect(p.parse("Exod 1:1 a 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm 2 A 6").osis()).toEqual "Phlm.1.2,Phlm.1.6"
		expect(p.parse("Exod 1:1 srv. 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm 2 SRV. 6").osis()).toEqual "Phlm.1.2,Phlm.1.6"
		expect(p.parse("Exod 1:1 srv 3").osis()).toEqual "Exod.1.1,Exod.1.3"
		expect(p.parse("Phlm 2 SRV 6").osis()).toEqual "Phlm.1.2,Phlm.1.6"
	it "should handle titles (cs)", ->
		expect(p.parse("Ps 3 titul, 4:2, 5:titul").osis()).toEqual "Ps.3.1,Ps.4.2,Ps.5.1"
		expect(p.parse("PS 3 TITUL, 4:2, 5:TITUL").osis()).toEqual "Ps.3.1,Ps.4.2,Ps.5.1"
	it "should handle 'ff' (cs)", ->
		expect(p.parse("Rev 3ff, 4:2ff").osis()).toEqual "Rev.3-Rev.22,Rev.4.2-Rev.4.11"
		expect(p.parse("REV 3 FF, 4:2 FF").osis()).toEqual "Rev.3-Rev.22,Rev.4.2-Rev.4.11"
	it "should handle translations (cs)", ->
		expect(p.parse("Lev 1 (B21)").osis_and_translations()).toEqual [["Lev.1", "B21"]]
		expect(p.parse("lev 1 b21").osis_and_translations()).toEqual [["Lev.1", "B21"]]
	it "should handle book ranges (cs)", ->
		p.set_options {book_alone_strategy: "full", book_range_strategy: "include"}
		expect(p.parse("První - Třetí  J").osis()).toEqual "1John.1-3John.1"
	it "should handle boundaries (cs)", ->
		p.set_options {book_alone_strategy: "full"}
		expect(p.parse("\u2014Matt\u2014").osis()).toEqual "Matt.1-Matt.28"
		expect(p.parse("\u201cMatt 1:1\u201d").osis()).toEqual "Matt.1.1"
